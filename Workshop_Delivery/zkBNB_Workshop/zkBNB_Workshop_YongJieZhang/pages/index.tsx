//@ts-nocheck
import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { Client } from '@bnb-chain/zkbnb-js-sdk';
import NFTGallery from '@/components/NFTGallery'

const inter = Inter({ subsets: ['latin'] })
const client = new Client('https://api-testnet.zkbnbchain.org')

async function fetchNFT() {
  // first get the account index by address
  const acct_res = await client.getAccountByL1Address("0x234348aBAc3Bd685097696D896157b4A432b074e")

  // then get the NFTs by account index
  const index = acct_res.index
  const requestParm = {accountIndex: index, offset: 0, limit: 10}
  const data = await client.getNftsByAccountIndex(requestParm)

  // preload all the metadata
  for (const nft of data.nfts) {
    const metadata_url = 'https://ipfs.io/ipfs/' + nft.ipfs_id
    const resp = await fetch(metadata_url)
    const resp_json = await resp.json()
    nft.metadata = JSON.parse(resp_json.meta_data)
  }

  return data.nfts
}

export const getStaticProps = async () => {
  try {
    console.log("Getting NFTs...")

    const nfts = await fetchNFT()
    const props = JSON.stringify(nfts)

    return {
      props: {
        props
      },
      revalidate: 600
    };
  } catch (err) {
    console.error('page error', err)
    // we don't want to publish the error version of this page, so
    // let next.js know explicitly that incremental SSG failed
    throw err
  }
}

export default function Home(props) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1>Jack_Telprotocol&apos;s zkBNB NFT showcase</h1>
        <NFTGallery {...props} />
      </main>
    </>
  )
}
