{
	"id": "49d058feb8ac75c09c9b3b522db80dcb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"PolarAI/SushiToken_HKHH.sol": {
				"content": "pragma solidity ^0.6.0;\nimport \"./interface.sol\";\n\n// SushiToken with Governance.\ncontract SushiToken is ERC20(\"SushiToken\", \"SUSHI\"), Ownable {\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\n    function mint(address _to, uint256 _amount) public onlyOwner {\n        _mint(_to, _amount);\n        _moveDelegates(address(0), _delegates[_to], _amount);\n    }\n\n    // Copied and modified from YAM code:\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernanceStorage.sol\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernance.sol\n    // Which is copied and modified from COMPOUND:\n    // https://github.com/compound-finance/compound-protocol/blob/master/contracts/Governance/Comp.sol\n\n    /// @notice A record of each accounts delegate\n    mapping (address => address) internal _delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint256 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping (address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping (address => uint) public nonces;\n\n      /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance);\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegator The address to get delegatee for\n     */\n    function delegates(address delegator)\n        external\n        view\n        returns (address)\n    {\n        return _delegates[delegator];\n    }\n\n   /**\n    * @notice Delegate votes from `msg.sender` to `delegatee`\n    * @param delegatee The address to delegate votes to\n    */\n    function delegate(address delegatee) external {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(\n        address delegatee,\n        uint nonce,\n        uint expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    )\n        external\n    {\n        bytes32 domainSeparator = keccak256(\n            abi.encode(\n                DOMAIN_TYPEHASH,\n                keccak256(bytes(name())),\n                getChainId(),\n                address(this)\n            )\n        );\n\n        bytes32 structHash = keccak256(\n            abi.encode(\n                DELEGATION_TYPEHASH,\n                delegatee,\n                nonce,\n                expiry\n            )\n        );\n\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                domainSeparator,\n                structHash\n            )\n        );\n\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"SUSHI::delegateBySig: invalid signature\");\n        require(nonce == nonces[signatory]++, \"SUSHI::delegateBySig: invalid nonce\");\n        require(now <= expiry, \"SUSHI::delegateBySig: signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account)\n        external\n        view\n        returns (uint256)\n    {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint blockNumber)\n        external\n        view\n        returns (uint256)\n    {\n        require(blockNumber < block.number, \"SUSHI::getPriorVotes: not yet determined\");\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    function _delegate(address delegator, address delegatee)\n        internal\n    {\n        address currentDelegate = _delegates[delegator];\n        uint256 delegatorBalance = balanceOf(delegator); // balance of underlying SUSHIs (not scaled);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                // decrease old representative\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint256 srcRepNew = srcRepOld.sub(amount);\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                // increase new representative\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint256 dstRepNew = dstRepOld.add(amount);\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        address delegatee,\n        uint32 nCheckpoints,\n        uint256 oldVotes,\n        uint256 newVotes\n    )\n        internal\n    {\n        uint32 blockNumber = safe32(block.number, \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\");\n\n        if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n        } else {\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\n            numCheckpoints[delegatee] = nCheckpoints + 1;\n        }\n\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function getChainId() internal pure returns (uint) {\n        uint256 chainId;\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n}"
			},
			"PolarAI/interface.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\n/**\n *Submitted for verification at Etherscan.io on 2020-08-26\n*/\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: @openzeppelin/contracts/math/SafeMath.sol\n\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n\npragma solidity ^0.6.2;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { codehash := extcodehash(account) }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        return _functionCallWithValue(target, data, value, errorMessage);\n    }\n\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/SafeERC20.sol\n\n\n\npragma solidity ^0.6.0;\n\n\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/EnumerableSet.sol\n\n\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`\n * (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping (bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\n\n            bytes32 lastvalue = set._values[lastIndex];\n\n            // Move the last value to the index where the value to delete is\n            set._values[toDeleteIndex] = lastvalue;\n            // Update the index for the moved value\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        require(set._values.length > index, \"EnumerableSet: index out of bounds\");\n        return set._values[index];\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint256(_at(set._inner, index)));\n    }\n\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n}\n\n// File: @openzeppelin/contracts/GSN/Context.sol\n\n\n\npragma solidity ^0.6.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n\npragma solidity ^0.6.0;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n/**\n *Submitted for verification at Etherscan.io on 2020-09-09\n*/\n\npragma solidity 0.6.12;\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"PolarAI/SushiToken_HKHH.sol": {
				"SushiToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DOMAIN_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "fromBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "votes",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "delegateBySig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"delegatee": "The address to delegate votes to",
									"expiry": "The time at which to expire the signature",
									"nonce": "The contract state required to match the signature",
									"r": "Half of the ECDSA signature pair",
									"s": "Half of the ECDSA signature pair",
									"v": "The recovery byte of the signature"
								}
							},
							"delegates(address)": {
								"params": {
									"delegator": "The address to get delegatee for"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"returns": {
									"_0": "The number of current votes for `account`"
								}
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"returns": {
									"_0": "The number of votes the account had as of the given block"
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PolarAI/SushiToken_HKHH.sol\":82:8776  contract SushiToken is ERC20(\"SushiToken\", \"SUSHI\"), Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"PolarAI/interface.sol\":30660:30801  constructor (string memory name, string memory symbol) public {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x5375736869546f6b656e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x5355534849000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"PolarAI/interface.sol\":30740:30744  name */\n  dup2\n    /* \"PolarAI/interface.sol\":30732:30737  _name */\n  0x03\n    /* \"PolarAI/interface.sol\":30732:30744  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_5\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"PolarAI/interface.sol\":30764:30770  symbol */\n  dup1\n    /* \"PolarAI/interface.sol\":30754:30761  _symbol */\n  0x04\n    /* \"PolarAI/interface.sol\":30754:30770  _symbol = symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"PolarAI/interface.sol\":30792:30794  18 */\n  0x12\n    /* \"PolarAI/interface.sol\":30780:30789  _decimals */\n  0x05\n  0x00\n    /* \"PolarAI/interface.sol\":30780:30794  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"PolarAI/interface.sol\":30660:30801  constructor (string memory name, string memory symbol) public {... */\n  pop\n  pop\n    /* \"PolarAI/interface.sol\":27380:27397  address msgSender */\n  0x00\n    /* \"PolarAI/interface.sol\":27400:27412  _msgSender() */\n  tag_9\n    /* \"PolarAI/interface.sol\":27400:27410  _msgSender */\n  shl(0x20, tag_10)\n    /* \"PolarAI/interface.sol\":27400:27412  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"PolarAI/interface.sol\":27380:27412  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"PolarAI/interface.sol\":27431:27440  msgSender */\n  dup1\n    /* \"PolarAI/interface.sol\":27422:27428  _owner */\n  0x05\n  0x01\n    /* \"PolarAI/interface.sol\":27422:27440  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"PolarAI/interface.sol\":27488:27497  msgSender */\n  dup1\n    /* \"PolarAI/interface.sol\":27455:27498  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"PolarAI/interface.sol\":27484:27485  0 */\n  0x00\n    /* \"PolarAI/interface.sol\":27455:27498  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"PolarAI/interface.sol\":27346:27505  constructor () internal {... */\n  pop\n    /* \"PolarAI/SushiToken_HKHH.sol\":82:8776  contract SushiToken is ERC20(\"SushiToken\", \"SUSHI\"), Ownable {... */\n  jump(tag_11)\n    /* \"PolarAI/interface.sol\":26178:26282  function _msgSender() internal view virtual returns (address payable) {... */\ntag_10:\n    /* \"PolarAI/interface.sol\":26231:26246  address payable */\n  0x00\n    /* \"PolarAI/interface.sol\":26265:26275  msg.sender */\n  caller\n    /* \"PolarAI/interface.sol\":26258:26275  return msg.sender */\n  swap1\n  pop\n    /* \"PolarAI/interface.sol\":26178:26282  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"PolarAI/SushiToken_HKHH.sol\":82:8776  contract SushiToken is ERC20(\"SushiToken\", \"SUSHI\"), Ownable {... */\ntag_6:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_13)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_13\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_13:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"PolarAI/SushiToken_HKHH.sol\":82:8776  contract SushiToken is ERC20(\"SushiToken\", \"SUSHI\"), Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf1127ed8\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb4b5ea57\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc3cda520\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x782d6fe1\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x39509351\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x587cde1e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6fcfff45\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x20606b70\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"PolarAI/interface.sol\":30866:30947  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_34:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_34)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_37\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_37:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":32902:33068  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":31909:32007  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/SushiToken_HKHH.sol\":1399:1521  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_6:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":33528:33845  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":31768:31849  function decimals() public view returns (uint8) {... */\n    tag_8:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":34240:34455  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/SushiToken_HKHH.sol\":246:405  function mint(address _to, uint256 _amount) public onlyOwner {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"PolarAI/SushiToken_HKHH.sol\":2364:2507  function delegates(address delegator)... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/SushiToken_HKHH.sol\":2645:2747  function delegate(address delegatee) external {... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"PolarAI/SushiToken_HKHH.sol\":1280:1329  mapping (address => uint32) public numCheckpoints */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":32065:32182  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_14:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":28204:28349  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      stop\n        /* \"PolarAI/SushiToken_HKHH.sol\":5174:6392  function getPriorVotes(address account, uint blockNumber)... */\n    tag_16:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/SushiToken_HKHH.sol\":1807:1846  mapping (address => uint) public nonces */\n    tag_17:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":27581:27658  function owner() public view returns (address) {... */\n    tag_18:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":31060:31145  function symbol() public view returns (string memory) {... */\n    tag_19:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_80:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_82\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_80)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_83\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_83:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":34942:35208  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_20:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":32385:32557  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_21:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/SushiToken_HKHH.sol\":4504:4752  function getCurrentVotes(address account)... */\n    tag_22:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/SushiToken_HKHH.sol\":3170:4310  function delegateBySig(... */\n    tag_23:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xc0\n      dup2\n      lt\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"PolarAI/interface.sol\":32615:32764  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_24:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/SushiToken_HKHH.sol\":1612:1729  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_25:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/SushiToken_HKHH.sol\":1144:1214  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_26:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_103\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":28498:28738  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"PolarAI/interface.sol\":30866:30947  function name() public view returns (string memory) {... */\n    tag_33:\n        /* \"PolarAI/interface.sol\":30903:30916  string memory */\n      0x60\n        /* \"PolarAI/interface.sol\":30935:30940  _name */\n      0x03\n        /* \"PolarAI/interface.sol\":30928:30940  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_109\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_108)\n    tag_109:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_110:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_110\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":30866:30947  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":32902:33068  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_40:\n        /* \"PolarAI/interface.sol\":32985:32989  bool */\n      0x00\n        /* \"PolarAI/interface.sol\":33001:33040  _approve(_msgSender(), spender, amount) */\n      tag_112\n        /* \"PolarAI/interface.sol\":33010:33022  _msgSender() */\n      tag_113\n        /* \"PolarAI/interface.sol\":33010:33020  _msgSender */\n      tag_114\n        /* \"PolarAI/interface.sol\":33010:33022  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"PolarAI/interface.sol\":33024:33031  spender */\n      dup5\n        /* \"PolarAI/interface.sol\":33033:33039  amount */\n      dup5\n        /* \"PolarAI/interface.sol\":33001:33009  _approve */\n      tag_115\n        /* \"PolarAI/interface.sol\":33001:33040  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_112:\n        /* \"PolarAI/interface.sol\":33057:33061  true */\n      0x01\n        /* \"PolarAI/interface.sol\":33050:33061  return true */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":32902:33068  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":31909:32007  function totalSupply() public view override returns (uint256) {... */\n    tag_42:\n        /* \"PolarAI/interface.sol\":31962:31969  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":31988:32000  _totalSupply */\n      sload(0x02)\n        /* \"PolarAI/interface.sol\":31981:32000  return _totalSupply */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":31909:32007  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/SushiToken_HKHH.sol\":1399:1521  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_44:\n        /* \"PolarAI/SushiToken_HKHH.sol\":1441:1521  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"PolarAI/SushiToken_HKHH.sol\":1399:1521  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      dup2\n      jump\t// out\n        /* \"PolarAI/interface.sol\":33528:33845  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_47:\n        /* \"PolarAI/interface.sol\":33634:33638  bool */\n      0x00\n        /* \"PolarAI/interface.sol\":33650:33686  _transfer(sender, recipient, amount) */\n      tag_118\n        /* \"PolarAI/interface.sol\":33660:33666  sender */\n      dup5\n        /* \"PolarAI/interface.sol\":33668:33677  recipient */\n      dup5\n        /* \"PolarAI/interface.sol\":33679:33685  amount */\n      dup5\n        /* \"PolarAI/interface.sol\":33650:33659  _transfer */\n      tag_119\n        /* \"PolarAI/interface.sol\":33650:33686  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_118:\n        /* \"PolarAI/interface.sol\":33696:33817  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_120\n        /* \"PolarAI/interface.sol\":33705:33711  sender */\n      dup5\n        /* \"PolarAI/interface.sol\":33713:33725  _msgSender() */\n      tag_121\n        /* \"PolarAI/interface.sol\":33713:33723  _msgSender */\n      tag_114\n        /* \"PolarAI/interface.sol\":33713:33725  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"PolarAI/interface.sol\":33727:33816  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_122\n        /* \"PolarAI/interface.sol\":33765:33771  amount */\n      dup6\n        /* \"PolarAI/interface.sol\":33727:33816  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"PolarAI/interface.sol\":33727:33738  _allowances */\n      0x01\n        /* \"PolarAI/interface.sol\":33727:33746  _allowances[sender] */\n      0x00\n        /* \"PolarAI/interface.sol\":33739:33745  sender */\n      dup12\n        /* \"PolarAI/interface.sol\":33727:33746  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":33727:33760  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"PolarAI/interface.sol\":33747:33759  _msgSender() */\n      tag_123\n        /* \"PolarAI/interface.sol\":33747:33757  _msgSender */\n      tag_114\n        /* \"PolarAI/interface.sol\":33747:33759  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"PolarAI/interface.sol\":33727:33760  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":33727:33764  _allowances[sender][_msgSender()].sub */\n      tag_124\n      swap1\n        /* \"PolarAI/interface.sol\":33727:33816  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_122:\n        /* \"PolarAI/interface.sol\":33696:33704  _approve */\n      tag_115\n        /* \"PolarAI/interface.sol\":33696:33817  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_120:\n        /* \"PolarAI/interface.sol\":33834:33838  true */\n      0x01\n        /* \"PolarAI/interface.sol\":33827:33838  return true */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":33528:33845  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":31768:31849  function decimals() public view returns (uint8) {... */\n    tag_49:\n        /* \"PolarAI/interface.sol\":31809:31814  uint8 */\n      0x00\n        /* \"PolarAI/interface.sol\":31833:31842  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"PolarAI/interface.sol\":31826:31842  return _decimals */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":31768:31849  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":34240:34455  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"PolarAI/interface.sol\":34328:34332  bool */\n      0x00\n        /* \"PolarAI/interface.sol\":34344:34427  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_127\n        /* \"PolarAI/interface.sol\":34353:34365  _msgSender() */\n      tag_128\n        /* \"PolarAI/interface.sol\":34353:34363  _msgSender */\n      tag_114\n        /* \"PolarAI/interface.sol\":34353:34365  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"PolarAI/interface.sol\":34367:34374  spender */\n      dup5\n        /* \"PolarAI/interface.sol\":34376:34426  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_129\n        /* \"PolarAI/interface.sol\":34415:34425  addedValue */\n      dup6\n        /* \"PolarAI/interface.sol\":34376:34387  _allowances */\n      0x01\n        /* \"PolarAI/interface.sol\":34376:34401  _allowances[_msgSender()] */\n      0x00\n        /* \"PolarAI/interface.sol\":34388:34400  _msgSender() */\n      tag_130\n        /* \"PolarAI/interface.sol\":34388:34398  _msgSender */\n      tag_114\n        /* \"PolarAI/interface.sol\":34388:34400  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"PolarAI/interface.sol\":34376:34401  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":34376:34410  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"PolarAI/interface.sol\":34402:34409  spender */\n      dup10\n        /* \"PolarAI/interface.sol\":34376:34410  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":34376:34414  _allowances[_msgSender()][spender].add */\n      tag_131\n      swap1\n        /* \"PolarAI/interface.sol\":34376:34426  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_129:\n        /* \"PolarAI/interface.sol\":34344:34352  _approve */\n      tag_115\n        /* \"PolarAI/interface.sol\":34344:34427  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_127:\n        /* \"PolarAI/interface.sol\":34444:34448  true */\n      0x01\n        /* \"PolarAI/interface.sol\":34437:34448  return true */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":34240:34455  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/SushiToken_HKHH.sol\":246:405  function mint(address _to, uint256 _amount) public onlyOwner {... */\n    tag_55:\n        /* \"PolarAI/interface.sol\":27795:27807  _msgSender() */\n      tag_133\n        /* \"PolarAI/interface.sol\":27795:27805  _msgSender */\n      tag_114\n        /* \"PolarAI/interface.sol\":27795:27807  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"PolarAI/interface.sol\":27785:27807  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":27785:27791  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":27785:27807  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PolarAI/interface.sol\":27777:27844  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"PolarAI/SushiToken_HKHH.sol\":317:336  _mint(_to, _amount) */\n      tag_136\n        /* \"PolarAI/SushiToken_HKHH.sol\":323:326  _to */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":328:335  _amount */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":317:322  _mint */\n      tag_137\n        /* \"PolarAI/SushiToken_HKHH.sol\":317:336  _mint(_to, _amount) */\n      jump\t// in\n    tag_136:\n        /* \"PolarAI/SushiToken_HKHH.sol\":346:398  _moveDelegates(address(0), _delegates[_to], _amount) */\n      tag_138\n        /* \"PolarAI/SushiToken_HKHH.sol\":369:370  0 */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":373:383  _delegates */\n      0x06\n        /* \"PolarAI/SushiToken_HKHH.sol\":373:388  _delegates[_to] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":384:387  _to */\n      dup6\n        /* \"PolarAI/SushiToken_HKHH.sol\":373:388  _delegates[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":390:397  _amount */\n      dup4\n        /* \"PolarAI/SushiToken_HKHH.sol\":346:360  _moveDelegates */\n      tag_139\n        /* \"PolarAI/SushiToken_HKHH.sol\":346:398  _moveDelegates(address(0), _delegates[_to], _amount) */\n      jump\t// in\n    tag_138:\n        /* \"PolarAI/SushiToken_HKHH.sol\":246:405  function mint(address _to, uint256 _amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/SushiToken_HKHH.sol\":2364:2507  function delegates(address delegator)... */\n    tag_58:\n        /* \"PolarAI/SushiToken_HKHH.sol\":2449:2456  address */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":2479:2489  _delegates */\n      0x06\n        /* \"PolarAI/SushiToken_HKHH.sol\":2479:2500  _delegates[delegator] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":2490:2499  delegator */\n      dup4\n        /* \"PolarAI/SushiToken_HKHH.sol\":2479:2500  _delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":2472:2500  return _delegates[delegator] */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":2364:2507  function delegates(address delegator)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PolarAI/SushiToken_HKHH.sol\":2645:2747  function delegate(address delegatee) external {... */\n    tag_61:\n        /* \"PolarAI/SushiToken_HKHH.sol\":2708:2740  _delegate(msg.sender, delegatee) */\n      tag_142\n        /* \"PolarAI/SushiToken_HKHH.sol\":2718:2728  msg.sender */\n      caller\n        /* \"PolarAI/SushiToken_HKHH.sol\":2730:2739  delegatee */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":2708:2717  _delegate */\n      tag_143\n        /* \"PolarAI/SushiToken_HKHH.sol\":2708:2740  _delegate(msg.sender, delegatee) */\n      jump\t// in\n    tag_142:\n        /* \"PolarAI/SushiToken_HKHH.sol\":2645:2747  function delegate(address delegatee) external {... */\n      pop\n      jump\t// out\n        /* \"PolarAI/SushiToken_HKHH.sol\":1280:1329  mapping (address => uint32) public numCheckpoints */\n    tag_64:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"PolarAI/interface.sol\":32065:32182  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_67:\n        /* \"PolarAI/interface.sol\":32131:32138  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":32157:32166  _balances */\n      dup1\n        /* \"PolarAI/interface.sol\":32157:32175  _balances[account] */\n      0x00\n        /* \"PolarAI/interface.sol\":32167:32174  account */\n      dup4\n        /* \"PolarAI/interface.sol\":32157:32175  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":32150:32175  return _balances[account] */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":32065:32182  function balanceOf(address account) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":28204:28349  function renounceOwnership() public virtual onlyOwner {... */\n    tag_69:\n        /* \"PolarAI/interface.sol\":27795:27807  _msgSender() */\n      tag_146\n        /* \"PolarAI/interface.sol\":27795:27805  _msgSender */\n      tag_114\n        /* \"PolarAI/interface.sol\":27795:27807  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"PolarAI/interface.sol\":27785:27807  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":27785:27791  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":27785:27807  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PolarAI/interface.sol\":27777:27844  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"PolarAI/interface.sol\":28310:28311  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":28273:28313  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":28294:28300  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":28273:28313  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PolarAI/interface.sol\":28340:28341  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":28323:28329  _owner */\n      0x05\n      0x01\n        /* \"PolarAI/interface.sol\":28323:28342  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/interface.sol\":28204:28349  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"PolarAI/SushiToken_HKHH.sol\":5174:6392  function getPriorVotes(address account, uint blockNumber)... */\n    tag_72:\n        /* \"PolarAI/SushiToken_HKHH.sol\":5279:5286  uint256 */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":5324:5336  block.number */\n      number\n        /* \"PolarAI/SushiToken_HKHH.sol\":5310:5321  blockNumber */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":5310:5336  blockNumber < block.number */\n      lt\n        /* \"PolarAI/SushiToken_HKHH.sol\":5302:5381  require(blockNumber < block.number, \"SUSHI::getPriorVotes: not yet determined\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_95f5bca076212943aad5c226142010ad55d0096dba63ca905d770f4fe4afff33\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"PolarAI/SushiToken_HKHH.sol\":5392:5411  uint32 nCheckpoints */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":5414:5428  numCheckpoints */\n      0x08\n        /* \"PolarAI/SushiToken_HKHH.sol\":5414:5437  numCheckpoints[account] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":5429:5436  account */\n      dup6\n        /* \"PolarAI/SushiToken_HKHH.sol\":5414:5437  numCheckpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":5392:5437  uint32 nCheckpoints = numCheckpoints[account] */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":5467:5468  0 */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":5451:5463  nCheckpoints */\n      dup2\n        /* \"PolarAI/SushiToken_HKHH.sol\":5451:5468  nCheckpoints == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"PolarAI/SushiToken_HKHH.sol\":5447:5503  if (nCheckpoints == 0) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"PolarAI/SushiToken_HKHH.sol\":5491:5492  0 */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":5484:5492  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_149)\n        /* \"PolarAI/SushiToken_HKHH.sol\":5447:5503  if (nCheckpoints == 0) {... */\n    tag_151:\n        /* \"PolarAI/SushiToken_HKHH.sol\":5612:5623  blockNumber */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":5560:5571  checkpoints */\n      0x07\n        /* \"PolarAI/SushiToken_HKHH.sol\":5560:5580  checkpoints[account] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":5572:5579  account */\n      dup7\n        /* \"PolarAI/SushiToken_HKHH.sol\":5560:5580  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":5560:5598  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":5596:5597  1 */\n      0x01\n        /* \"PolarAI/SushiToken_HKHH.sol\":5581:5593  nCheckpoints */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":5581:5597  nCheckpoints - 1 */\n      sub\n        /* \"PolarAI/SushiToken_HKHH.sol\":5560:5598  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":5560:5608  checkpoints[account][nCheckpoints - 1].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":5560:5623  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      0xffffffff\n      and\n      gt\n        /* \"PolarAI/SushiToken_HKHH.sol\":5556:5701  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n      tag_152\n      jumpi\n        /* \"PolarAI/SushiToken_HKHH.sol\":5646:5657  checkpoints */\n      0x07\n        /* \"PolarAI/SushiToken_HKHH.sol\":5646:5666  checkpoints[account] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":5658:5665  account */\n      dup6\n        /* \"PolarAI/SushiToken_HKHH.sol\":5646:5666  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":5646:5684  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":5682:5683  1 */\n      0x01\n        /* \"PolarAI/SushiToken_HKHH.sol\":5667:5679  nCheckpoints */\n      dup4\n        /* \"PolarAI/SushiToken_HKHH.sol\":5667:5683  nCheckpoints - 1 */\n      sub\n        /* \"PolarAI/SushiToken_HKHH.sol\":5646:5684  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":5646:5690  checkpoints[account][nCheckpoints - 1].votes */\n      0x01\n      add\n      sload\n        /* \"PolarAI/SushiToken_HKHH.sol\":5639:5690  return checkpoints[account][nCheckpoints - 1].votes */\n      swap2\n      pop\n      pop\n      jump(tag_149)\n        /* \"PolarAI/SushiToken_HKHH.sol\":5556:5701  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n    tag_152:\n        /* \"PolarAI/SushiToken_HKHH.sol\":5795:5806  blockNumber */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":5759:5770  checkpoints */\n      0x07\n        /* \"PolarAI/SushiToken_HKHH.sol\":5759:5779  checkpoints[account] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":5771:5778  account */\n      dup7\n        /* \"PolarAI/SushiToken_HKHH.sol\":5759:5779  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":5759:5782  checkpoints[account][0] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":5780:5781  0 */\n      dup1\n        /* \"PolarAI/SushiToken_HKHH.sol\":5759:5782  checkpoints[account][0] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":5759:5792  checkpoints[account][0].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":5759:5806  checkpoints[account][0].fromBlock > blockNumber */\n      0xffffffff\n      and\n      gt\n        /* \"PolarAI/SushiToken_HKHH.sol\":5755:5841  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"PolarAI/SushiToken_HKHH.sol\":5829:5830  0 */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":5822:5830  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_149)\n        /* \"PolarAI/SushiToken_HKHH.sol\":5755:5841  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n    tag_153:\n        /* \"PolarAI/SushiToken_HKHH.sol\":5851:5863  uint32 lower */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":5877:5889  uint32 upper */\n      dup1\n        /* \"PolarAI/SushiToken_HKHH.sol\":5907:5908  1 */\n      0x01\n        /* \"PolarAI/SushiToken_HKHH.sol\":5892:5904  nCheckpoints */\n      dup4\n        /* \"PolarAI/SushiToken_HKHH.sol\":5892:5908  nCheckpoints - 1 */\n      sub\n        /* \"PolarAI/SushiToken_HKHH.sol\":5877:5908  uint32 upper = nCheckpoints - 1 */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":5918:6336  while (upper > lower) {... */\n    tag_154:\n        /* \"PolarAI/SushiToken_HKHH.sol\":5933:5938  lower */\n      dup2\n        /* \"PolarAI/SushiToken_HKHH.sol\":5925:5938  upper > lower */\n      0xffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":5925:5930  upper */\n      dup2\n        /* \"PolarAI/SushiToken_HKHH.sol\":5925:5938  upper > lower */\n      0xffffffff\n      and\n      gt\n        /* \"PolarAI/SushiToken_HKHH.sol\":5918:6336  while (upper > lower) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"PolarAI/SushiToken_HKHH.sol\":5954:5967  uint32 center */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":5996:5997  2 */\n      0x02\n        /* \"PolarAI/SushiToken_HKHH.sol\":5987:5992  lower */\n      dup4\n        /* \"PolarAI/SushiToken_HKHH.sol\":5979:5984  upper */\n      dup4\n        /* \"PolarAI/SushiToken_HKHH.sol\":5979:5992  upper - lower */\n      sub\n        /* \"PolarAI/SushiToken_HKHH.sol\":5978:5997  (upper - lower) / 2 */\n      0xffffffff\n      and\n      dup2\n      tag_156\n      jumpi\n      invalid\n    tag_156:\n      div\n        /* \"PolarAI/SushiToken_HKHH.sol\":5970:5975  upper */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":5970:5997  upper - (upper - lower) / 2 */\n      sub\n        /* \"PolarAI/SushiToken_HKHH.sol\":5954:5997  uint32 center = upper - (upper - lower) / 2 */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":6038:6058  Checkpoint memory cp */\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"PolarAI/SushiToken_HKHH.sol\":6061:6072  checkpoints */\n      0x07\n        /* \"PolarAI/SushiToken_HKHH.sol\":6061:6081  checkpoints[account] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":6073:6080  account */\n      dup10\n        /* \"PolarAI/SushiToken_HKHH.sol\":6061:6081  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":6061:6089  checkpoints[account][center] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":6082:6088  center */\n      dup4\n        /* \"PolarAI/SushiToken_HKHH.sol\":6061:6089  checkpoints[account][center] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":6038:6089  Checkpoint memory cp = checkpoints[account][center] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":6123:6134  blockNumber */\n      dup7\n        /* \"PolarAI/SushiToken_HKHH.sol\":6107:6109  cp */\n      dup2\n        /* \"PolarAI/SushiToken_HKHH.sol\":6107:6119  cp.fromBlock */\n      0x00\n      add\n      mload\n        /* \"PolarAI/SushiToken_HKHH.sol\":6107:6134  cp.fromBlock == blockNumber */\n      0xffffffff\n      and\n      eq\n        /* \"PolarAI/SushiToken_HKHH.sol\":6103:6326  if (cp.fromBlock == blockNumber) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"PolarAI/SushiToken_HKHH.sol\":6161:6163  cp */\n      dup1\n        /* \"PolarAI/SushiToken_HKHH.sol\":6161:6169  cp.votes */\n      0x20\n      add\n      mload\n        /* \"PolarAI/SushiToken_HKHH.sol\":6154:6169  return cp.votes */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_149)\n        /* \"PolarAI/SushiToken_HKHH.sol\":6103:6326  if (cp.fromBlock == blockNumber) {... */\n    tag_159:\n        /* \"PolarAI/SushiToken_HKHH.sol\":6209:6220  blockNumber */\n      dup7\n        /* \"PolarAI/SushiToken_HKHH.sol\":6194:6196  cp */\n      dup2\n        /* \"PolarAI/SushiToken_HKHH.sol\":6194:6206  cp.fromBlock */\n      0x00\n      add\n      mload\n        /* \"PolarAI/SushiToken_HKHH.sol\":6194:6220  cp.fromBlock < blockNumber */\n      0xffffffff\n      and\n      lt\n        /* \"PolarAI/SushiToken_HKHH.sol\":6190:6326  if (cp.fromBlock < blockNumber) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"PolarAI/SushiToken_HKHH.sol\":6248:6254  center */\n      dup2\n        /* \"PolarAI/SushiToken_HKHH.sol\":6240:6254  lower = center */\n      swap4\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":6190:6326  if (cp.fromBlock < blockNumber) {... */\n      jump(tag_162)\n    tag_161:\n        /* \"PolarAI/SushiToken_HKHH.sol\":6310:6311  1 */\n      0x01\n        /* \"PolarAI/SushiToken_HKHH.sol\":6301:6307  center */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":6301:6311  center - 1 */\n      sub\n        /* \"PolarAI/SushiToken_HKHH.sol\":6293:6311  upper = center - 1 */\n      swap3\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":6190:6326  if (cp.fromBlock < blockNumber) {... */\n    tag_162:\n        /* \"PolarAI/SushiToken_HKHH.sol\":5918:6336  while (upper > lower) {... */\n      pop\n      pop\n      jump(tag_154)\n    tag_155:\n        /* \"PolarAI/SushiToken_HKHH.sol\":6352:6363  checkpoints */\n      0x07\n        /* \"PolarAI/SushiToken_HKHH.sol\":6352:6372  checkpoints[account] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":6364:6371  account */\n      dup8\n        /* \"PolarAI/SushiToken_HKHH.sol\":6352:6372  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":6352:6379  checkpoints[account][lower] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":6373:6378  lower */\n      dup4\n        /* \"PolarAI/SushiToken_HKHH.sol\":6352:6379  checkpoints[account][lower] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":6352:6385  checkpoints[account][lower].votes */\n      0x01\n      add\n      sload\n        /* \"PolarAI/SushiToken_HKHH.sol\":6345:6385  return checkpoints[account][lower].votes */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":5174:6392  function getPriorVotes(address account, uint blockNumber)... */\n    tag_149:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/SushiToken_HKHH.sol\":1807:1846  mapping (address => uint) public nonces */\n    tag_75:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"PolarAI/interface.sol\":27581:27658  function owner() public view returns (address) {... */\n    tag_77:\n        /* \"PolarAI/interface.sol\":27619:27626  address */\n      0x00\n        /* \"PolarAI/interface.sol\":27645:27651  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":27638:27651  return _owner */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":27581:27658  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":31060:31145  function symbol() public view returns (string memory) {... */\n    tag_79:\n        /* \"PolarAI/interface.sol\":31099:31112  string memory */\n      0x60\n        /* \"PolarAI/interface.sol\":31131:31138  _symbol */\n      0x04\n        /* \"PolarAI/interface.sol\":31124:31138  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_165\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_166\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_165)\n    tag_166:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_167:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_167\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":31060:31145  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":34942:35208  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_86:\n        /* \"PolarAI/interface.sol\":35035:35039  bool */\n      0x00\n        /* \"PolarAI/interface.sol\":35051:35180  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_169\n        /* \"PolarAI/interface.sol\":35060:35072  _msgSender() */\n      tag_170\n        /* \"PolarAI/interface.sol\":35060:35070  _msgSender */\n      tag_114\n        /* \"PolarAI/interface.sol\":35060:35072  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"PolarAI/interface.sol\":35074:35081  spender */\n      dup5\n        /* \"PolarAI/interface.sol\":35083:35179  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_171\n        /* \"PolarAI/interface.sol\":35122:35137  subtractedValue */\n      dup6\n        /* \"PolarAI/interface.sol\":35083:35179  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"PolarAI/interface.sol\":35083:35094  _allowances */\n      0x01\n        /* \"PolarAI/interface.sol\":35083:35108  _allowances[_msgSender()] */\n      0x00\n        /* \"PolarAI/interface.sol\":35095:35107  _msgSender() */\n      tag_172\n        /* \"PolarAI/interface.sol\":35095:35105  _msgSender */\n      tag_114\n        /* \"PolarAI/interface.sol\":35095:35107  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"PolarAI/interface.sol\":35083:35108  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":35083:35117  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"PolarAI/interface.sol\":35109:35116  spender */\n      dup11\n        /* \"PolarAI/interface.sol\":35083:35117  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":35083:35121  _allowances[_msgSender()][spender].sub */\n      tag_124\n      swap1\n        /* \"PolarAI/interface.sol\":35083:35179  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"PolarAI/interface.sol\":35051:35059  _approve */\n      tag_115\n        /* \"PolarAI/interface.sol\":35051:35180  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_169:\n        /* \"PolarAI/interface.sol\":35197:35201  true */\n      0x01\n        /* \"PolarAI/interface.sol\":35190:35201  return true */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":34942:35208  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":32385:32557  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_89:\n        /* \"PolarAI/interface.sol\":32471:32475  bool */\n      0x00\n        /* \"PolarAI/interface.sol\":32487:32529  _transfer(_msgSender(), recipient, amount) */\n      tag_174\n        /* \"PolarAI/interface.sol\":32497:32509  _msgSender() */\n      tag_175\n        /* \"PolarAI/interface.sol\":32497:32507  _msgSender */\n      tag_114\n        /* \"PolarAI/interface.sol\":32497:32509  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"PolarAI/interface.sol\":32511:32520  recipient */\n      dup5\n        /* \"PolarAI/interface.sol\":32522:32528  amount */\n      dup5\n        /* \"PolarAI/interface.sol\":32487:32496  _transfer */\n      tag_119\n        /* \"PolarAI/interface.sol\":32487:32529  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_174:\n        /* \"PolarAI/interface.sol\":32546:32550  true */\n      0x01\n        /* \"PolarAI/interface.sol\":32539:32550  return true */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":32385:32557  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/SushiToken_HKHH.sol\":4504:4752  function getCurrentVotes(address account)... */\n    tag_92:\n        /* \"PolarAI/SushiToken_HKHH.sol\":4593:4600  uint256 */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":4616:4635  uint32 nCheckpoints */\n      dup1\n        /* \"PolarAI/SushiToken_HKHH.sol\":4638:4652  numCheckpoints */\n      0x08\n        /* \"PolarAI/SushiToken_HKHH.sol\":4638:4661  numCheckpoints[account] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":4653:4660  account */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":4638:4661  numCheckpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":4616:4661  uint32 nCheckpoints = numCheckpoints[account] */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":4693:4694  0 */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":4678:4690  nCheckpoints */\n      dup2\n        /* \"PolarAI/SushiToken_HKHH.sol\":4678:4694  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"PolarAI/SushiToken_HKHH.sol\":4678:4745  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      tag_177\n      jumpi\n        /* \"PolarAI/SushiToken_HKHH.sol\":4744:4745  0 */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":4678:4745  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      jump(tag_178)\n    tag_177:\n        /* \"PolarAI/SushiToken_HKHH.sol\":4697:4708  checkpoints */\n      0x07\n        /* \"PolarAI/SushiToken_HKHH.sol\":4697:4717  checkpoints[account] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":4709:4716  account */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":4697:4717  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":4697:4735  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":4733:4734  1 */\n      0x01\n        /* \"PolarAI/SushiToken_HKHH.sol\":4718:4730  nCheckpoints */\n      dup4\n        /* \"PolarAI/SushiToken_HKHH.sol\":4718:4734  nCheckpoints - 1 */\n      sub\n        /* \"PolarAI/SushiToken_HKHH.sol\":4697:4735  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":4697:4741  checkpoints[account][nCheckpoints - 1].votes */\n      0x01\n      add\n      sload\n        /* \"PolarAI/SushiToken_HKHH.sol\":4678:4745  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n    tag_178:\n        /* \"PolarAI/SushiToken_HKHH.sol\":4671:4745  return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      swap2\n      pop\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":4504:4752  function getCurrentVotes(address account)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PolarAI/SushiToken_HKHH.sol\":3170:4310  function delegateBySig(... */\n    tag_95:\n        /* \"PolarAI/SushiToken_HKHH.sol\":3353:3376  bytes32 domainSeparator */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":1441:1521  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"PolarAI/SushiToken_HKHH.sol\":3479:3485  name() */\n      tag_180\n        /* \"PolarAI/SushiToken_HKHH.sol\":3479:3483  name */\n      tag_33\n        /* \"PolarAI/SushiToken_HKHH.sol\":3479:3485  name() */\n      jump\t// in\n    tag_180:\n        /* \"PolarAI/SushiToken_HKHH.sol\":3463:3487  keccak256(bytes(name())) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":3505:3517  getChainId() */\n      tag_181\n        /* \"PolarAI/SushiToken_HKHH.sol\":3505:3515  getChainId */\n      tag_182\n        /* \"PolarAI/SushiToken_HKHH.sol\":3505:3517  getChainId() */\n      jump\t// in\n    tag_181:\n        /* \"PolarAI/SushiToken_HKHH.sol\":3543:3547  this */\n      address\n        /* \"PolarAI/SushiToken_HKHH.sol\":3402:3562  abi.encode(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"PolarAI/SushiToken_HKHH.sol\":3379:3572  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":3353:3572  bytes32 domainSeparator = keccak256(... */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":3583:3601  bytes32 structHash */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":1658:1729  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"PolarAI/SushiToken_HKHH.sol\":3692:3701  delegatee */\n      dup9\n        /* \"PolarAI/SushiToken_HKHH.sol\":3719:3724  nonce */\n      dup9\n        /* \"PolarAI/SushiToken_HKHH.sol\":3742:3748  expiry */\n      dup9\n        /* \"PolarAI/SushiToken_HKHH.sol\":3627:3762  abi.encode(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"PolarAI/SushiToken_HKHH.sol\":3604:3772  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":3583:3772  bytes32 structHash = keccak256(... */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":3783:3797  bytes32 digest */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":3885:3900  domainSeparator */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":3918:3928  structHash */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":3823:3942  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"PolarAI/SushiToken_HKHH.sol\":3800:3952  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":3783:3952  bytes32 digest = keccak256(... */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":3963:3980  address signatory */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":3983:4009  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"PolarAI/SushiToken_HKHH.sol\":3993:3999  digest */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":4001:4002  v */\n      dup9\n        /* \"PolarAI/SushiToken_HKHH.sol\":4004:4005  r */\n      dup9\n        /* \"PolarAI/SushiToken_HKHH.sol\":4007:4008  s */\n      dup9\n        /* \"PolarAI/SushiToken_HKHH.sol\":3983:4009  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"PolarAI/SushiToken_HKHH.sol\":3963:4009  address signatory = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":4048:4049  0 */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":4027:4050  signatory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":4027:4036  signatory */\n      dup2\n        /* \"PolarAI/SushiToken_HKHH.sol\":4027:4050  signatory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/SushiToken_HKHH.sol\":4019:4094  require(signatory != address(0), \"SUSHI::delegateBySig: invalid signature\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_aeeb870860c7451819edc560c5520e1197c2d62c04cc23def3a21b91410d0633\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"PolarAI/SushiToken_HKHH.sol\":4121:4127  nonces */\n      0x09\n        /* \"PolarAI/SushiToken_HKHH.sol\":4121:4138  nonces[signatory] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":4128:4137  signatory */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":4121:4138  nonces[signatory] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":4121:4140  nonces[signatory]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"PolarAI/SushiToken_HKHH.sol\":4112:4117  nonce */\n      dup10\n        /* \"PolarAI/SushiToken_HKHH.sol\":4112:4140  nonce == nonces[signatory]++ */\n      eq\n        /* \"PolarAI/SushiToken_HKHH.sol\":4104:4180  require(nonce == nonces[signatory]++, \"SUSHI::delegateBySig: invalid nonce\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a1e65db8426b65ad764814369e421d0b17d63e03dc4c1056a693e1cc89fb7a3e\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"PolarAI/SushiToken_HKHH.sol\":4205:4211  expiry */\n      dup8\n        /* \"PolarAI/SushiToken_HKHH.sol\":4198:4201  now */\n      timestamp\n        /* \"PolarAI/SushiToken_HKHH.sol\":4198:4211  now <= expiry */\n      gt\n      iszero\n        /* \"PolarAI/SushiToken_HKHH.sol\":4190:4255  require(now <= expiry, \"SUSHI::delegateBySig: signature expired\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_18fecdf225b5e9a1d03e234e6893b777c717a928a78496f199bb78499b5dcd1c\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"PolarAI/SushiToken_HKHH.sol\":4272:4303  _delegate(signatory, delegatee) */\n      tag_188\n        /* \"PolarAI/SushiToken_HKHH.sol\":4282:4291  signatory */\n      dup2\n        /* \"PolarAI/SushiToken_HKHH.sol\":4293:4302  delegatee */\n      dup12\n        /* \"PolarAI/SushiToken_HKHH.sol\":4272:4281  _delegate */\n      tag_143\n        /* \"PolarAI/SushiToken_HKHH.sol\":4272:4303  _delegate(signatory, delegatee) */\n      jump\t// in\n    tag_188:\n        /* \"PolarAI/SushiToken_HKHH.sol\":4265:4303  return _delegate(signatory, delegatee) */\n      pop\n      pop\n      pop\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":3170:4310  function delegateBySig(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":32615:32764  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_98:\n        /* \"PolarAI/interface.sol\":32704:32711  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":32730:32741  _allowances */\n      0x01\n        /* \"PolarAI/interface.sol\":32730:32748  _allowances[owner] */\n      0x00\n        /* \"PolarAI/interface.sol\":32742:32747  owner */\n      dup5\n        /* \"PolarAI/interface.sol\":32730:32748  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":32730:32757  _allowances[owner][spender] */\n      0x00\n        /* \"PolarAI/interface.sol\":32749:32756  spender */\n      dup4\n        /* \"PolarAI/interface.sol\":32730:32757  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":32723:32757  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":32615:32764  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/SushiToken_HKHH.sol\":1612:1729  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_100:\n        /* \"PolarAI/SushiToken_HKHH.sol\":1658:1729  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"PolarAI/SushiToken_HKHH.sol\":1612:1729  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      dup2\n      jump\t// out\n        /* \"PolarAI/SushiToken_HKHH.sol\":1144:1214  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_103:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"PolarAI/interface.sol\":28498:28738  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_106:\n        /* \"PolarAI/interface.sol\":27795:27807  _msgSender() */\n      tag_191\n        /* \"PolarAI/interface.sol\":27795:27805  _msgSender */\n      tag_114\n        /* \"PolarAI/interface.sol\":27795:27807  _msgSender() */\n      jump\t// in\n    tag_191:\n        /* \"PolarAI/interface.sol\":27785:27807  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":27785:27791  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":27785:27807  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PolarAI/interface.sol\":27777:27844  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"PolarAI/interface.sol\":28606:28607  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":28586:28608  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":28586:28594  newOwner */\n      dup2\n        /* \"PolarAI/interface.sol\":28586:28608  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/interface.sol\":28578:28651  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"PolarAI/interface.sol\":28695:28703  newOwner */\n      dup1\n        /* \"PolarAI/interface.sol\":28666:28704  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":28687:28693  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":28666:28704  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PolarAI/interface.sol\":28723:28731  newOwner */\n      dup1\n        /* \"PolarAI/interface.sol\":28714:28720  _owner */\n      0x05\n      0x01\n        /* \"PolarAI/interface.sol\":28714:28731  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/interface.sol\":28498:28738  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":26178:26282  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_114:\n        /* \"PolarAI/interface.sol\":26231:26246  address payable */\n      0x00\n        /* \"PolarAI/interface.sol\":26265:26275  msg.sender */\n      caller\n        /* \"PolarAI/interface.sol\":26258:26275  return msg.sender */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":26178:26282  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":38006:38346  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_115:\n        /* \"PolarAI/interface.sol\":38124:38125  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":38107:38126  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":38107:38112  owner */\n      dup4\n        /* \"PolarAI/interface.sol\":38107:38126  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/interface.sol\":38099:38167  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"PolarAI/interface.sol\":38204:38205  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":38185:38206  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":38185:38192  spender */\n      dup3\n        /* \"PolarAI/interface.sol\":38185:38206  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/interface.sol\":38177:38245  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"PolarAI/interface.sol\":38286:38292  amount */\n      dup1\n        /* \"PolarAI/interface.sol\":38256:38267  _allowances */\n      0x01\n        /* \"PolarAI/interface.sol\":38256:38274  _allowances[owner] */\n      0x00\n        /* \"PolarAI/interface.sol\":38268:38273  owner */\n      dup6\n        /* \"PolarAI/interface.sol\":38256:38274  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":38256:38283  _allowances[owner][spender] */\n      0x00\n        /* \"PolarAI/interface.sol\":38275:38282  spender */\n      dup5\n        /* \"PolarAI/interface.sol\":38256:38283  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":38256:38292  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/interface.sol\":38323:38330  spender */\n      dup2\n        /* \"PolarAI/interface.sol\":38307:38339  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":38316:38321  owner */\n      dup4\n        /* \"PolarAI/interface.sol\":38307:38339  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"PolarAI/interface.sol\":38332:38338  amount */\n      dup4\n        /* \"PolarAI/interface.sol\":38307:38339  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PolarAI/interface.sol\":38006:38346  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":35682:36212  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_119:\n        /* \"PolarAI/interface.sol\":35805:35806  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":35787:35807  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":35787:35793  sender */\n      dup4\n        /* \"PolarAI/interface.sol\":35787:35807  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/interface.sol\":35779:35849  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"PolarAI/interface.sol\":35888:35889  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":35867:35890  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":35867:35876  recipient */\n      dup3\n        /* \"PolarAI/interface.sol\":35867:35890  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/interface.sol\":35859:35930  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"PolarAI/interface.sol\":35941:35988  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_202\n        /* \"PolarAI/interface.sol\":35962:35968  sender */\n      dup4\n        /* \"PolarAI/interface.sol\":35970:35979  recipient */\n      dup4\n        /* \"PolarAI/interface.sol\":35981:35987  amount */\n      dup4\n        /* \"PolarAI/interface.sol\":35941:35961  _beforeTokenTransfer */\n      tag_203\n        /* \"PolarAI/interface.sol\":35941:35988  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_202:\n        /* \"PolarAI/interface.sol\":36019:36090  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_204\n        /* \"PolarAI/interface.sol\":36041:36047  amount */\n      dup2\n        /* \"PolarAI/interface.sol\":36019:36090  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"PolarAI/interface.sol\":36019:36028  _balances */\n      0x00\n        /* \"PolarAI/interface.sol\":36019:36036  _balances[sender] */\n      dup1\n        /* \"PolarAI/interface.sol\":36029:36035  sender */\n      dup8\n        /* \"PolarAI/interface.sol\":36019:36036  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":36019:36040  _balances[sender].sub */\n      tag_124\n      swap1\n        /* \"PolarAI/interface.sol\":36019:36090  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"PolarAI/interface.sol\":35999:36008  _balances */\n      0x00\n        /* \"PolarAI/interface.sol\":35999:36016  _balances[sender] */\n      dup1\n        /* \"PolarAI/interface.sol\":36009:36015  sender */\n      dup6\n        /* \"PolarAI/interface.sol\":35999:36016  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":35999:36090  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/interface.sol\":36123:36155  _balances[recipient].add(amount) */\n      tag_205\n        /* \"PolarAI/interface.sol\":36148:36154  amount */\n      dup2\n        /* \"PolarAI/interface.sol\":36123:36132  _balances */\n      0x00\n        /* \"PolarAI/interface.sol\":36123:36143  _balances[recipient] */\n      dup1\n        /* \"PolarAI/interface.sol\":36133:36142  recipient */\n      dup6\n        /* \"PolarAI/interface.sol\":36123:36143  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":36123:36147  _balances[recipient].add */\n      tag_131\n      swap1\n        /* \"PolarAI/interface.sol\":36123:36155  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_205:\n        /* \"PolarAI/interface.sol\":36100:36109  _balances */\n      0x00\n        /* \"PolarAI/interface.sol\":36100:36120  _balances[recipient] */\n      dup1\n        /* \"PolarAI/interface.sol\":36110:36119  recipient */\n      dup5\n        /* \"PolarAI/interface.sol\":36100:36120  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":36100:36155  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/interface.sol\":36187:36196  recipient */\n      dup2\n        /* \"PolarAI/interface.sol\":36170:36205  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":36179:36185  sender */\n      dup4\n        /* \"PolarAI/interface.sol\":36170:36205  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"PolarAI/interface.sol\":36198:36204  amount */\n      dup4\n        /* \"PolarAI/interface.sol\":36170:36205  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PolarAI/interface.sol\":35682:36212  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":4544:4731  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_124:\n        /* \"PolarAI/interface.sol\":4630:4637  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":4662:4663  a */\n      dup4\n        /* \"PolarAI/interface.sol\":4657:4658  b */\n      dup4\n        /* \"PolarAI/interface.sol\":4657:4663  b <= a */\n      gt\n      iszero\n        /* \"PolarAI/interface.sol\":4665:4677  errorMessage */\n      dup3\n        /* \"PolarAI/interface.sol\":4649:4678  require(b <= a, errorMessage) */\n      swap1\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_208:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_210\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_208)\n    tag_210:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_211\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_211:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n      pop\n        /* \"PolarAI/interface.sol\":4688:4697  uint256 c */\n      0x00\n        /* \"PolarAI/interface.sol\":4704:4705  b */\n      dup4\n        /* \"PolarAI/interface.sol\":4700:4701  a */\n      dup6\n        /* \"PolarAI/interface.sol\":4700:4705  a - b */\n      sub\n        /* \"PolarAI/interface.sol\":4688:4705  uint256 c = a - b */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":4723:4724  c */\n      dup1\n        /* \"PolarAI/interface.sol\":4716:4724  return c */\n      swap2\n      pop\n      pop\n        /* \"PolarAI/interface.sol\":4544:4731  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":3672:3848  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_131:\n        /* \"PolarAI/interface.sol\":3730:3737  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":3749:3758  uint256 c */\n      dup1\n        /* \"PolarAI/interface.sol\":3765:3766  b */\n      dup3\n        /* \"PolarAI/interface.sol\":3761:3762  a */\n      dup5\n        /* \"PolarAI/interface.sol\":3761:3766  a + b */\n      add\n        /* \"PolarAI/interface.sol\":3749:3766  uint256 c = a + b */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":3789:3790  a */\n      dup4\n        /* \"PolarAI/interface.sol\":3784:3785  c */\n      dup2\n        /* \"PolarAI/interface.sol\":3784:3790  c >= a */\n      lt\n      iszero\n        /* \"PolarAI/interface.sol\":3776:3822  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"PolarAI/interface.sol\":3840:3841  c */\n      dup1\n        /* \"PolarAI/interface.sol\":3833:3841  return c */\n      swap2\n      pop\n      pop\n        /* \"PolarAI/interface.sol\":3672:3848  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":36482:36852  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_137:\n        /* \"PolarAI/interface.sol\":36584:36585  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":36565:36586  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":36565:36572  account */\n      dup3\n        /* \"PolarAI/interface.sol\":36565:36586  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/interface.sol\":36557:36622  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"PolarAI/interface.sol\":36633:36682  _beforeTokenTransfer(address(0), account, amount) */\n      tag_216\n        /* \"PolarAI/interface.sol\":36662:36663  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":36666:36673  account */\n      dup4\n        /* \"PolarAI/interface.sol\":36675:36681  amount */\n      dup4\n        /* \"PolarAI/interface.sol\":36633:36653  _beforeTokenTransfer */\n      tag_203\n        /* \"PolarAI/interface.sol\":36633:36682  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_216:\n        /* \"PolarAI/interface.sol\":36708:36732  _totalSupply.add(amount) */\n      tag_217\n        /* \"PolarAI/interface.sol\":36725:36731  amount */\n      dup2\n        /* \"PolarAI/interface.sol\":36708:36720  _totalSupply */\n      sload(0x02)\n        /* \"PolarAI/interface.sol\":36708:36724  _totalSupply.add */\n      tag_131\n      swap1\n        /* \"PolarAI/interface.sol\":36708:36732  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"PolarAI/interface.sol\":36693:36705  _totalSupply */\n      0x02\n        /* \"PolarAI/interface.sol\":36693:36732  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/interface.sol\":36763:36793  _balances[account].add(amount) */\n      tag_218\n        /* \"PolarAI/interface.sol\":36786:36792  amount */\n      dup2\n        /* \"PolarAI/interface.sol\":36763:36772  _balances */\n      0x00\n        /* \"PolarAI/interface.sol\":36763:36781  _balances[account] */\n      dup1\n        /* \"PolarAI/interface.sol\":36773:36780  account */\n      dup6\n        /* \"PolarAI/interface.sol\":36763:36781  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":36763:36785  _balances[account].add */\n      tag_131\n      swap1\n        /* \"PolarAI/interface.sol\":36763:36793  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"PolarAI/interface.sol\":36742:36751  _balances */\n      0x00\n        /* \"PolarAI/interface.sol\":36742:36760  _balances[account] */\n      dup1\n        /* \"PolarAI/interface.sol\":36752:36759  account */\n      dup5\n        /* \"PolarAI/interface.sol\":36742:36760  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":36742:36793  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/interface.sol\":36829:36836  account */\n      dup2\n        /* \"PolarAI/interface.sol\":36808:36845  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":36825:36826  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":36808:36845  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"PolarAI/interface.sol\":36838:36844  amount */\n      dup4\n        /* \"PolarAI/interface.sol\":36808:36845  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PolarAI/interface.sol\":36482:36852  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/SushiToken_HKHH.sol\":6833:7762  function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {... */\n    tag_139:\n        /* \"PolarAI/SushiToken_HKHH.sol\":6938:6944  dstRep */\n      dup2\n        /* \"PolarAI/SushiToken_HKHH.sol\":6928:6944  srcRep != dstRep */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":6928:6934  srcRep */\n      dup4\n        /* \"PolarAI/SushiToken_HKHH.sol\":6928:6944  srcRep != dstRep */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/SushiToken_HKHH.sol\":6928:6958  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_220\n      jumpi\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":6957:6958  0 */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":6948:6954  amount */\n      dup2\n        /* \"PolarAI/SushiToken_HKHH.sol\":6948:6958  amount > 0 */\n      gt\n        /* \"PolarAI/SushiToken_HKHH.sol\":6928:6958  srcRep != dstRep && amount > 0 */\n    tag_220:\n        /* \"PolarAI/SushiToken_HKHH.sol\":6924:7756  if (srcRep != dstRep && amount > 0) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"PolarAI/SushiToken_HKHH.sol\":6996:6997  0 */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":6978:6998  srcRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":6978:6984  srcRep */\n      dup4\n        /* \"PolarAI/SushiToken_HKHH.sol\":6978:6998  srcRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PolarAI/SushiToken_HKHH.sol\":6974:7353  if (srcRep != address(0)) {... */\n      tag_222\n      jumpi\n        /* \"PolarAI/SushiToken_HKHH.sol\":7065:7081  uint32 srcRepNum */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":7084:7098  numCheckpoints */\n      0x08\n        /* \"PolarAI/SushiToken_HKHH.sol\":7084:7106  numCheckpoints[srcRep] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":7099:7105  srcRep */\n      dup6\n        /* \"PolarAI/SushiToken_HKHH.sol\":7084:7106  numCheckpoints[srcRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":7065:7106  uint32 srcRepNum = numCheckpoints[srcRep] */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":7124:7141  uint256 srcRepOld */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":7156:7157  0 */\n      dup1\n        /* \"PolarAI/SushiToken_HKHH.sol\":7144:7153  srcRepNum */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":7144:7157  srcRepNum > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"PolarAI/SushiToken_HKHH.sol\":7144:7204  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      tag_223\n      jumpi\n        /* \"PolarAI/SushiToken_HKHH.sol\":7203:7204  0 */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":7144:7204  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      jump(tag_224)\n    tag_223:\n        /* \"PolarAI/SushiToken_HKHH.sol\":7160:7171  checkpoints */\n      0x07\n        /* \"PolarAI/SushiToken_HKHH.sol\":7160:7179  checkpoints[srcRep] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":7172:7178  srcRep */\n      dup7\n        /* \"PolarAI/SushiToken_HKHH.sol\":7160:7179  checkpoints[srcRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":7160:7194  checkpoints[srcRep][srcRepNum - 1] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":7192:7193  1 */\n      0x01\n        /* \"PolarAI/SushiToken_HKHH.sol\":7180:7189  srcRepNum */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":7180:7193  srcRepNum - 1 */\n      sub\n        /* \"PolarAI/SushiToken_HKHH.sol\":7160:7194  checkpoints[srcRep][srcRepNum - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":7160:7200  checkpoints[srcRep][srcRepNum - 1].votes */\n      0x01\n      add\n      sload\n        /* \"PolarAI/SushiToken_HKHH.sol\":7144:7204  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n    tag_224:\n        /* \"PolarAI/SushiToken_HKHH.sol\":7124:7204  uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":7222:7239  uint256 srcRepNew */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":7242:7263  srcRepOld.sub(amount) */\n      tag_225\n        /* \"PolarAI/SushiToken_HKHH.sol\":7256:7262  amount */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":7242:7251  srcRepOld */\n      dup4\n        /* \"PolarAI/SushiToken_HKHH.sol\":7242:7255  srcRepOld.sub */\n      tag_226\n      swap1\n        /* \"PolarAI/SushiToken_HKHH.sol\":7242:7263  srcRepOld.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_225:\n        /* \"PolarAI/SushiToken_HKHH.sol\":7222:7263  uint256 srcRepNew = srcRepOld.sub(amount) */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":7281:7338  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_227\n        /* \"PolarAI/SushiToken_HKHH.sol\":7298:7304  srcRep */\n      dup7\n        /* \"PolarAI/SushiToken_HKHH.sol\":7306:7315  srcRepNum */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":7317:7326  srcRepOld */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":7328:7337  srcRepNew */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":7281:7297  _writeCheckpoint */\n      tag_228\n        /* \"PolarAI/SushiToken_HKHH.sol\":7281:7338  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_227:\n        /* \"PolarAI/SushiToken_HKHH.sol\":6974:7353  if (srcRep != address(0)) {... */\n      pop\n      pop\n      pop\n    tag_222:\n        /* \"PolarAI/SushiToken_HKHH.sol\":7389:7390  0 */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":7371:7391  dstRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":7371:7377  dstRep */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":7371:7391  dstRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PolarAI/SushiToken_HKHH.sol\":7367:7746  if (dstRep != address(0)) {... */\n      tag_229\n      jumpi\n        /* \"PolarAI/SushiToken_HKHH.sol\":7458:7474  uint32 dstRepNum */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":7477:7491  numCheckpoints */\n      0x08\n        /* \"PolarAI/SushiToken_HKHH.sol\":7477:7499  numCheckpoints[dstRep] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":7492:7498  dstRep */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":7477:7499  numCheckpoints[dstRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":7458:7499  uint32 dstRepNum = numCheckpoints[dstRep] */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":7517:7534  uint256 dstRepOld */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":7549:7550  0 */\n      dup1\n        /* \"PolarAI/SushiToken_HKHH.sol\":7537:7546  dstRepNum */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":7537:7550  dstRepNum > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"PolarAI/SushiToken_HKHH.sol\":7537:7597  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      tag_230\n      jumpi\n        /* \"PolarAI/SushiToken_HKHH.sol\":7596:7597  0 */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":7537:7597  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      jump(tag_231)\n    tag_230:\n        /* \"PolarAI/SushiToken_HKHH.sol\":7553:7564  checkpoints */\n      0x07\n        /* \"PolarAI/SushiToken_HKHH.sol\":7553:7572  checkpoints[dstRep] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":7565:7571  dstRep */\n      dup6\n        /* \"PolarAI/SushiToken_HKHH.sol\":7553:7572  checkpoints[dstRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":7553:7587  checkpoints[dstRep][dstRepNum - 1] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":7585:7586  1 */\n      0x01\n        /* \"PolarAI/SushiToken_HKHH.sol\":7573:7582  dstRepNum */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":7573:7586  dstRepNum - 1 */\n      sub\n        /* \"PolarAI/SushiToken_HKHH.sol\":7553:7587  checkpoints[dstRep][dstRepNum - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":7553:7593  checkpoints[dstRep][dstRepNum - 1].votes */\n      0x01\n      add\n      sload\n        /* \"PolarAI/SushiToken_HKHH.sol\":7537:7597  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n    tag_231:\n        /* \"PolarAI/SushiToken_HKHH.sol\":7517:7597  uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":7615:7632  uint256 dstRepNew */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":7635:7656  dstRepOld.add(amount) */\n      tag_232\n        /* \"PolarAI/SushiToken_HKHH.sol\":7649:7655  amount */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":7635:7644  dstRepOld */\n      dup4\n        /* \"PolarAI/SushiToken_HKHH.sol\":7635:7648  dstRepOld.add */\n      tag_131\n      swap1\n        /* \"PolarAI/SushiToken_HKHH.sol\":7635:7656  dstRepOld.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"PolarAI/SushiToken_HKHH.sol\":7615:7656  uint256 dstRepNew = dstRepOld.add(amount) */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":7674:7731  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_233\n        /* \"PolarAI/SushiToken_HKHH.sol\":7691:7697  dstRep */\n      dup6\n        /* \"PolarAI/SushiToken_HKHH.sol\":7699:7708  dstRepNum */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":7710:7719  dstRepOld */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":7721:7730  dstRepNew */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":7674:7690  _writeCheckpoint */\n      tag_228\n        /* \"PolarAI/SushiToken_HKHH.sol\":7674:7731  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      jump\t// in\n    tag_233:\n        /* \"PolarAI/SushiToken_HKHH.sol\":7367:7746  if (dstRep != address(0)) {... */\n      pop\n      pop\n      pop\n    tag_229:\n        /* \"PolarAI/SushiToken_HKHH.sol\":6924:7756  if (srcRep != dstRep && amount > 0) {... */\n    tag_221:\n        /* \"PolarAI/SushiToken_HKHH.sol\":6833:7762  function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/SushiToken_HKHH.sol\":6398:6827  function _delegate(address delegator, address delegatee)... */\n    tag_143:\n        /* \"PolarAI/SushiToken_HKHH.sol\":6486:6509  address currentDelegate */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":6512:6522  _delegates */\n      0x06\n        /* \"PolarAI/SushiToken_HKHH.sol\":6512:6533  _delegates[delegator] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":6523:6532  delegator */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":6512:6533  _delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":6486:6533  address currentDelegate = _delegates[delegator] */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":6543:6567  uint256 delegatorBalance */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":6570:6590  balanceOf(delegator) */\n      tag_235\n        /* \"PolarAI/SushiToken_HKHH.sol\":6580:6589  delegator */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":6570:6579  balanceOf */\n      tag_67\n        /* \"PolarAI/SushiToken_HKHH.sol\":6570:6590  balanceOf(delegator) */\n      jump\t// in\n    tag_235:\n        /* \"PolarAI/SushiToken_HKHH.sol\":6543:6590  uint256 delegatorBalance = balanceOf(delegator) */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":6670:6679  delegatee */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":6646:6656  _delegates */\n      0x06\n        /* \"PolarAI/SushiToken_HKHH.sol\":6646:6667  _delegates[delegator] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":6657:6666  delegator */\n      dup7\n        /* \"PolarAI/SushiToken_HKHH.sol\":6646:6667  _delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":6646:6679  _delegates[delegator] = delegatee */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":6739:6748  delegatee */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":6695:6749  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":6722:6737  currentDelegate */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":6695:6749  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":6711:6720  delegator */\n      dup6\n        /* \"PolarAI/SushiToken_HKHH.sol\":6695:6749  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"PolarAI/SushiToken_HKHH.sol\":6760:6820  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_236\n        /* \"PolarAI/SushiToken_HKHH.sol\":6775:6790  currentDelegate */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":6792:6801  delegatee */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":6803:6819  delegatorBalance */\n      dup4\n        /* \"PolarAI/SushiToken_HKHH.sol\":6760:6774  _moveDelegates */\n      tag_139\n        /* \"PolarAI/SushiToken_HKHH.sol\":6760:6820  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_236:\n        /* \"PolarAI/SushiToken_HKHH.sol\":6398:6827  function _delegate(address delegator, address delegatee)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/SushiToken_HKHH.sol\":8625:8774  function getChainId() internal pure returns (uint) {... */\n    tag_182:\n        /* \"PolarAI/SushiToken_HKHH.sol\":8670:8674  uint */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":8686:8701  uint256 chainId */\n      dup1\n        /* \"PolarAI/SushiToken_HKHH.sol\":8733:8742  chainid() */\n      chainid\n        /* \"PolarAI/SushiToken_HKHH.sol\":8722:8742  chainId := chainid() */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":8760:8767  chainId */\n      dup1\n        /* \"PolarAI/SushiToken_HKHH.sol\":8753:8767  return chainId */\n      swap2\n      pop\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":8625:8774  function getChainId() internal pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":39344:39436  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_203:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":4119:4253  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_226:\n        /* \"PolarAI/interface.sol\":4177:4184  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":4203:4246  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_240\n        /* \"PolarAI/interface.sol\":4207:4208  a */\n      dup4\n        /* \"PolarAI/interface.sol\":4210:4211  b */\n      dup4\n        /* \"PolarAI/interface.sol\":4203:4246  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"PolarAI/interface.sol\":4203:4206  sub */\n      tag_124\n        /* \"PolarAI/interface.sol\":4203:4246  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_240:\n        /* \"PolarAI/interface.sol\":4196:4246  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":4119:4253  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/SushiToken_HKHH.sol\":7768:8455  function _writeCheckpoint(... */\n    tag_228:\n        /* \"PolarAI/SushiToken_HKHH.sol\":7939:7957  uint32 blockNumber */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":7960:8037  safe32(block.number, \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\") */\n      tag_242\n        /* \"PolarAI/SushiToken_HKHH.sol\":7967:7979  block.number */\n      number\n        /* \"PolarAI/SushiToken_HKHH.sol\":7960:8037  safe32(block.number, \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x35\n      dup2\n      mstore\n      0x20\n      add\n      data_80202fadc1798ad44893c1a6a1a3b4079151936a969e36fa214486a4e00f3a74\n      0x35\n      swap2\n      codecopy\n        /* \"PolarAI/SushiToken_HKHH.sol\":7960:7966  safe32 */\n      tag_243\n        /* \"PolarAI/SushiToken_HKHH.sol\":7960:8037  safe32(block.number, \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\") */\n      jump\t// in\n    tag_242:\n        /* \"PolarAI/SushiToken_HKHH.sol\":7939:8037  uint32 blockNumber = safe32(block.number, \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\") */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":8067:8068  0 */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":8052:8064  nCheckpoints */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":8052:8068  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"PolarAI/SushiToken_HKHH.sol\":8052:8137  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup1\n      iszero\n      tag_244\n      jumpi\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":8126:8137  blockNumber */\n      dup1\n        /* \"PolarAI/SushiToken_HKHH.sol\":8072:8137  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":8072:8083  checkpoints */\n      0x07\n        /* \"PolarAI/SushiToken_HKHH.sol\":8072:8094  checkpoints[delegatee] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":8084:8093  delegatee */\n      dup8\n        /* \"PolarAI/SushiToken_HKHH.sol\":8072:8094  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":8072:8112  checkpoints[delegatee][nCheckpoints - 1] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":8110:8111  1 */\n      0x01\n        /* \"PolarAI/SushiToken_HKHH.sol\":8095:8107  nCheckpoints */\n      dup8\n        /* \"PolarAI/SushiToken_HKHH.sol\":8095:8111  nCheckpoints - 1 */\n      sub\n        /* \"PolarAI/SushiToken_HKHH.sol\":8072:8112  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":8072:8122  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"PolarAI/SushiToken_HKHH.sol\":8072:8137  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      and\n      eq\n        /* \"PolarAI/SushiToken_HKHH.sol\":8052:8137  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n    tag_244:\n        /* \"PolarAI/SushiToken_HKHH.sol\":8048:8382  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      iszero\n      tag_245\n      jumpi\n        /* \"PolarAI/SushiToken_HKHH.sol\":8202:8210  newVotes */\n      dup2\n        /* \"PolarAI/SushiToken_HKHH.sol\":8153:8164  checkpoints */\n      0x07\n        /* \"PolarAI/SushiToken_HKHH.sol\":8153:8175  checkpoints[delegatee] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":8165:8174  delegatee */\n      dup8\n        /* \"PolarAI/SushiToken_HKHH.sol\":8153:8175  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":8153:8193  checkpoints[delegatee][nCheckpoints - 1] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":8191:8192  1 */\n      0x01\n        /* \"PolarAI/SushiToken_HKHH.sol\":8176:8188  nCheckpoints */\n      dup8\n        /* \"PolarAI/SushiToken_HKHH.sol\":8176:8192  nCheckpoints - 1 */\n      sub\n        /* \"PolarAI/SushiToken_HKHH.sol\":8153:8193  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":8153:8199  checkpoints[delegatee][nCheckpoints - 1].votes */\n      0x01\n      add\n        /* \"PolarAI/SushiToken_HKHH.sol\":8153:8210  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":8048:8382  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      jump(tag_246)\n    tag_245:\n        /* \"PolarAI/SushiToken_HKHH.sol\":8280:8313  Checkpoint(blockNumber, newVotes) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"PolarAI/SushiToken_HKHH.sol\":8291:8302  blockNumber */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":8280:8313  Checkpoint(blockNumber, newVotes) */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"PolarAI/SushiToken_HKHH.sol\":8304:8312  newVotes */\n      dup4\n        /* \"PolarAI/SushiToken_HKHH.sol\":8280:8313  Checkpoint(blockNumber, newVotes) */\n      dup2\n      mstore\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":8241:8252  checkpoints */\n      0x07\n        /* \"PolarAI/SushiToken_HKHH.sol\":8241:8263  checkpoints[delegatee] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":8253:8262  delegatee */\n      dup8\n        /* \"PolarAI/SushiToken_HKHH.sol\":8241:8263  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":8241:8277  checkpoints[delegatee][nCheckpoints] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":8264:8276  nCheckpoints */\n      dup7\n        /* \"PolarAI/SushiToken_HKHH.sol\":8241:8277  checkpoints[delegatee][nCheckpoints] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/SushiToken_HKHH.sol\":8241:8313  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":8370:8371  1 */\n      0x01\n        /* \"PolarAI/SushiToken_HKHH.sol\":8355:8367  nCheckpoints */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":8355:8371  nCheckpoints + 1 */\n      add\n        /* \"PolarAI/SushiToken_HKHH.sol\":8327:8341  numCheckpoints */\n      0x08\n        /* \"PolarAI/SushiToken_HKHH.sol\":8327:8352  numCheckpoints[delegatee] */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":8342:8351  delegatee */\n      dup8\n        /* \"PolarAI/SushiToken_HKHH.sol\":8327:8352  numCheckpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":8327:8371  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":8048:8382  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n    tag_246:\n        /* \"PolarAI/SushiToken_HKHH.sol\":8418:8427  delegatee */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":8397:8448  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n        /* \"PolarAI/SushiToken_HKHH.sol\":8429:8437  oldVotes */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":8439:8447  newVotes */\n      dup5\n        /* \"PolarAI/SushiToken_HKHH.sol\":8397:8448  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"PolarAI/SushiToken_HKHH.sol\":7768:8455  function _writeCheckpoint(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/SushiToken_HKHH.sol\":8461:8619  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {... */\n    tag_243:\n        /* \"PolarAI/SushiToken_HKHH.sol\":8536:8542  uint32 */\n      0x00\n        /* \"PolarAI/SushiToken_HKHH.sol\":8566:8571  2**32 */\n      0x0100000000\n        /* \"PolarAI/SushiToken_HKHH.sol\":8562:8563  n */\n      dup4\n        /* \"PolarAI/SushiToken_HKHH.sol\":8562:8571  n < 2**32 */\n      lt\n        /* \"PolarAI/SushiToken_HKHH.sol\":8573:8585  errorMessage */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":8554:8586  require(n < 2**32, errorMessage) */\n      swap1\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_249:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_251\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_249)\n    tag_251:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_252\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_252:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":8610:8611  n */\n      dup3\n        /* \"PolarAI/SushiToken_HKHH.sol\":8596:8612  return uint32(n) */\n      swap1\n      pop\n        /* \"PolarAI/SushiToken_HKHH.sol\":8461:8619  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_158:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_18fecdf225b5e9a1d03e234e6893b777c717a928a78496f199bb78499b5dcd1c 53555348493a3a64656c656761746542795369673a207369676e61747572652065787069726564\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_80202fadc1798ad44893c1a6a1a3b4079151936a969e36fa214486a4e00f3a74 53555348493a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473\n    data_95f5bca076212943aad5c226142010ad55d0096dba63ca905d770f4fe4afff33 53555348493a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a1e65db8426b65ad764814369e421d0b17d63e03dc4c1056a693e1cc89fb7a3e 53555348493a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365\n    data_aeeb870860c7451819edc560c5520e1197c2d62c04cc23def3a21b91410d0633 53555348493a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122026c215e3e21a8c94ae962569f179e270b689c02e4f6489bfaab512b0aca771cd64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600a81526020017f5375736869546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f53555348490000000000000000000000000000000000000000000000000000008152508160039080519060200190620000969291906200018d565b508060049080519060200190620000af9291906200018d565b506012600560006101000a81548160ff021916908360ff16021790555050506000620000e06200018560201b60201c565b905080600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35062000233565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001d057805160ff191683800117855562000201565b8280016001018555821562000201579182015b8281111562000200578251825591602001919060010190620001e3565b5b50905062000210919062000214565b5090565b5b808211156200022f57600081600090555060010162000215565b5090565b612e9680620002436000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063715018a6116100de578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e1461086e578063e7a324dc146108e6578063f1127ed814610904578063f2fde38b1461097957610173565b8063a9059cbb14610739578063b4b5ea571461079d578063c3cda520146107f557610173565b8063715018a61461055a578063782d6fe1146105645780637ecebe00146105c65780638da5cb5b1461061e57806395d89b4114610652578063a457c2d7146106d557610173565b80633950935111610130578063395093511461034057806340c10f19146103a4578063587cde1e146103f25780635c19a95c146104605780636fcfff45146104a457806370a082311461050257610173565b806306fdde0314610178578063095ea7b3146101fb57806318160ddd1461025f57806320606b701461027d57806323b872dd1461029b578063313ce5671461031f575b600080fd5b6101806109bd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c05780820151818401526020810190506101a5565b50505050905090810190601f1680156101ed5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102476004803603604081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a5f565b60405180821515815260200191505060405180910390f35b610267610a7d565b6040518082815260200191505060405180910390f35b610285610a87565b6040518082815260200191505060405180910390f35b610307600480360360608110156102b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aab565b60405180821515815260200191505060405180910390f35b610327610b84565b604051808260ff16815260200191505060405180910390f35b61038c6004803603604081101561035657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b9b565b60405180821515815260200191505060405180910390f35b6103f0600480360360408110156103ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c4e565b005b6104346004803603602081101561040857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d91565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104a26004803603602081101561047657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dfa565b005b6104e6600480360360208110156104ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e07565b604051808263ffffffff16815260200191505060405180910390f35b6105446004803603602081101561051857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e2a565b6040518082815260200191505060405180910390f35b610562610e72565b005b6105b06004803603604081101561057a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ffd565b6040518082815260200191505060405180910390f35b610608600480360360208110156105dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113be565b6040518082815260200191505060405180910390f35b6106266113d6565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61065a611400565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561069a57808201518184015260208101905061067f565b50505050905090810190601f1680156106c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610721600480360360408110156106eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114a2565b60405180821515815260200191505060405180910390f35b6107856004803603604081101561074f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061156f565b60405180821515815260200191505060405180910390f35b6107df600480360360208110156107b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061158d565b6040518082815260200191505060405180910390f35b61086c600480360360c081101561080b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050611663565b005b6108d06004803603604081101561088457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119c7565b6040518082815260200191505060405180910390f35b6108ee611a4e565b6040518082815260200191505060405180910390f35b6109566004803603604081101561091a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190505050611a72565b604051808363ffffffff1681526020018281526020019250505060405180910390f35b6109bb6004803603602081101561098f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ab3565b005b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a555780601f10610a2a57610100808354040283529160200191610a55565b820191906000526020600020905b815481529060010190602001808311610a3857829003601f168201915b5050505050905090565b6000610a73610a6c611cc3565b8484611ccb565b6001905092915050565b6000600254905090565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6000610ab8848484611ec2565b610b7984610ac4611cc3565b610b7485604051806060016040528060288152602001612d8160289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610b2a611cc3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121839092919063ffffffff16565b611ccb565b600190509392505050565b6000600560009054906101000a900460ff16905090565b6000610c44610ba8611cc3565b84610c3f8560016000610bb9611cc3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461224390919063ffffffff16565b611ccb565b6001905092915050565b610c56611cc3565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d18576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d2282826122cb565b610d8d6000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683612492565b5050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610e04338261272f565b50565b60086020528060005260406000206000915054906101000a900463ffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610e7a611cc3565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000438210611057576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612d596028913960400191505060405180910390fd5b6000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff1614156110c45760009150506113b8565b82600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16116111ae57600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff168152602001908152602001600020600101549150506113b8565b82600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008063ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16111561122f5760009150506113b8565b6000806001830390505b8163ffffffff168163ffffffff161115611352576000600283830363ffffffff168161126157fe5b048203905061126e612c4b565b600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600182015481525050905086816000015163ffffffff16141561132a578060200151955050505050506113b8565b86816000015163ffffffff1610156113445781935061134b565b6001820392505b5050611239565b600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206001015493505050505b92915050565b60096020528060005260406000206000915090505481565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114985780601f1061146d57610100808354040283529160200191611498565b820191906000526020600020905b81548152906001019060200180831161147b57829003601f168201915b5050505050905090565b60006115656114af611cc3565b8461156085604051806060016040528060258152602001612e3c60259139600160006114d9611cc3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121839092919063ffffffff16565b611ccb565b6001905092915050565b600061158361157c611cc3565b8484611ec2565b6001905092915050565b600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff16116115f757600061165b565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff168152602001908152602001600020600101545b915050919050565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86661168e6109bd565b8051906020012061169d6128a0565b30604051602001808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405160208183030381529060405280519060200120905060007fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf888888604051602001808581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019450505050506040516020818303038152906040528051906020012090506000828260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611821573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156118b3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612dcc6027913960400191505060405180910390fd5b600960008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558914611958576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612da96023913960400191505060405180910390fd5b874211156119b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612c8f6027913960400191505060405180910390fd5b6119bb818b61272f565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b6007602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900463ffffffff16908060010154905082565b611abb611cc3565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611b7d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612cb66026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611d51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612e186024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611dd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612cdc6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611f48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612df36025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611fce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612c6c6023913960400191505060405180910390fd5b611fd98383836128ad565b61204481604051806060016040528060268152602001612cfe602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121839092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506120d7816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461224390919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290612230576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156121f55780820151818401526020810190506121da565b50505050905090810190601f1680156122225780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156122c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561236e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61237a600083836128ad565b61238f8160025461224390919063ffffffff16565b6002819055506123e6816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461224390919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156124ce5750600081115b1561272a57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146125fe576000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff16116125715760006125d5565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff168152602001908152602001600020600101545b905060006125ec84836128b290919063ffffffff16565b90506125fa868484846128fc565b5050505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612729576000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff161161269c576000612700565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff168152602001908152602001600020600101545b90506000612717848361224390919063ffffffff16565b9050612725858484846128fc565b5050505b5b505050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600061279e84610e2a565b905082600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a461289a828483612492565b50505050565b6000804690508091505090565b505050565b60006128f483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612183565b905092915050565b600061292043604051806060016040528060358152602001612d2460359139612b90565b905060008463ffffffff161180156129b557508063ffffffff16600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16145b15612a265781600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060010181905550612b33565b60405180604001604052808263ffffffff16815260200183815250600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008663ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff1602179055506020820151816001015590505060018401600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505b8473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248484604051808381526020018281526020019250505060405180910390a25050505050565b600064010000000083108290612c41576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c06578082015181840152602081019050612beb565b50505050905090810190601f168015612c335780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082905092915050565b6040518060400160405280600063ffffffff16815260200160008152509056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737353555348493a3a64656c656761746542795369673a207369676e617475726520657870697265644f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636553555348493a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d6265722065786365656473203332206269747353555348493a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636553555348493a3a64656c656761746542795369673a20696e76616c6964206e6f6e636553555348493a3a64656c656761746542795369673a20696e76616c6964207369676e617475726545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122026c215e3e21a8c94ae962569f179e270b689c02e4f6489bfaab512b0aca771cd64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5375736869546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5355534849000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0x18D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0x18D JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 PUSH3 0xE0 PUSH3 0x185 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x233 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1D0 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x201 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x201 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x200 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1E3 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x210 SWAP2 SWAP1 PUSH3 0x214 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x22F JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x215 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2E96 DUP1 PUSH3 0x243 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x86E JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x8E6 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x904 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x979 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x739 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x79D JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x7F5 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x652 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x6D5 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x502 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x31F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1ED JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC4E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDFA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x544 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x562 PUSH2 0xE72 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x608 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x626 PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65A PUSH2 0x1400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x69A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x67F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6C7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x721 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x785 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x156F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x158D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x80B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1663 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8EE PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x956 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x98F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AB3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA55 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA2A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA55 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA38 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA73 PUSH2 0xA6C PUSH2 0x1CC3 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB8 DUP5 DUP5 DUP5 PUSH2 0x1EC2 JUMP JUMPDEST PUSH2 0xB79 DUP5 PUSH2 0xAC4 PUSH2 0x1CC3 JUMP JUMPDEST PUSH2 0xB74 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D81 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xB2A PUSH2 0x1CC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2183 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC44 PUSH2 0xBA8 PUSH2 0x1CC3 JUMP JUMPDEST DUP5 PUSH2 0xC3F DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xBB9 PUSH2 0x1CC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2243 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC56 PUSH2 0x1CC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD22 DUP3 DUP3 PUSH2 0x22CB JUMP JUMPDEST PUSH2 0xD8D PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x2492 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE04 CALLER DUP3 PUSH2 0x272F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE7A PUSH2 0x1CC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x1057 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D59 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x10C4 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x13B8 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0x11AE JUMPI PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x13B8 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x122F JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1352 JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 SUB PUSH4 0xFFFFFFFF AND DUP2 PUSH2 0x1261 JUMPI INVALID JUMPDEST DIV DUP3 SUB SWAP1 POP PUSH2 0x126E PUSH2 0x2C4B JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x132A JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP6 POP POP POP POP POP POP PUSH2 0x13B8 JUMP JUMPDEST DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1344 JUMPI DUP2 SWAP4 POP PUSH2 0x134B JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1498 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x146D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1498 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x147B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1565 PUSH2 0x14AF PUSH2 0x1CC3 JUMP JUMPDEST DUP5 PUSH2 0x1560 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E3C PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x14D9 PUSH2 0x1CC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2183 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1583 PUSH2 0x157C PUSH2 0x1CC3 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1EC2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x15F7 JUMPI PUSH1 0x0 PUSH2 0x165B JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH2 0x168E PUSH2 0x9BD JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x169D PUSH2 0x28A0 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1821 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DCC PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0x1958 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DA9 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x19B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C8F PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19BB DUP2 DUP12 PUSH2 0x272F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x1ABB PUSH2 0x1CC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CB6 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E18 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CDC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1F48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DF3 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C6C PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FD9 DUP4 DUP4 DUP4 PUSH2 0x28AD JUMP JUMPDEST PUSH2 0x2044 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CFE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2183 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x20D7 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2243 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2230 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21F5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21DA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2222 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x22C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x236E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x237A PUSH1 0x0 DUP4 DUP4 PUSH2 0x28AD JUMP JUMPDEST PUSH2 0x238F DUP2 PUSH1 0x2 SLOAD PUSH2 0x2243 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x23E6 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2243 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x24CE JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x272A JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25FE JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x2571 JUMPI PUSH1 0x0 PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25EC DUP5 DUP4 PUSH2 0x28B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x25FA DUP7 DUP5 DUP5 DUP5 PUSH2 0x28FC JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2729 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x269C JUMPI PUSH1 0x0 PUSH2 0x2700 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2717 DUP5 DUP4 PUSH2 0x2243 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2725 DUP6 DUP5 DUP5 DUP5 PUSH2 0x28FC JUMP JUMPDEST POP POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x279E DUP5 PUSH2 0xE2A JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x289A DUP3 DUP5 DUP4 PUSH2 0x2492 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2183 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2920 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D24 PUSH1 0x35 SWAP2 CODECOPY PUSH2 0x2B90 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x29B5 JUMPI POP DUP1 PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2A26 JUMPI DUP2 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2B33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 DUP5 ADD PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP4 LT DUP3 SWAP1 PUSH2 0x2C41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C06 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2BEB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C33 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 MSTORE8 SSTORE MSTORE8 0x48 0x49 GASPRICE GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A207369676E617475726520657870 PUSH10 0x7265644F776E61626C65 GASPRICE KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65535553 0x48 0x49 GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 MSTORE8 SSTORE MSTORE8 0x48 0x49 GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636553555348493A3A64656C PUSH6 0x676174654279 MSTORE8 PUSH10 0x673A20696E76616C6964 KECCAK256 PUSH15 0x6F6E636553555348493A3A64656C65 PUSH8 0x6174654279536967 GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x617475726545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122026C2 ISZERO 0xE3 0xE2 BYTE DUP13 SWAP5 0xAE SWAP7 0x25 PUSH10 0xF179E270B689C02E4F64 DUP10 0xBF 0xAA 0xB5 SLT 0xB0 0xAC 0xA7 PUSH18 0xCD64736F6C634300060C0033000000000000 ",
							"sourceMap": "82:8694:0:-:0;;;;;;;;;;;;;30660:141:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30740:4;30732:5;:12;;;;;;;;;;;;:::i;:::-;;30764:6;30754:7;:16;;;;;;;;;;;;:::i;:::-;;30792:2;30780:9;;:14;;;;;;;;;;;;;;;;;;30660:141;;27380:17;27400:12;:10;;;:12;;:::i;:::-;27380:32;;27431:9;27422:6;;:18;;;;;;;;;;;;;;;;;;27488:9;27455:43;;27484:1;27455:43;;;;;;;;;;;;27346:159;82:8694:0;;26178:104:1;26231:15;26265:10;26258:17;;26178:104;:::o;82:8694:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101735760003560e01c8063715018a6116100de578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e1461086e578063e7a324dc146108e6578063f1127ed814610904578063f2fde38b1461097957610173565b8063a9059cbb14610739578063b4b5ea571461079d578063c3cda520146107f557610173565b8063715018a61461055a578063782d6fe1146105645780637ecebe00146105c65780638da5cb5b1461061e57806395d89b4114610652578063a457c2d7146106d557610173565b80633950935111610130578063395093511461034057806340c10f19146103a4578063587cde1e146103f25780635c19a95c146104605780636fcfff45146104a457806370a082311461050257610173565b806306fdde0314610178578063095ea7b3146101fb57806318160ddd1461025f57806320606b701461027d57806323b872dd1461029b578063313ce5671461031f575b600080fd5b6101806109bd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c05780820151818401526020810190506101a5565b50505050905090810190601f1680156101ed5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102476004803603604081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a5f565b60405180821515815260200191505060405180910390f35b610267610a7d565b6040518082815260200191505060405180910390f35b610285610a87565b6040518082815260200191505060405180910390f35b610307600480360360608110156102b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aab565b60405180821515815260200191505060405180910390f35b610327610b84565b604051808260ff16815260200191505060405180910390f35b61038c6004803603604081101561035657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b9b565b60405180821515815260200191505060405180910390f35b6103f0600480360360408110156103ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c4e565b005b6104346004803603602081101561040857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d91565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104a26004803603602081101561047657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dfa565b005b6104e6600480360360208110156104ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e07565b604051808263ffffffff16815260200191505060405180910390f35b6105446004803603602081101561051857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e2a565b6040518082815260200191505060405180910390f35b610562610e72565b005b6105b06004803603604081101561057a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ffd565b6040518082815260200191505060405180910390f35b610608600480360360208110156105dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113be565b6040518082815260200191505060405180910390f35b6106266113d6565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61065a611400565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561069a57808201518184015260208101905061067f565b50505050905090810190601f1680156106c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610721600480360360408110156106eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114a2565b60405180821515815260200191505060405180910390f35b6107856004803603604081101561074f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061156f565b60405180821515815260200191505060405180910390f35b6107df600480360360208110156107b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061158d565b6040518082815260200191505060405180910390f35b61086c600480360360c081101561080b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050611663565b005b6108d06004803603604081101561088457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119c7565b6040518082815260200191505060405180910390f35b6108ee611a4e565b6040518082815260200191505060405180910390f35b6109566004803603604081101561091a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190505050611a72565b604051808363ffffffff1681526020018281526020019250505060405180910390f35b6109bb6004803603602081101561098f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ab3565b005b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a555780601f10610a2a57610100808354040283529160200191610a55565b820191906000526020600020905b815481529060010190602001808311610a3857829003601f168201915b5050505050905090565b6000610a73610a6c611cc3565b8484611ccb565b6001905092915050565b6000600254905090565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6000610ab8848484611ec2565b610b7984610ac4611cc3565b610b7485604051806060016040528060288152602001612d8160289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610b2a611cc3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121839092919063ffffffff16565b611ccb565b600190509392505050565b6000600560009054906101000a900460ff16905090565b6000610c44610ba8611cc3565b84610c3f8560016000610bb9611cc3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461224390919063ffffffff16565b611ccb565b6001905092915050565b610c56611cc3565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d18576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d2282826122cb565b610d8d6000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683612492565b5050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610e04338261272f565b50565b60086020528060005260406000206000915054906101000a900463ffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610e7a611cc3565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000438210611057576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612d596028913960400191505060405180910390fd5b6000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff1614156110c45760009150506113b8565b82600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16116111ae57600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff168152602001908152602001600020600101549150506113b8565b82600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008063ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16111561122f5760009150506113b8565b6000806001830390505b8163ffffffff168163ffffffff161115611352576000600283830363ffffffff168161126157fe5b048203905061126e612c4b565b600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600182015481525050905086816000015163ffffffff16141561132a578060200151955050505050506113b8565b86816000015163ffffffff1610156113445781935061134b565b6001820392505b5050611239565b600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206001015493505050505b92915050565b60096020528060005260406000206000915090505481565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114985780601f1061146d57610100808354040283529160200191611498565b820191906000526020600020905b81548152906001019060200180831161147b57829003601f168201915b5050505050905090565b60006115656114af611cc3565b8461156085604051806060016040528060258152602001612e3c60259139600160006114d9611cc3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121839092919063ffffffff16565b611ccb565b6001905092915050565b600061158361157c611cc3565b8484611ec2565b6001905092915050565b600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff16116115f757600061165b565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff168152602001908152602001600020600101545b915050919050565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86661168e6109bd565b8051906020012061169d6128a0565b30604051602001808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405160208183030381529060405280519060200120905060007fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf888888604051602001808581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019450505050506040516020818303038152906040528051906020012090506000828260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611821573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156118b3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612dcc6027913960400191505060405180910390fd5b600960008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558914611958576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612da96023913960400191505060405180910390fd5b874211156119b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612c8f6027913960400191505060405180910390fd5b6119bb818b61272f565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b6007602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900463ffffffff16908060010154905082565b611abb611cc3565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611b7d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612cb66026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611d51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612e186024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611dd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612cdc6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611f48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612df36025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611fce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612c6c6023913960400191505060405180910390fd5b611fd98383836128ad565b61204481604051806060016040528060268152602001612cfe602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121839092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506120d7816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461224390919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290612230576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156121f55780820151818401526020810190506121da565b50505050905090810190601f1680156122225780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156122c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561236e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61237a600083836128ad565b61238f8160025461224390919063ffffffff16565b6002819055506123e6816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461224390919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156124ce5750600081115b1561272a57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146125fe576000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff16116125715760006125d5565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff168152602001908152602001600020600101545b905060006125ec84836128b290919063ffffffff16565b90506125fa868484846128fc565b5050505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612729576000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff161161269c576000612700565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff168152602001908152602001600020600101545b90506000612717848361224390919063ffffffff16565b9050612725858484846128fc565b5050505b5b505050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600061279e84610e2a565b905082600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a461289a828483612492565b50505050565b6000804690508091505090565b505050565b60006128f483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612183565b905092915050565b600061292043604051806060016040528060358152602001612d2460359139612b90565b905060008463ffffffff161180156129b557508063ffffffff16600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16145b15612a265781600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060010181905550612b33565b60405180604001604052808263ffffffff16815260200183815250600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008663ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff1602179055506020820151816001015590505060018401600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505b8473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248484604051808381526020018281526020019250505060405180910390a25050505050565b600064010000000083108290612c41576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c06578082015181840152602081019050612beb565b50505050905090810190601f168015612c335780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082905092915050565b6040518060400160405280600063ffffffff16815260200160008152509056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737353555348493a3a64656c656761746542795369673a207369676e617475726520657870697265644f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636553555348493a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d6265722065786365656473203332206269747353555348493a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636553555348493a3a64656c656761746542795369673a20696e76616c6964206e6f6e636553555348493a3a64656c656761746542795369673a20696e76616c6964207369676e617475726545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122026c215e3e21a8c94ae962569f179e270b689c02e4f6489bfaab512b0aca771cd64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x86E JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x8E6 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x904 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x979 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x739 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x79D JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x7F5 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x652 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x6D5 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x502 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x31F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1ED JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC4E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDFA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x544 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x562 PUSH2 0xE72 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x608 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x626 PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65A PUSH2 0x1400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x69A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x67F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6C7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x721 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x785 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x156F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x158D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x80B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1663 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8EE PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x956 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x98F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AB3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA55 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA2A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA55 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA38 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA73 PUSH2 0xA6C PUSH2 0x1CC3 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB8 DUP5 DUP5 DUP5 PUSH2 0x1EC2 JUMP JUMPDEST PUSH2 0xB79 DUP5 PUSH2 0xAC4 PUSH2 0x1CC3 JUMP JUMPDEST PUSH2 0xB74 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D81 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xB2A PUSH2 0x1CC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2183 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC44 PUSH2 0xBA8 PUSH2 0x1CC3 JUMP JUMPDEST DUP5 PUSH2 0xC3F DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xBB9 PUSH2 0x1CC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2243 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC56 PUSH2 0x1CC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD22 DUP3 DUP3 PUSH2 0x22CB JUMP JUMPDEST PUSH2 0xD8D PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x2492 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE04 CALLER DUP3 PUSH2 0x272F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE7A PUSH2 0x1CC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x1057 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D59 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x10C4 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x13B8 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0x11AE JUMPI PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x13B8 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x122F JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1352 JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 SUB PUSH4 0xFFFFFFFF AND DUP2 PUSH2 0x1261 JUMPI INVALID JUMPDEST DIV DUP3 SUB SWAP1 POP PUSH2 0x126E PUSH2 0x2C4B JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x132A JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP6 POP POP POP POP POP POP PUSH2 0x13B8 JUMP JUMPDEST DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1344 JUMPI DUP2 SWAP4 POP PUSH2 0x134B JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1498 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x146D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1498 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x147B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1565 PUSH2 0x14AF PUSH2 0x1CC3 JUMP JUMPDEST DUP5 PUSH2 0x1560 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E3C PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x14D9 PUSH2 0x1CC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2183 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1583 PUSH2 0x157C PUSH2 0x1CC3 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1EC2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x15F7 JUMPI PUSH1 0x0 PUSH2 0x165B JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH2 0x168E PUSH2 0x9BD JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x169D PUSH2 0x28A0 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1821 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DCC PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0x1958 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DA9 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x19B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C8F PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19BB DUP2 DUP12 PUSH2 0x272F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x1ABB PUSH2 0x1CC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CB6 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E18 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CDC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1F48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DF3 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C6C PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FD9 DUP4 DUP4 DUP4 PUSH2 0x28AD JUMP JUMPDEST PUSH2 0x2044 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CFE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2183 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x20D7 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2243 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2230 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21F5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21DA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2222 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x22C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x236E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x237A PUSH1 0x0 DUP4 DUP4 PUSH2 0x28AD JUMP JUMPDEST PUSH2 0x238F DUP2 PUSH1 0x2 SLOAD PUSH2 0x2243 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x23E6 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2243 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x24CE JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x272A JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25FE JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x2571 JUMPI PUSH1 0x0 PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25EC DUP5 DUP4 PUSH2 0x28B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x25FA DUP7 DUP5 DUP5 DUP5 PUSH2 0x28FC JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2729 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x269C JUMPI PUSH1 0x0 PUSH2 0x2700 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2717 DUP5 DUP4 PUSH2 0x2243 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2725 DUP6 DUP5 DUP5 DUP5 PUSH2 0x28FC JUMP JUMPDEST POP POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x279E DUP5 PUSH2 0xE2A JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x289A DUP3 DUP5 DUP4 PUSH2 0x2492 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2183 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2920 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D24 PUSH1 0x35 SWAP2 CODECOPY PUSH2 0x2B90 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x29B5 JUMPI POP DUP1 PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2A26 JUMPI DUP2 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2B33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 DUP5 ADD PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP4 LT DUP3 SWAP1 PUSH2 0x2C41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C06 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2BEB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C33 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 MSTORE8 SSTORE MSTORE8 0x48 0x49 GASPRICE GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A207369676E617475726520657870 PUSH10 0x7265644F776E61626C65 GASPRICE KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65535553 0x48 0x49 GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 MSTORE8 SSTORE MSTORE8 0x48 0x49 GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636553555348493A3A64656C PUSH6 0x676174654279 MSTORE8 PUSH10 0x673A20696E76616C6964 KECCAK256 PUSH15 0x6F6E636553555348493A3A64656C65 PUSH8 0x6174654279536967 GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x617475726545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122026C2 ISZERO 0xE3 0xE2 BYTE DUP13 SWAP5 0xAE SWAP7 0x25 PUSH10 0xF179E270B689C02E4F64 DUP10 0xBF 0xAA 0xB5 SLT 0xB0 0xAC 0xA7 PUSH18 0xCD64736F6C634300060C0033000000000000 ",
							"sourceMap": "82:8694:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30866:81:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32902:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;31909:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1399:122:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;33528:317:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;31768:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;34240:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;246:159:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2364:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2645:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1280:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;32065:117:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;28204:145;;;:::i;:::-;;5174:1218:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1807:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;27581:77:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;31060:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34942:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;32385:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4504:248:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3170:1140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;32615:149:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1612:117:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1144:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;28498:240:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;30866:81;30903:13;30935:5;30928:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30866:81;:::o;32902:166::-;32985:4;33001:39;33010:12;:10;:12::i;:::-;33024:7;33033:6;33001:8;:39::i;:::-;33057:4;33050:11;;32902:166;;;;:::o;31909:98::-;31962:7;31988:12;;31981:19;;31909:98;:::o;1399:122:0:-;1441:80;1399:122;:::o;33528:317:1:-;33634:4;33650:36;33660:6;33668:9;33679:6;33650:9;:36::i;:::-;33696:121;33705:6;33713:12;:10;:12::i;:::-;33727:89;33765:6;33727:89;;;;;;;;;;;;;;;;;:11;:19;33739:6;33727:19;;;;;;;;;;;;;;;:33;33747:12;:10;:12::i;:::-;33727:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;33696:8;:121::i;:::-;33834:4;33827:11;;33528:317;;;;;:::o;31768:81::-;31809:5;31833:9;;;;;;;;;;;31826:16;;31768:81;:::o;34240:215::-;34328:4;34344:83;34353:12;:10;:12::i;:::-;34367:7;34376:50;34415:10;34376:11;:25;34388:12;:10;:12::i;:::-;34376:25;;;;;;;;;;;;;;;:34;34402:7;34376:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;34344:8;:83::i;:::-;34444:4;34437:11;;34240:215;;;;:::o;246:159:0:-;27795:12:1;:10;:12::i;:::-;27785:22;;:6;;;;;;;;;;;:22;;;27777:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:19:0::1;323:3;328:7;317:5;:19::i;:::-;346:52;369:1;373:10;:15;384:3;373:15;;;;;;;;;;;;;;;;;;;;;;;;;390:7;346:14;:52::i;:::-;246:159:::0;;:::o;2364:143::-;2449:7;2479:10;:21;2490:9;2479:21;;;;;;;;;;;;;;;;;;;;;;;;;2472:28;;2364:143;;;:::o;2645:102::-;2708:32;2718:10;2730:9;2708;:32::i;:::-;2645:102;:::o;1280:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;32065:117:1:-;32131:7;32157:9;:18;32167:7;32157:18;;;;;;;;;;;;;;;;32150:25;;32065:117;;;:::o;28204:145::-;27795:12;:10;:12::i;:::-;27785:22;;:6;;;;;;;;;;;:22;;;27777:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28310:1:::1;28273:40;;28294:6;;;;;;;;;;;28273:40;;;;;;;;;;;;28340:1;28323:6;;:19;;;;;;;;;;;;;;;;;;28204:145::o:0;5174:1218:0:-;5279:7;5324:12;5310:11;:26;5302:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5392:19;5414:14;:23;5429:7;5414:23;;;;;;;;;;;;;;;;;;;;;;;;;5392:45;;5467:1;5451:12;:17;;;5447:56;;;5491:1;5484:8;;;;;5447:56;5612:11;5560;:20;5572:7;5560:20;;;;;;;;;;;;;;;:38;5596:1;5581:12;:16;5560:38;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:63;;;5556:145;;5646:11;:20;5658:7;5646:20;;;;;;;;;;;;;;;:38;5682:1;5667:12;:16;5646:38;;;;;;;;;;;;;;;:44;;;5639:51;;;;;5556:145;5795:11;5759;:20;5771:7;5759:20;;;;;;;;;;;;;;;:23;5780:1;5759:23;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;5755:86;;;5829:1;5822:8;;;;;5755:86;5851:12;5877;5907:1;5892:12;:16;5877:31;;5918:418;5933:5;5925:13;;:5;:13;;;5918:418;;;5954:13;5996:1;5987:5;5979;:13;5978:19;;;;;;;;5970:5;:27;5954:43;;6038:20;;:::i;:::-;6061:11;:20;6073:7;6061:20;;;;;;;;;;;;;;;:28;6082:6;6061:28;;;;;;;;;;;;;;;6038:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6123:11;6107:2;:12;;;:27;;;6103:223;;;6161:2;:8;;;6154:15;;;;;;;;;6103:223;6209:11;6194:2;:12;;;:26;;;6190:136;;;6248:6;6240:14;;6190:136;;;6310:1;6301:6;:10;6293:18;;6190:136;5918:418;;;;;6352:11;:20;6364:7;6352:20;;;;;;;;;;;;;;;:27;6373:5;6352:27;;;;;;;;;;;;;;;:33;;;6345:40;;;;;5174:1218;;;;;:::o;1807:39::-;;;;;;;;;;;;;;;;;:::o;27581:77:1:-;27619:7;27645:6;;;;;;;;;;;27638:13;;27581:77;:::o;31060:85::-;31099:13;31131:7;31124:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31060:85;:::o;34942:266::-;35035:4;35051:129;35060:12;:10;:12::i;:::-;35074:7;35083:96;35122:15;35083:96;;;;;;;;;;;;;;;;;:11;:25;35095:12;:10;:12::i;:::-;35083:25;;;;;;;;;;;;;;;:34;35109:7;35083:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;35051:8;:129::i;:::-;35197:4;35190:11;;34942:266;;;;:::o;32385:172::-;32471:4;32487:42;32497:12;:10;:12::i;:::-;32511:9;32522:6;32487:9;:42::i;:::-;32546:4;32539:11;;32385:172;;;;:::o;4504:248:0:-;4593:7;4616:19;4638:14;:23;4653:7;4638:23;;;;;;;;;;;;;;;;;;;;;;;;;4616:45;;4693:1;4678:12;:16;;;:67;;4744:1;4678:67;;;4697:11;:20;4709:7;4697:20;;;;;;;;;;;;;;;:38;4733:1;4718:12;:16;4697:38;;;;;;;;;;;;;;;:44;;;4678:67;4671:74;;;4504:248;;;:::o;3170:1140::-;3353:23;1441:80;3479:6;:4;:6::i;:::-;3463:24;;;;;;3505:12;:10;:12::i;:::-;3543:4;3402:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3379:193;;;;;;3353:219;;3583:18;1658:71;3692:9;3719:5;3742:6;3627:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3604:168;;;;;;3583:189;;3783:14;3885:15;3918:10;3823:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3800:152;;;;;;3783:169;;3963:17;3983:26;3993:6;4001:1;4004;4007;3983:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3963:46;;4048:1;4027:23;;:9;:23;;;;4019:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4121:6;:17;4128:9;4121:17;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;4112:5;:28;4104:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4205:6;4198:3;:13;;4190:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4272:31;4282:9;4293;4272;:31::i;:::-;4265:38;;;;3170:1140;;;;;;:::o;32615:149:1:-;32704:7;32730:11;:18;32742:5;32730:18;;;;;;;;;;;;;;;:27;32749:7;32730:27;;;;;;;;;;;;;;;;32723:34;;32615:149;;;;:::o;1612:117:0:-;1658:71;1612:117;:::o;1144:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;28498:240:1:-;27795:12;:10;:12::i;:::-;27785:22;;:6;;;;;;;;;;;:22;;;27777:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28606:1:::1;28586:22;;:8;:22;;;;28578:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28695:8;28666:38;;28687:6;;;;;;;;;;;28666:38;;;;;;;;;;;;28723:8;28714:6;;:17;;;;;;;;;;;;;;;;;;28498:240:::0;:::o;26178:104::-;26231:15;26265:10;26258:17;;26178:104;:::o;38006:340::-;38124:1;38107:19;;:5;:19;;;;38099:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38204:1;38185:21;;:7;:21;;;;38177:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38286:6;38256:11;:18;38268:5;38256:18;;;;;;;;;;;;;;;:27;38275:7;38256:27;;;;;;;;;;;;;;;:36;;;;38323:7;38307:32;;38316:5;38307:32;;;38332:6;38307:32;;;;;;;;;;;;;;;;;;38006:340;;;:::o;35682:530::-;35805:1;35787:20;;:6;:20;;;;35779:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35888:1;35867:23;;:9;:23;;;;35859:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35941:47;35962:6;35970:9;35981:6;35941:20;:47::i;:::-;36019:71;36041:6;36019:71;;;;;;;;;;;;;;;;;:9;:17;36029:6;36019:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;35999:9;:17;36009:6;35999:17;;;;;;;;;;;;;;;:91;;;;36123:32;36148:6;36123:9;:20;36133:9;36123:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;36100:9;:20;36110:9;36100:20;;;;;;;;;;;;;;;:55;;;;36187:9;36170:35;;36179:6;36170:35;;;36198:6;36170:35;;;;;;;;;;;;;;;;;;35682:530;;;:::o;4544:187::-;4630:7;4662:1;4657;:6;;4665:12;4649:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4688:9;4704:1;4700;:5;4688:17;;4723:1;4716:8;;;4544:187;;;;;:::o;3672:176::-;3730:7;3749:9;3765:1;3761;:5;3749:17;;3789:1;3784;:6;;3776:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3840:1;3833:8;;;3672:176;;;;:::o;36482:370::-;36584:1;36565:21;;:7;:21;;;;36557:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36633:49;36662:1;36666:7;36675:6;36633:20;:49::i;:::-;36708:24;36725:6;36708:12;;:16;;:24;;;;:::i;:::-;36693:12;:39;;;;36763:30;36786:6;36763:9;:18;36773:7;36763:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;36742:9;:18;36752:7;36742:18;;;;;;;;;;;;;;;:51;;;;36829:7;36808:37;;36825:1;36808:37;;;36838:6;36808:37;;;;;;;;;;;;;;;;;;36482:370;;:::o;6833:929:0:-;6938:6;6928:16;;:6;:16;;;;:30;;;;;6957:1;6948:6;:10;6928:30;6924:832;;;6996:1;6978:20;;:6;:20;;;6974:379;;7065:16;7084:14;:22;7099:6;7084:22;;;;;;;;;;;;;;;;;;;;;;;;;7065:41;;7124:17;7156:1;7144:9;:13;;;:60;;7203:1;7144:60;;;7160:11;:19;7172:6;7160:19;;;;;;;;;;;;;;;:34;7192:1;7180:9;:13;7160:34;;;;;;;;;;;;;;;:40;;;7144:60;7124:80;;7222:17;7242:21;7256:6;7242:9;:13;;:21;;;;:::i;:::-;7222:41;;7281:57;7298:6;7306:9;7317;7328;7281:16;:57::i;:::-;6974:379;;;;7389:1;7371:20;;:6;:20;;;7367:379;;7458:16;7477:14;:22;7492:6;7477:22;;;;;;;;;;;;;;;;;;;;;;;;;7458:41;;7517:17;7549:1;7537:9;:13;;;:60;;7596:1;7537:60;;;7553:11;:19;7565:6;7553:19;;;;;;;;;;;;;;;:34;7585:1;7573:9;:13;7553:34;;;;;;;;;;;;;;;:40;;;7537:60;7517:80;;7615:17;7635:21;7649:6;7635:9;:13;;:21;;;;:::i;:::-;7615:41;;7674:57;7691:6;7699:9;7710;7721;7674:16;:57::i;:::-;7367:379;;;;6924:832;6833:929;;;:::o;6398:429::-;6486:23;6512:10;:21;6523:9;6512:21;;;;;;;;;;;;;;;;;;;;;;;;;6486:47;;6543:24;6570:20;6580:9;6570;:20::i;:::-;6543:47;;6670:9;6646:10;:21;6657:9;6646:21;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;6739:9;6695:54;;6722:15;6695:54;;6711:9;6695:54;;;;;;;;;;;;6760:60;6775:15;6792:9;6803:16;6760:14;:60::i;:::-;6398:429;;;;:::o;8625:149::-;8670:4;8686:15;8733:9;8722:20;;8760:7;8753:14;;;8625:149;:::o;39344:92:1:-;;;;:::o;4119:134::-;4177:7;4203:43;4207:1;4210;4203:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;4196:50;;4119:134;;;;:::o;7768:687:0:-;7939:18;7960:77;7967:12;7960:77;;;;;;;;;;;;;;;;;:6;:77::i;:::-;7939:98;;8067:1;8052:12;:16;;;:85;;;;;8126:11;8072:65;;:11;:22;8084:9;8072:22;;;;;;;;;;;;;;;:40;8110:1;8095:12;:16;8072:40;;;;;;;;;;;;;;;:50;;;;;;;;;;;;:65;;;8052:85;8048:334;;;8202:8;8153:11;:22;8165:9;8153:22;;;;;;;;;;;;;;;:40;8191:1;8176:12;:16;8153:40;;;;;;;;;;;;;;;:46;;:57;;;;8048:334;;;8280:33;;;;;;;;8291:11;8280:33;;;;;;8304:8;8280:33;;;8241:11;:22;8253:9;8241:22;;;;;;;;;;;;;;;:36;8264:12;8241:36;;;;;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8370:1;8355:12;:16;8327:14;:25;8342:9;8327:25;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;8048:334;8418:9;8397:51;;;8429:8;8439;8397:51;;;;;;;;;;;;;;;;;;;;;;;;7768:687;;;;;:::o;8461:158::-;8536:6;8566:5;8562:1;:9;8573:12;8554:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8610:1;8596:16;;8461:158;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2385200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DELEGATION_TYPEHASH()": "271",
								"DOMAIN_TYPEHASH()": "295",
								"allowance(address,address)": "1365",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1329",
								"checkpoints(address,uint32)": "2243",
								"decimals()": "1189",
								"decreaseAllowance(address,uint256)": "infinite",
								"delegate(address)": "infinite",
								"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"delegates(address)": "1305",
								"getCurrentVotes(address)": "2334",
								"getPriorVotes(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1236",
								"numCheckpoints(address)": "1311",
								"owner()": "1194",
								"renounceOwnership()": "24470",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint256)": "infinite",
								"_writeCheckpoint(address,uint32,uint256,uint256)": "infinite",
								"getChainId()": "35",
								"safe32(uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "5375736869546F6B656E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "5355534849000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30740,
									"end": 30744,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30737,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30764,
									"end": 30770,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30761,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30792,
									"end": 30794,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 30780,
									"end": 30789,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 30780,
									"end": 30789,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 27380,
									"end": 27397,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 27400,
									"end": 27412,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 27400,
									"end": 27410,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 27400,
									"end": 27410,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 27400,
									"end": 27410,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 27400,
									"end": 27412,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 27400,
									"end": 27412,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 27400,
									"end": 27412,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 27400,
									"end": 27412,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 27400,
									"end": 27412,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 27380,
									"end": 27412,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27380,
									"end": 27412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 27431,
									"end": 27440,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27428,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 27422,
									"end": 27428,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 27488,
									"end": 27497,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27484,
									"end": 27485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 27346,
									"end": 27505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26178,
									"end": 26282,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 26178,
									"end": 26282,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 26231,
									"end": 26246,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 26265,
									"end": 26275,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 26258,
									"end": 26275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 26258,
									"end": 26275,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 26178,
									"end": 26282,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 26178,
									"end": 26282,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 8776,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026c215e3e21a8c94ae962569f179e270b689c02e4f6489bfaab512b0aca771cd64736f6c634300060c0033",
									".code": [
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "E7A324DC"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "F1127ED8"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "B4B5EA57"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "C3CDA520"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "782D6FE1"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "587CDE1E"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "5C19A95C"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "6FCFFF45"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "20606B70"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 8776,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 246,
											"end": 405,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 246,
											"end": 405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 246,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 246,
											"end": 405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 246,
											"end": 405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 246,
											"end": 405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 246,
											"end": 405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 246,
											"end": 405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 246,
											"end": 405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 246,
											"end": 405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 246,
											"end": 405,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 246,
											"end": 405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30903,
											"end": 30916,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 30935,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32985,
											"end": 32989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33001,
											"end": 33040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 33010,
											"end": 33022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 33010,
											"end": 33020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 33010,
											"end": 33022,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33010,
											"end": 33022,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 33010,
											"end": 33022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33024,
											"end": 33031,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33033,
											"end": 33039,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33001,
											"end": 33009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 33001,
											"end": 33040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33001,
											"end": 33040,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 33001,
											"end": 33040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33057,
											"end": 33061,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 33050,
											"end": 33061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33050,
											"end": 33061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31962,
											"end": 31969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31988,
											"end": 32000,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31988,
											"end": 32000,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31981,
											"end": 32000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31981,
											"end": 32000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1521,
											"name": "PUSH",
											"source": 0,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33634,
											"end": 33638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33650,
											"end": 33686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 33660,
											"end": 33666,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33668,
											"end": 33677,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33679,
											"end": 33685,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33650,
											"end": 33659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 33650,
											"end": 33686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33650,
											"end": 33686,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 33650,
											"end": 33686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33696,
											"end": 33817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 33705,
											"end": 33711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33713,
											"end": 33725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 33713,
											"end": 33723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 33713,
											"end": 33725,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33713,
											"end": 33725,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 33713,
											"end": 33725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 33765,
											"end": 33771,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH data",
											"source": 1,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33738,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33739,
											"end": 33745,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33747,
											"end": 33759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 33747,
											"end": 33757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 33747,
											"end": 33759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33747,
											"end": 33759,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 33747,
											"end": 33759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 33727,
											"end": 33764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33696,
											"end": 33704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 33696,
											"end": 33817,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33696,
											"end": 33817,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 33696,
											"end": 33817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33834,
											"end": 33838,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 33827,
											"end": 33838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33827,
											"end": 33838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31809,
											"end": 31814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31826,
											"end": 31842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31826,
											"end": 31842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34328,
											"end": 34332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34344,
											"end": 34427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 34353,
											"end": 34365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 34353,
											"end": 34363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 34353,
											"end": 34365,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34353,
											"end": 34365,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 34353,
											"end": 34365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34367,
											"end": 34374,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 34415,
											"end": 34425,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34387,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34388,
											"end": 34400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 34388,
											"end": 34398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 34388,
											"end": 34400,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34388,
											"end": 34400,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 34388,
											"end": 34400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34402,
											"end": 34409,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 34376,
											"end": 34414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34344,
											"end": 34352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 34344,
											"end": 34427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34344,
											"end": 34427,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 34344,
											"end": 34427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34444,
											"end": 34448,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34437,
											"end": 34448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34437,
											"end": 34448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 246,
											"end": 405,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 246,
											"end": 405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 27795,
											"end": 27805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 317,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 328,
											"end": 335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 317,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 317,
											"end": 336,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 336,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 317,
											"end": 336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 373,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 387,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 373,
											"end": 388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 373,
											"end": 388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 373,
											"end": 388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 373,
											"end": 388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 388,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 373,
											"end": 388,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 373,
											"end": 388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 390,
											"end": 397,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 346,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 346,
											"end": 398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 346,
											"end": 398,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 346,
											"end": 398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 246,
											"end": 405,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2489,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2479,
											"end": 2500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2507,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2718,
											"end": 2728,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2708,
											"end": 2740,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2708,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2708,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2747,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1329,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32131,
											"end": 32138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32157,
											"end": 32166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32167,
											"end": 32174,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 32150,
											"end": 32175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32150,
											"end": 32175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 27795,
											"end": 27805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28310,
											"end": 28311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 28340,
											"end": 28341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28323,
											"end": 28329,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 28323,
											"end": 28329,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5324,
											"end": 5336,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5336,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH data",
											"source": 0,
											"value": "95F5BCA076212943AAD5C226142010AD55D0096DBA63CA905D770F4FE4AFFF33"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5428,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5436,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5451,
											"end": 5463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5451,
											"end": 5468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5451,
											"end": 5468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5451,
											"end": 5468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5503,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5447,
											"end": 5503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5484,
											"end": 5492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5484,
											"end": 5492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5484,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5484,
											"end": 5492,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5503,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5447,
											"end": 5503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5612,
											"end": 5623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5571,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5579,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5560,
											"end": 5598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5560,
											"end": 5598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5560,
											"end": 5598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5560,
											"end": 5598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5598,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5608,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5560,
											"end": 5608,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5608,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5560,
											"end": 5608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5560,
											"end": 5623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5623,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5556,
											"end": 5701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5657,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5646,
											"end": 5666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5665,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5666,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5646,
											"end": 5666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5666,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5646,
											"end": 5666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5666,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5646,
											"end": 5666,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5666,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5646,
											"end": 5666,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5646,
											"end": 5666,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5682,
											"end": 5683,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5667,
											"end": 5679,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5683,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5684,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5646,
											"end": 5684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5684,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5646,
											"end": 5684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5684,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5646,
											"end": 5684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5684,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5646,
											"end": 5684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5646,
											"end": 5684,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5690,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5646,
											"end": 5690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5690,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5639,
											"end": 5690,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5701,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5556,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5770,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5771,
											"end": 5778,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5792,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5759,
											"end": 5792,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5792,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5759,
											"end": 5792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5759,
											"end": 5806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5806,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5755,
											"end": 5841,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5755,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5755,
											"end": 5841,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5822,
											"end": 5830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5822,
											"end": 5830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5822,
											"end": 5830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5822,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5822,
											"end": 5830,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5755,
											"end": 5841,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5755,
											"end": 5841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5851,
											"end": 5863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5877,
											"end": 5889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5908,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5892,
											"end": 5904,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5892,
											"end": 5908,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5877,
											"end": 5908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5877,
											"end": 5908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5918,
											"end": 6336,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5918,
											"end": 6336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5933,
											"end": 5938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 5930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5918,
											"end": 6336,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5918,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5918,
											"end": 6336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5954,
											"end": 5967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5996,
											"end": 5997,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5987,
											"end": 5992,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5979,
											"end": 5984,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5979,
											"end": 5992,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5978,
											"end": 5997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5978,
											"end": 5997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5978,
											"end": 5997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5978,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5978,
											"end": 5997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5978,
											"end": 5997,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 5978,
											"end": 5997,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5978,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5978,
											"end": 5997,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5970,
											"end": 5975,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5970,
											"end": 5997,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5954,
											"end": 5997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5954,
											"end": 5997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6038,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6038,
											"end": 6058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6038,
											"end": 6058,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6038,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6072,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6073,
											"end": 6080,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6088,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6061,
											"end": 6089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6061,
											"end": 6089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6061,
											"end": 6089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6061,
											"end": 6089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6061,
											"end": 6089,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6123,
											"end": 6134,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6107,
											"end": 6109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6107,
											"end": 6119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6107,
											"end": 6119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6107,
											"end": 6119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6107,
											"end": 6134,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6107,
											"end": 6134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6107,
											"end": 6134,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6103,
											"end": 6326,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6103,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6103,
											"end": 6326,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6161,
											"end": 6163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6161,
											"end": 6169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6161,
											"end": 6169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6161,
											"end": 6169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6169,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6154,
											"end": 6169,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6103,
											"end": 6326,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6103,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6209,
											"end": 6220,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6194,
											"end": 6196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6194,
											"end": 6206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6194,
											"end": 6206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6194,
											"end": 6206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6194,
											"end": 6220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6194,
											"end": 6220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6194,
											"end": 6220,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6190,
											"end": 6326,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6190,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6190,
											"end": 6326,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6240,
											"end": 6254,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6240,
											"end": 6254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6190,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6190,
											"end": 6326,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6190,
											"end": 6326,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6190,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6310,
											"end": 6311,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6301,
											"end": 6307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6301,
											"end": 6311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6293,
											"end": 6311,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6293,
											"end": 6311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6190,
											"end": 6326,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6190,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5918,
											"end": 6336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5918,
											"end": 6336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5918,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5918,
											"end": 6336,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5918,
											"end": 6336,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5918,
											"end": 6336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6363,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6352,
											"end": 6372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6352,
											"end": 6372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6352,
											"end": 6372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6352,
											"end": 6372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6352,
											"end": 6372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6372,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6352,
											"end": 6379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6352,
											"end": 6379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6352,
											"end": 6379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6352,
											"end": 6379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6379,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6385,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6352,
											"end": 6385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6345,
											"end": 6385,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6345,
											"end": 6385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6345,
											"end": 6385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6345,
											"end": 6385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6345,
											"end": 6385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 6392,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27619,
											"end": 27626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27638,
											"end": 27651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27638,
											"end": 27651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31099,
											"end": 31112,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 31131,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35035,
											"end": 35039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35051,
											"end": 35180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 35060,
											"end": 35072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 35060,
											"end": 35070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 35060,
											"end": 35072,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35060,
											"end": 35072,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 35060,
											"end": 35072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35074,
											"end": 35081,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 35122,
											"end": 35137,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH data",
											"source": 1,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35094,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35095,
											"end": 35107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 35095,
											"end": 35105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 35095,
											"end": 35107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35095,
											"end": 35107,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 35095,
											"end": 35107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35109,
											"end": 35116,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 35083,
											"end": 35121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35051,
											"end": 35059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 35051,
											"end": 35180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35051,
											"end": 35180,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 35051,
											"end": 35180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35197,
											"end": 35201,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 35190,
											"end": 35201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35190,
											"end": 35201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32471,
											"end": 32475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32487,
											"end": 32529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 32497,
											"end": 32509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 32497,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 32497,
											"end": 32509,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32497,
											"end": 32509,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 32497,
											"end": 32509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32511,
											"end": 32520,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 32522,
											"end": 32528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 32487,
											"end": 32496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 32487,
											"end": 32529,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32487,
											"end": 32529,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 32487,
											"end": 32529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32546,
											"end": 32550,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 32539,
											"end": 32550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32539,
											"end": 32550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4616,
											"end": 4635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4616,
											"end": 4661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4616,
											"end": 4661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 4678,
											"end": 4745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4678,
											"end": 4745,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4745,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 4678,
											"end": 4745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4708,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4716,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4733,
											"end": 4734,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4718,
											"end": 4730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4718,
											"end": 4734,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4697,
											"end": 4735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4697,
											"end": 4735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4697,
											"end": 4735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4697,
											"end": 4735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4735,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4741,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4697,
											"end": 4741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4741,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4745,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4678,
											"end": 4745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4752,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1521,
											"name": "PUSH",
											"source": 0,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3479,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3487,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3463,
											"end": 3487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3487,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3505,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3505,
											"end": 3517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3505,
											"end": 3517,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3505,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3543,
											"end": 3547,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3402,
											"end": 3562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3379,
											"end": 3572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3572,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1729,
											"name": "PUSH",
											"source": 0,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3724,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3748,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3604,
											"end": 3772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3604,
											"end": 3772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3604,
											"end": 3772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3604,
											"end": 3772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3604,
											"end": 3772,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3583,
											"end": 3772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3583,
											"end": 3772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3783,
											"end": 3797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3918,
											"end": 3928,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "PUSH",
											"source": 0,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3800,
											"end": 3952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3952,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3783,
											"end": 3952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3783,
											"end": 3952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3993,
											"end": 3999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4001,
											"end": 4002,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4005,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4008,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 4009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 4009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4048,
											"end": 4049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4050,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4027,
											"end": 4050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4050,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4027,
											"end": 4050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4050,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4050,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "PUSH data",
											"source": 0,
											"value": "AEEB870860C7451819EDC560C5520E1197C2D62C04CC23DEF3A21B91410D0633"
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4127,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4117,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4140,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "PUSH data",
											"source": 0,
											"value": "A1E65DB8426B65AD764814369E421D0B17D63E03DC4C1056A693E1CC89FB7A3E"
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 4104,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4211,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4201,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4211,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4211,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "PUSH data",
											"source": 0,
											"value": "18FECDF225B5E9A1D03E234E6893B777C717A928A78496F199BB78499B5DCD1C"
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4190,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 4282,
											"end": 4291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4293,
											"end": 4302,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4272,
											"end": 4303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4272,
											"end": 4303,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 4272,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 4310,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32704,
											"end": 32711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32730,
											"end": 32741,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32742,
											"end": 32747,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32749,
											"end": 32756,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 32723,
											"end": 32757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32723,
											"end": 32757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1729,
											"name": "PUSH",
											"source": 0,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1214,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 27795,
											"end": 27805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28606,
											"end": 28607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28586,
											"end": 28608,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28586,
											"end": 28608,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28586,
											"end": 28594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28586,
											"end": 28608,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28586,
											"end": 28608,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28586,
											"end": 28608,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28586,
											"end": 28608,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH data",
											"source": 1,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28695,
											"end": 28703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 28723,
											"end": 28731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28720,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 28714,
											"end": 28720,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26178,
											"end": 26282,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 26178,
											"end": 26282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26231,
											"end": 26246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26265,
											"end": 26275,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 26258,
											"end": 26275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26258,
											"end": 26275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26178,
											"end": 26282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26178,
											"end": 26282,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38124,
											"end": 38125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38107,
											"end": 38112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH data",
											"source": 1,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38204,
											"end": 38205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38185,
											"end": 38192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH data",
											"source": 1,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38286,
											"end": 38292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38267,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38268,
											"end": 38273,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38275,
											"end": 38282,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38292,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38323,
											"end": 38330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38316,
											"end": 38321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 38332,
											"end": 38338,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35805,
											"end": 35806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35787,
											"end": 35793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH data",
											"source": 1,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35888,
											"end": 35889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35867,
											"end": 35876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH data",
											"source": 1,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35941,
											"end": 35988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 35962,
											"end": 35968,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 35970,
											"end": 35979,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 35981,
											"end": 35987,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 35941,
											"end": 35961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 35941,
											"end": 35988,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35941,
											"end": 35988,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 35941,
											"end": 35988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 36041,
											"end": 36047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH data",
											"source": 1,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36029,
											"end": 36035,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 36019,
											"end": 36040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36009,
											"end": 36015,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36090,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 36148,
											"end": 36154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36133,
											"end": 36142,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 36123,
											"end": 36147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36110,
											"end": 36119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36155,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36187,
											"end": 36196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36179,
											"end": 36185,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 36198,
											"end": 36204,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4662,
											"end": 4663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4663,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4663,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4704,
											"end": 4705,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4701,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4705,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3730,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3762,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3789,
											"end": 3790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 36482,
											"end": 36852,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 36482,
											"end": 36852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36584,
											"end": 36585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36565,
											"end": 36586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36565,
											"end": 36586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36565,
											"end": 36572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 36565,
											"end": 36586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36565,
											"end": 36586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36565,
											"end": 36586,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 36565,
											"end": 36586,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 36557,
											"end": 36622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36633,
											"end": 36682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 36662,
											"end": 36663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36666,
											"end": 36673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36675,
											"end": 36681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36633,
											"end": 36653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 36633,
											"end": 36682,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 36633,
											"end": 36682,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 36633,
											"end": 36682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36708,
											"end": 36732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 36725,
											"end": 36731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36708,
											"end": 36720,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 36708,
											"end": 36720,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 36708,
											"end": 36724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 36708,
											"end": 36724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36708,
											"end": 36732,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36708,
											"end": 36732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36708,
											"end": 36732,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36708,
											"end": 36732,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36708,
											"end": 36732,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 36708,
											"end": 36732,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 36708,
											"end": 36732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36693,
											"end": 36705,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 36693,
											"end": 36732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36693,
											"end": 36732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36693,
											"end": 36732,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 36693,
											"end": 36732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 36786,
											"end": 36792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36773,
											"end": 36780,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36781,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 36763,
											"end": 36785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36793,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36793,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36763,
											"end": 36793,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36763,
											"end": 36793,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 36763,
											"end": 36793,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 36763,
											"end": 36793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36742,
											"end": 36751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36742,
											"end": 36760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36752,
											"end": 36759,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 36742,
											"end": 36760,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36742,
											"end": 36760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36742,
											"end": 36760,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36742,
											"end": 36760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36742,
											"end": 36760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36742,
											"end": 36760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36742,
											"end": 36760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36742,
											"end": 36760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36742,
											"end": 36760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36742,
											"end": 36760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36742,
											"end": 36760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36742,
											"end": 36760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36742,
											"end": 36760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36742,
											"end": 36760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36742,
											"end": 36760,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 36742,
											"end": 36793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36742,
											"end": 36793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36742,
											"end": 36793,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 36742,
											"end": 36793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36829,
											"end": 36836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36825,
											"end": 36826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 36838,
											"end": 36844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36845,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 36482,
											"end": 36852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36482,
											"end": 36852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36482,
											"end": 36852,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6833,
											"end": 7762,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6833,
											"end": 7762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6934,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 6928,
											"end": 6958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6957,
											"end": 6958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6948,
											"end": 6954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6948,
											"end": 6958,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6958,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 6928,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 7756,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 6924,
											"end": 7756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 6997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6978,
											"end": 6998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6978,
											"end": 6998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6984,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6978,
											"end": 6998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6998,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 6974,
											"end": 7353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7084,
											"end": 7098,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7099,
											"end": 7105,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7124,
											"end": 7141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7156,
											"end": 7157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7157,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7144,
											"end": 7157,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7157,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 7144,
											"end": 7204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7203,
											"end": 7204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7144,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 7144,
											"end": 7204,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7204,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 7144,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7171,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7160,
											"end": 7179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7172,
											"end": 7178,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7179,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7160,
											"end": 7179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7179,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7160,
											"end": 7179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7179,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7160,
											"end": 7179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7179,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7160,
											"end": 7179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7160,
											"end": 7179,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7192,
											"end": 7193,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7180,
											"end": 7189,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7193,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7194,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7160,
											"end": 7194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7194,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7160,
											"end": 7194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7160,
											"end": 7194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7160,
											"end": 7194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7160,
											"end": 7194,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7200,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7160,
											"end": 7200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7204,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 7144,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7124,
											"end": 7204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7124,
											"end": 7204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 7256,
											"end": 7262,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7242,
											"end": 7251,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7242,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 7242,
											"end": 7255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7281,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 7298,
											"end": 7304,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7306,
											"end": 7315,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7326,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7337,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7281,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 7281,
											"end": 7338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7281,
											"end": 7338,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 7281,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7353,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 6974,
											"end": 7353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7389,
											"end": 7390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7371,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7371,
											"end": 7391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7371,
											"end": 7377,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7371,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7371,
											"end": 7391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7371,
											"end": 7391,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 7367,
											"end": 7746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7477,
											"end": 7491,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7492,
											"end": 7498,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7517,
											"end": 7534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7550,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7537,
											"end": 7550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7550,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 7537,
											"end": 7597,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7537,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 7537,
											"end": 7597,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7597,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 7537,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7564,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7572,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7573,
											"end": 7582,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7573,
											"end": 7586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7553,
											"end": 7587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7553,
											"end": 7587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7553,
											"end": 7587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7553,
											"end": 7587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7587,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7593,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7553,
											"end": 7593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7593,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7597,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 7537,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7517,
											"end": 7597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7517,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 7632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7635,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 7649,
											"end": 7655,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7644,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7635,
											"end": 7648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7656,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7635,
											"end": 7656,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7656,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7635,
											"end": 7656,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 7635,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 7656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 7656,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7674,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 7691,
											"end": 7697,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7699,
											"end": 7708,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7719,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7730,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7674,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 7674,
											"end": 7731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7674,
											"end": 7731,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 7674,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7746,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 7367,
											"end": 7746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 7756,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 6924,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6833,
											"end": 7762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6833,
											"end": 7762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6833,
											"end": 7762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6833,
											"end": 7762,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6398,
											"end": 6827,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6398,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6486,
											"end": 6509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6522,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6523,
											"end": 6532,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6512,
											"end": 6533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6486,
											"end": 6533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6486,
											"end": 6533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6543,
											"end": 6567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 6580,
											"end": 6589,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6570,
											"end": 6590,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6570,
											"end": 6590,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 6570,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6543,
											"end": 6590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6543,
											"end": 6590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6670,
											"end": 6679,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6656,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6666,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6695,
											"end": 6749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6722,
											"end": 6737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6695,
											"end": 6749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6711,
											"end": 6720,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6695,
											"end": 6749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 6695,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6695,
											"end": 6749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6695,
											"end": 6749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6749,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6749,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6760,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 6775,
											"end": 6790,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6792,
											"end": 6801,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6819,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6760,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6760,
											"end": 6820,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6760,
											"end": 6820,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 6760,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6827,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8625,
											"end": 8774,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 8625,
											"end": 8774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8670,
											"end": 8674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8686,
											"end": 8701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8733,
											"end": 8742,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 8722,
											"end": 8742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8722,
											"end": 8742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8760,
											"end": 8767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8774,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4119,
											"end": 4253,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 4119,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4177,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 4207,
											"end": 4208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4253,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4253,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7768,
											"end": 8455,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 7768,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7939,
											"end": 7957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 7967,
											"end": 7979,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "PUSH data",
											"source": 0,
											"value": "80202FADC1798AD44893C1A6A1A3B4079151936A969E36FA214486A4E00F3A74"
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 7960,
											"end": 8037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7939,
											"end": 8037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7939,
											"end": 8037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8067,
											"end": 8068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8052,
											"end": 8064,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8052,
											"end": 8068,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8052,
											"end": 8068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8052,
											"end": 8068,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8052,
											"end": 8137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8052,
											"end": 8137,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8052,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 8052,
											"end": 8137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8052,
											"end": 8137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8137,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8072,
											"end": 8137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8083,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8084,
											"end": 8093,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8110,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8095,
											"end": 8107,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8095,
											"end": 8111,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8112,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8072,
											"end": 8112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8112,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8072,
											"end": 8112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8072,
											"end": 8112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8072,
											"end": 8112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8072,
											"end": 8112,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8072,
											"end": 8122,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8072,
											"end": 8122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8122,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8072,
											"end": 8122,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8122,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8072,
											"end": 8122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8137,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8072,
											"end": 8137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8052,
											"end": 8137,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 8052,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 8048,
											"end": 8382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8164,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8174,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8191,
											"end": 8192,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8176,
											"end": 8188,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8153,
											"end": 8193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8153,
											"end": 8193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8153,
											"end": 8193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8153,
											"end": 8193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8153,
											"end": 8193,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8199,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8153,
											"end": 8199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8210,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 8048,
											"end": 8382,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8382,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 8048,
											"end": 8382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8291,
											"end": 8302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8304,
											"end": 8312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8252,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8262,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8263,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8277,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8241,
											"end": 8277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8277,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8241,
											"end": 8277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8277,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8241,
											"end": 8277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8277,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8241,
											"end": 8277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8277,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8370,
											"end": 8371,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8355,
											"end": 8367,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8355,
											"end": 8371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8341,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8342,
											"end": 8351,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8382,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 8048,
											"end": 8382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8427,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "PUSH",
											"source": 0,
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 8429,
											"end": 8437,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8447,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8448,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8455,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8461,
											"end": 8619,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 8461,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8536,
											"end": 8542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 8562,
											"end": 8563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8562,
											"end": 8571,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8573,
											"end": 8585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8596,
											"end": 8612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8596,
											"end": 8612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8461,
											"end": 8619,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8461,
											"end": 8619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8461,
											"end": 8619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8461,
											"end": 8619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8461,
											"end": 8619,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "158"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"18FECDF225B5E9A1D03E234E6893B777C717A928A78496F199BB78499B5DCD1C": "53555348493a3a64656c656761746542795369673a207369676e61747572652065787069726564",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"80202FADC1798AD44893C1A6A1A3B4079151936A969E36FA214486A4E00F3A74": "53555348493a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
										"95F5BCA076212943AAD5C226142010AD55D0096DBA63CA905D770F4FE4AFFF33": "53555348493a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A1E65DB8426B65AD764814369E421D0B17D63E03DC4C1056A693E1CC89FB7A3E": "53555348493a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
										"AEEB870860C7451819EDC560C5520E1197C2D62C04CC23DEF3A21B91410D0633": "53555348493a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"DOMAIN_TYPEHASH()": "20606b70",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"checkpoints(address,uint32)": "f1127ed8",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"delegate(address)": "5c19a95c",
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
							"delegates(address)": "587cde1e",
							"getCurrentVotes(address)": "b4b5ea57",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"numCheckpoints(address)": "6fcfff45",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"delegates(address)\":{\"params\":{\"delegator\":\"The address to get delegatee for\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"returns\":{\"_0\":\"The number of current votes for `account`\"}},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DelegateChanged(address,address,address)\":{\"notice\":\"An event thats emitted when an account changes its delegate\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"notice\":\"An event thats emitted when a delegate account's vote balance changes\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"checkpoints(address,uint32)\":{\"notice\":\"A record of votes checkpoints for each account, by index\"},\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"delegates(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"mint(address,uint256)\":{\"notice\":\"Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\"},\"nonces(address)\":{\"notice\":\"A record of states for signing / validating signatures\"},\"numCheckpoints(address)\":{\"notice\":\"The number of checkpoints for each account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/SushiToken_HKHH.sol\":\"SushiToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/SushiToken_HKHH.sol\":{\"keccak256\":\"0x6cf7f5e84b5b5903f03d77add2a9ba489daa82ebf62f45235fedd632b0d21b63\",\"urls\":[\"bzz-raw://0bfd672b644ad5dd84dc7e6f2425afd9e85b04a92696b9a4dfaf2574fc654385\",\"dweb:/ipfs/QmQEK9ecjM1cTN3bZQHnm2BAgMLaA8ikamK6ezxa7B4BPF\"]},\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1859,
								"contract": "PolarAI/SushiToken_HKHH.sol:SushiToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1865,
								"contract": "PolarAI/SushiToken_HKHH.sol:SushiToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1867,
								"contract": "PolarAI/SushiToken_HKHH.sol:SushiToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1869,
								"contract": "PolarAI/SushiToken_HKHH.sol:SushiToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1871,
								"contract": "PolarAI/SushiToken_HKHH.sol:SushiToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1873,
								"contract": "PolarAI/SushiToken_HKHH.sol:SushiToken",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 1742,
								"contract": "PolarAI/SushiToken_HKHH.sol:SushiToken",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 40,
								"contract": "PolarAI/SushiToken_HKHH.sol:SushiToken",
								"label": "_delegates",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 52,
								"contract": "PolarAI/SushiToken_HKHH.sol:SushiToken",
								"label": "checkpoints",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)45_storage))"
							},
							{
								"astId": 57,
								"contract": "PolarAI/SushiToken_HKHH.sol:SushiToken",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 74,
								"contract": "PolarAI/SushiToken_HKHH.sol:SushiToken",
								"label": "nonces",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)45_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint32,t_struct(Checkpoint)45_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_mapping(t_uint32,t_struct(Checkpoint)45_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct SushiToken.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)45_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Checkpoint)45_storage": {
								"encoding": "inplace",
								"label": "struct SushiToken.Checkpoint",
								"members": [
									{
										"astId": 42,
										"contract": "PolarAI/SushiToken_HKHH.sol:SushiToken",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 44,
										"contract": "PolarAI/SushiToken_HKHH.sol:SushiToken",
										"label": "votes",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"DelegateChanged(address,address,address)": {
								"notice": "An event thats emitted when an account changes its delegate"
							},
							"DelegateVotesChanged(address,uint256,uint256)": {
								"notice": "An event thats emitted when a delegate account's vote balance changes"
							}
						},
						"kind": "user",
						"methods": {
							"DELEGATION_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the delegation struct used by the contract"
							},
							"DOMAIN_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the contract's domain"
							},
							"checkpoints(address,uint32)": {
								"notice": "A record of votes checkpoints for each account, by index"
							},
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Delegates votes from signatory to `delegatee`"
							},
							"delegates(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"mint(address,uint256)": {
								"notice": "Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
							},
							"nonces(address)": {
								"notice": "A record of states for signing / validating signatures"
							},
							"numCheckpoints(address)": {
								"notice": "The number of checkpoints for each account"
							}
						},
						"version": 1
					}
				}
			},
			"PolarAI/interface.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PolarAI/interface.sol\":8147:14098  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"PolarAI/interface.sol\":8147:14098  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205eae4f7d5f0761607e41e0663e4b5971ced4a6ac232b2d3872c055afae6982f364736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205eae4f7d5f0761607e41e0663e4b5971ced4a6ac232b2d3872c055afae6982f364736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xAE 0x4F PUSH30 0x5F0761607E41E0663E4B5971CED4A6AC232B2D3872C055AFAE6982F36473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "8147:5951:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205eae4f7d5f0761607e41e0663e4b5971ced4a6ac232b2d3872c055afae6982f364736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xAE 0x4F PUSH30 0x5F0761607E41E0663E4B5971CED4A6AC232B2D3872C055AFAE6982F36473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "8147:5951:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8147,
									"end": 14098,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205eae4f7d5f0761607e41e0663e4b5971ced4a6ac232b2d3872c055afae6982f364736f6c634300060c0033",
									".code": [
										{
											"begin": 8147,
											"end": 14098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 8147,
											"end": 14098,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 8147,
											"end": 14098,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8147,
											"end": 14098,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8147,
											"end": 14098,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8147,
											"end": 14098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8147,
											"end": 14098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8147,
											"end": 14098,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8147,
											"end": 14098,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PolarAI/interface.sol\":29992:39438  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"PolarAI/interface.sol\":30660:30801  constructor (string memory name, string memory symbol) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"PolarAI/interface.sol\":30740:30744  name */\n  dup2\n    /* \"PolarAI/interface.sol\":30732:30737  _name */\n  0x03\n    /* \"PolarAI/interface.sol\":30732:30744  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"PolarAI/interface.sol\":30764:30770  symbol */\n  dup1\n    /* \"PolarAI/interface.sol\":30754:30761  _symbol */\n  0x04\n    /* \"PolarAI/interface.sol\":30754:30770  _symbol = symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"PolarAI/interface.sol\":30792:30794  18 */\n  0x12\n    /* \"PolarAI/interface.sol\":30780:30789  _decimals */\n  0x05\n  0x00\n    /* \"PolarAI/interface.sol\":30780:30794  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"PolarAI/interface.sol\":30660:30801  constructor (string memory name, string memory symbol) public {... */\n  pop\n  pop\n    /* \"PolarAI/interface.sol\":29992:39438  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_29)\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"PolarAI/interface.sol\":29992:39438  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"PolarAI/interface.sol\":30866:30947  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":32902:33068  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":31909:32007  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":33528:33845  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":31768:31849  function decimals() public view returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":34240:34455  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":32065:32182  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":31060:31145  function symbol() public view returns (string memory) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_39:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_39)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":34942:35208  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":32385:32557  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":32615:32764  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":30866:30947  function name() public view returns (string memory) {... */\n    tag_16:\n        /* \"PolarAI/interface.sol\":30903:30916  string memory */\n      0x60\n        /* \"PolarAI/interface.sol\":30935:30940  _name */\n      0x03\n        /* \"PolarAI/interface.sol\":30928:30940  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":30866:30947  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":32902:33068  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"PolarAI/interface.sol\":32985:32989  bool */\n      0x00\n        /* \"PolarAI/interface.sol\":33001:33040  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"PolarAI/interface.sol\":33010:33022  _msgSender() */\n      tag_58\n        /* \"PolarAI/interface.sol\":33010:33020  _msgSender */\n      tag_59\n        /* \"PolarAI/interface.sol\":33010:33022  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"PolarAI/interface.sol\":33024:33031  spender */\n      dup5\n        /* \"PolarAI/interface.sol\":33033:33039  amount */\n      dup5\n        /* \"PolarAI/interface.sol\":33001:33009  _approve */\n      tag_60\n        /* \"PolarAI/interface.sol\":33001:33040  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n        /* \"PolarAI/interface.sol\":33057:33061  true */\n      0x01\n        /* \"PolarAI/interface.sol\":33050:33061  return true */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":32902:33068  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":31909:32007  function totalSupply() public view override returns (uint256) {... */\n    tag_25:\n        /* \"PolarAI/interface.sol\":31962:31969  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":31988:32000  _totalSupply */\n      sload(0x02)\n        /* \"PolarAI/interface.sol\":31981:32000  return _totalSupply */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":31909:32007  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":33528:33845  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"PolarAI/interface.sol\":33634:33638  bool */\n      0x00\n        /* \"PolarAI/interface.sol\":33650:33686  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"PolarAI/interface.sol\":33660:33666  sender */\n      dup5\n        /* \"PolarAI/interface.sol\":33668:33677  recipient */\n      dup5\n        /* \"PolarAI/interface.sol\":33679:33685  amount */\n      dup5\n        /* \"PolarAI/interface.sol\":33650:33659  _transfer */\n      tag_64\n        /* \"PolarAI/interface.sol\":33650:33686  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"PolarAI/interface.sol\":33696:33817  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"PolarAI/interface.sol\":33705:33711  sender */\n      dup5\n        /* \"PolarAI/interface.sol\":33713:33725  _msgSender() */\n      tag_66\n        /* \"PolarAI/interface.sol\":33713:33723  _msgSender */\n      tag_59\n        /* \"PolarAI/interface.sol\":33713:33725  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"PolarAI/interface.sol\":33727:33816  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"PolarAI/interface.sol\":33765:33771  amount */\n      dup6\n        /* \"PolarAI/interface.sol\":33727:33816  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"PolarAI/interface.sol\":33727:33738  _allowances */\n      0x01\n        /* \"PolarAI/interface.sol\":33727:33746  _allowances[sender] */\n      0x00\n        /* \"PolarAI/interface.sol\":33739:33745  sender */\n      dup12\n        /* \"PolarAI/interface.sol\":33727:33746  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":33727:33760  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"PolarAI/interface.sol\":33747:33759  _msgSender() */\n      tag_68\n        /* \"PolarAI/interface.sol\":33747:33757  _msgSender */\n      tag_59\n        /* \"PolarAI/interface.sol\":33747:33759  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"PolarAI/interface.sol\":33727:33760  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":33727:33764  _allowances[sender][_msgSender()].sub */\n      tag_69\n      swap1\n        /* \"PolarAI/interface.sol\":33727:33816  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"PolarAI/interface.sol\":33696:33704  _approve */\n      tag_60\n        /* \"PolarAI/interface.sol\":33696:33817  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n        /* \"PolarAI/interface.sol\":33834:33838  true */\n      0x01\n        /* \"PolarAI/interface.sol\":33827:33838  return true */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":33528:33845  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":31768:31849  function decimals() public view returns (uint8) {... */\n    tag_30:\n        /* \"PolarAI/interface.sol\":31809:31814  uint8 */\n      0x00\n        /* \"PolarAI/interface.sol\":31833:31842  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"PolarAI/interface.sol\":31826:31842  return _decimals */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":31768:31849  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":34240:34455  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"PolarAI/interface.sol\":34328:34332  bool */\n      0x00\n        /* \"PolarAI/interface.sol\":34344:34427  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_72\n        /* \"PolarAI/interface.sol\":34353:34365  _msgSender() */\n      tag_73\n        /* \"PolarAI/interface.sol\":34353:34363  _msgSender */\n      tag_59\n        /* \"PolarAI/interface.sol\":34353:34365  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"PolarAI/interface.sol\":34367:34374  spender */\n      dup5\n        /* \"PolarAI/interface.sol\":34376:34426  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_74\n        /* \"PolarAI/interface.sol\":34415:34425  addedValue */\n      dup6\n        /* \"PolarAI/interface.sol\":34376:34387  _allowances */\n      0x01\n        /* \"PolarAI/interface.sol\":34376:34401  _allowances[_msgSender()] */\n      0x00\n        /* \"PolarAI/interface.sol\":34388:34400  _msgSender() */\n      tag_75\n        /* \"PolarAI/interface.sol\":34388:34398  _msgSender */\n      tag_59\n        /* \"PolarAI/interface.sol\":34388:34400  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"PolarAI/interface.sol\":34376:34401  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":34376:34410  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"PolarAI/interface.sol\":34402:34409  spender */\n      dup10\n        /* \"PolarAI/interface.sol\":34376:34410  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":34376:34414  _allowances[_msgSender()][spender].add */\n      tag_76\n      swap1\n        /* \"PolarAI/interface.sol\":34376:34426  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"PolarAI/interface.sol\":34344:34352  _approve */\n      tag_60\n        /* \"PolarAI/interface.sol\":34344:34427  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_72:\n        /* \"PolarAI/interface.sol\":34444:34448  true */\n      0x01\n        /* \"PolarAI/interface.sol\":34437:34448  return true */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":34240:34455  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":32065:32182  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_36:\n        /* \"PolarAI/interface.sol\":32131:32138  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":32157:32166  _balances */\n      dup1\n        /* \"PolarAI/interface.sol\":32157:32175  _balances[account] */\n      0x00\n        /* \"PolarAI/interface.sol\":32167:32174  account */\n      dup4\n        /* \"PolarAI/interface.sol\":32157:32175  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":32150:32175  return _balances[account] */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":32065:32182  function balanceOf(address account) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":31060:31145  function symbol() public view returns (string memory) {... */\n    tag_38:\n        /* \"PolarAI/interface.sol\":31099:31112  string memory */\n      0x60\n        /* \"PolarAI/interface.sol\":31131:31138  _symbol */\n      0x04\n        /* \"PolarAI/interface.sol\":31124:31138  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":31060:31145  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":34942:35208  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"PolarAI/interface.sol\":35035:35039  bool */\n      0x00\n        /* \"PolarAI/interface.sol\":35051:35180  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_83\n        /* \"PolarAI/interface.sol\":35060:35072  _msgSender() */\n      tag_84\n        /* \"PolarAI/interface.sol\":35060:35070  _msgSender */\n      tag_59\n        /* \"PolarAI/interface.sol\":35060:35072  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"PolarAI/interface.sol\":35074:35081  spender */\n      dup5\n        /* \"PolarAI/interface.sol\":35083:35179  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_85\n        /* \"PolarAI/interface.sol\":35122:35137  subtractedValue */\n      dup6\n        /* \"PolarAI/interface.sol\":35083:35179  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"PolarAI/interface.sol\":35083:35094  _allowances */\n      0x01\n        /* \"PolarAI/interface.sol\":35083:35108  _allowances[_msgSender()] */\n      0x00\n        /* \"PolarAI/interface.sol\":35095:35107  _msgSender() */\n      tag_86\n        /* \"PolarAI/interface.sol\":35095:35105  _msgSender */\n      tag_59\n        /* \"PolarAI/interface.sol\":35095:35107  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"PolarAI/interface.sol\":35083:35108  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":35083:35117  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"PolarAI/interface.sol\":35109:35116  spender */\n      dup11\n        /* \"PolarAI/interface.sol\":35083:35117  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":35083:35121  _allowances[_msgSender()][spender].sub */\n      tag_69\n      swap1\n        /* \"PolarAI/interface.sol\":35083:35179  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"PolarAI/interface.sol\":35051:35059  _approve */\n      tag_60\n        /* \"PolarAI/interface.sol\":35051:35180  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_83:\n        /* \"PolarAI/interface.sol\":35197:35201  true */\n      0x01\n        /* \"PolarAI/interface.sol\":35190:35201  return true */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":34942:35208  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":32385:32557  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"PolarAI/interface.sol\":32471:32475  bool */\n      0x00\n        /* \"PolarAI/interface.sol\":32487:32529  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \"PolarAI/interface.sol\":32497:32509  _msgSender() */\n      tag_89\n        /* \"PolarAI/interface.sol\":32497:32507  _msgSender */\n      tag_59\n        /* \"PolarAI/interface.sol\":32497:32509  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"PolarAI/interface.sol\":32511:32520  recipient */\n      dup5\n        /* \"PolarAI/interface.sol\":32522:32528  amount */\n      dup5\n        /* \"PolarAI/interface.sol\":32487:32496  _transfer */\n      tag_64\n        /* \"PolarAI/interface.sol\":32487:32529  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"PolarAI/interface.sol\":32546:32550  true */\n      0x01\n        /* \"PolarAI/interface.sol\":32539:32550  return true */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":32385:32557  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":32615:32764  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n        /* \"PolarAI/interface.sol\":32704:32711  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":32730:32741  _allowances */\n      0x01\n        /* \"PolarAI/interface.sol\":32730:32748  _allowances[owner] */\n      0x00\n        /* \"PolarAI/interface.sol\":32742:32747  owner */\n      dup5\n        /* \"PolarAI/interface.sol\":32730:32748  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":32730:32757  _allowances[owner][spender] */\n      0x00\n        /* \"PolarAI/interface.sol\":32749:32756  spender */\n      dup4\n        /* \"PolarAI/interface.sol\":32730:32757  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":32723:32757  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":32615:32764  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":26178:26282  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"PolarAI/interface.sol\":26231:26246  address payable */\n      0x00\n        /* \"PolarAI/interface.sol\":26265:26275  msg.sender */\n      caller\n        /* \"PolarAI/interface.sol\":26258:26275  return msg.sender */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":26178:26282  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":38006:38346  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n        /* \"PolarAI/interface.sol\":38124:38125  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":38107:38126  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":38107:38112  owner */\n      dup4\n        /* \"PolarAI/interface.sol\":38107:38126  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/interface.sol\":38099:38167  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"PolarAI/interface.sol\":38204:38205  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":38185:38206  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":38185:38192  spender */\n      dup3\n        /* \"PolarAI/interface.sol\":38185:38206  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/interface.sol\":38177:38245  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"PolarAI/interface.sol\":38286:38292  amount */\n      dup1\n        /* \"PolarAI/interface.sol\":38256:38267  _allowances */\n      0x01\n        /* \"PolarAI/interface.sol\":38256:38274  _allowances[owner] */\n      0x00\n        /* \"PolarAI/interface.sol\":38268:38273  owner */\n      dup6\n        /* \"PolarAI/interface.sol\":38256:38274  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":38256:38283  _allowances[owner][spender] */\n      0x00\n        /* \"PolarAI/interface.sol\":38275:38282  spender */\n      dup5\n        /* \"PolarAI/interface.sol\":38256:38283  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":38256:38292  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/interface.sol\":38323:38330  spender */\n      dup2\n        /* \"PolarAI/interface.sol\":38307:38339  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":38316:38321  owner */\n      dup4\n        /* \"PolarAI/interface.sol\":38307:38339  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"PolarAI/interface.sol\":38332:38338  amount */\n      dup4\n        /* \"PolarAI/interface.sol\":38307:38339  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PolarAI/interface.sol\":38006:38346  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":35682:36212  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n        /* \"PolarAI/interface.sol\":35805:35806  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":35787:35807  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":35787:35793  sender */\n      dup4\n        /* \"PolarAI/interface.sol\":35787:35807  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/interface.sol\":35779:35849  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"PolarAI/interface.sol\":35888:35889  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":35867:35890  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":35867:35876  recipient */\n      dup3\n        /* \"PolarAI/interface.sol\":35867:35890  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/interface.sol\":35859:35930  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"PolarAI/interface.sol\":35941:35988  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"PolarAI/interface.sol\":35962:35968  sender */\n      dup4\n        /* \"PolarAI/interface.sol\":35970:35979  recipient */\n      dup4\n        /* \"PolarAI/interface.sol\":35981:35987  amount */\n      dup4\n        /* \"PolarAI/interface.sol\":35941:35961  _beforeTokenTransfer */\n      tag_99\n        /* \"PolarAI/interface.sol\":35941:35988  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"PolarAI/interface.sol\":36019:36090  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"PolarAI/interface.sol\":36041:36047  amount */\n      dup2\n        /* \"PolarAI/interface.sol\":36019:36090  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"PolarAI/interface.sol\":36019:36028  _balances */\n      0x00\n        /* \"PolarAI/interface.sol\":36019:36036  _balances[sender] */\n      dup1\n        /* \"PolarAI/interface.sol\":36029:36035  sender */\n      dup8\n        /* \"PolarAI/interface.sol\":36019:36036  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":36019:36040  _balances[sender].sub */\n      tag_69\n      swap1\n        /* \"PolarAI/interface.sol\":36019:36090  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"PolarAI/interface.sol\":35999:36008  _balances */\n      0x00\n        /* \"PolarAI/interface.sol\":35999:36016  _balances[sender] */\n      dup1\n        /* \"PolarAI/interface.sol\":36009:36015  sender */\n      dup6\n        /* \"PolarAI/interface.sol\":35999:36016  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":35999:36090  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/interface.sol\":36123:36155  _balances[recipient].add(amount) */\n      tag_101\n        /* \"PolarAI/interface.sol\":36148:36154  amount */\n      dup2\n        /* \"PolarAI/interface.sol\":36123:36132  _balances */\n      0x00\n        /* \"PolarAI/interface.sol\":36123:36143  _balances[recipient] */\n      dup1\n        /* \"PolarAI/interface.sol\":36133:36142  recipient */\n      dup6\n        /* \"PolarAI/interface.sol\":36123:36143  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":36123:36147  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"PolarAI/interface.sol\":36123:36155  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"PolarAI/interface.sol\":36100:36109  _balances */\n      0x00\n        /* \"PolarAI/interface.sol\":36100:36120  _balances[recipient] */\n      dup1\n        /* \"PolarAI/interface.sol\":36110:36119  recipient */\n      dup5\n        /* \"PolarAI/interface.sol\":36100:36120  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":36100:36155  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/interface.sol\":36187:36196  recipient */\n      dup2\n        /* \"PolarAI/interface.sol\":36170:36205  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":36179:36185  sender */\n      dup4\n        /* \"PolarAI/interface.sol\":36170:36205  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"PolarAI/interface.sol\":36198:36204  amount */\n      dup4\n        /* \"PolarAI/interface.sol\":36170:36205  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PolarAI/interface.sol\":35682:36212  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":4544:4731  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"PolarAI/interface.sol\":4630:4637  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":4662:4663  a */\n      dup4\n        /* \"PolarAI/interface.sol\":4657:4658  b */\n      dup4\n        /* \"PolarAI/interface.sol\":4657:4663  b <= a */\n      gt\n      iszero\n        /* \"PolarAI/interface.sol\":4665:4677  errorMessage */\n      dup3\n        /* \"PolarAI/interface.sol\":4649:4678  require(b <= a, errorMessage) */\n      swap1\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n        /* \"PolarAI/interface.sol\":4688:4697  uint256 c */\n      0x00\n        /* \"PolarAI/interface.sol\":4704:4705  b */\n      dup4\n        /* \"PolarAI/interface.sol\":4700:4701  a */\n      dup6\n        /* \"PolarAI/interface.sol\":4700:4705  a - b */\n      sub\n        /* \"PolarAI/interface.sol\":4688:4705  uint256 c = a - b */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":4723:4724  c */\n      dup1\n        /* \"PolarAI/interface.sol\":4716:4724  return c */\n      swap2\n      pop\n      pop\n        /* \"PolarAI/interface.sol\":4544:4731  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":3672:3848  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"PolarAI/interface.sol\":3730:3737  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":3749:3758  uint256 c */\n      dup1\n        /* \"PolarAI/interface.sol\":3765:3766  b */\n      dup3\n        /* \"PolarAI/interface.sol\":3761:3762  a */\n      dup5\n        /* \"PolarAI/interface.sol\":3761:3766  a + b */\n      add\n        /* \"PolarAI/interface.sol\":3749:3766  uint256 c = a + b */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":3789:3790  a */\n      dup4\n        /* \"PolarAI/interface.sol\":3784:3785  c */\n      dup2\n        /* \"PolarAI/interface.sol\":3784:3790  c >= a */\n      lt\n      iszero\n        /* \"PolarAI/interface.sol\":3776:3822  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"PolarAI/interface.sol\":3840:3841  c */\n      dup1\n        /* \"PolarAI/interface.sol\":3833:3841  return c */\n      swap2\n      pop\n      pop\n        /* \"PolarAI/interface.sol\":3672:3848  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":39344:39436  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122080981dddbdf91fe57a1b3dd26a19c569065df9843f9f18d2fe29e5cdf2b76d5964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620013a5380380620013a5833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd9291906200020b565b508060049080519060200190620001e69291906200020b565b506012600560006101000a81548160ff021916908360ff1602179055505050620002b1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024e57805160ff19168380011785556200027f565b828001600101855582156200027f579182015b828111156200027e57825182559160200191906001019062000261565b5b5090506200028e919062000292565b5090565b5b80821115620002ad57600081600090555060010162000293565b5090565b6110e480620002c16000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101960289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2090919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108a60259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110666024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fd16022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110416025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fae6023913960400191505060405180910390fd5b610cb6838383610fa8565b610d2181604051806060016040528060268152602001610ff3602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2090919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610f9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122080981dddbdf91fe57a1b3dd26a19c569065df9843f9f18d2fe29e5cdf2b76d5964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13A5 CODESIZE SUB DUP1 PUSH3 0x13A5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2B1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x24E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x27F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x27F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x27E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x28E SWAP2 SWAP1 PUSH3 0x292 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2AD JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x293 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x10E4 DUP1 PUSH3 0x2C1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1019 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1066 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFD1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1041 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFAE PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFF3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212208098 SAR 0xDD 0xBD 0xF9 0x1F 0xE5 PUSH27 0x1B3DD26A19C569065DF9843F9F18D2FE29E5CDF2B76D5964736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "29992:9446:1:-:0;;;30660:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30740:4;30732:5;:12;;;;;;;;;;;;:::i;:::-;;30764:6;30754:7;:16;;;;;;;;;;;;:::i;:::-;;30792:2;30780:9;;:14;;;;;;;;;;;;;;;;;;30660:141;;29992:9446;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101960289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2090919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108a60259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110666024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fd16022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110416025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fae6023913960400191505060405180910390fd5b610cb6838383610fa8565b610d2181604051806060016040528060268152602001610ff3602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2090919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610f9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122080981dddbdf91fe57a1b3dd26a19c569065df9843f9f18d2fe29e5cdf2b76d5964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1019 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1066 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFD1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1041 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFAE PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFF3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212208098 SAR 0xDD 0xBD 0xF9 0x1F 0xE5 PUSH27 0x1B3DD26A19C569065DF9843F9F18D2FE29E5CDF2B76D5964736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "29992:9446:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30866:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32902:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;31909:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;33528:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;31768:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;34240:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;32065:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;31060:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34942:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;32385:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;32615:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;30866:81;30903:13;30935:5;30928:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30866:81;:::o;32902:166::-;32985:4;33001:39;33010:12;:10;:12::i;:::-;33024:7;33033:6;33001:8;:39::i;:::-;33057:4;33050:11;;32902:166;;;;:::o;31909:98::-;31962:7;31988:12;;31981:19;;31909:98;:::o;33528:317::-;33634:4;33650:36;33660:6;33668:9;33679:6;33650:9;:36::i;:::-;33696:121;33705:6;33713:12;:10;:12::i;:::-;33727:89;33765:6;33727:89;;;;;;;;;;;;;;;;;:11;:19;33739:6;33727:19;;;;;;;;;;;;;;;:33;33747:12;:10;:12::i;:::-;33727:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;33696:8;:121::i;:::-;33834:4;33827:11;;33528:317;;;;;:::o;31768:81::-;31809:5;31833:9;;;;;;;;;;;31826:16;;31768:81;:::o;34240:215::-;34328:4;34344:83;34353:12;:10;:12::i;:::-;34367:7;34376:50;34415:10;34376:11;:25;34388:12;:10;:12::i;:::-;34376:25;;;;;;;;;;;;;;;:34;34402:7;34376:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;34344:8;:83::i;:::-;34444:4;34437:11;;34240:215;;;;:::o;32065:117::-;32131:7;32157:9;:18;32167:7;32157:18;;;;;;;;;;;;;;;;32150:25;;32065:117;;;:::o;31060:85::-;31099:13;31131:7;31124:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31060:85;:::o;34942:266::-;35035:4;35051:129;35060:12;:10;:12::i;:::-;35074:7;35083:96;35122:15;35083:96;;;;;;;;;;;;;;;;;:11;:25;35095:12;:10;:12::i;:::-;35083:25;;;;;;;;;;;;;;;:34;35109:7;35083:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;35051:8;:129::i;:::-;35197:4;35190:11;;34942:266;;;;:::o;32385:172::-;32471:4;32487:42;32497:12;:10;:12::i;:::-;32511:9;32522:6;32487:9;:42::i;:::-;32546:4;32539:11;;32385:172;;;;:::o;32615:149::-;32704:7;32730:11;:18;32742:5;32730:18;;;;;;;;;;;;;;;:27;32749:7;32730:27;;;;;;;;;;;;;;;;32723:34;;32615:149;;;;:::o;26178:104::-;26231:15;26265:10;26258:17;;26178:104;:::o;38006:340::-;38124:1;38107:19;;:5;:19;;;;38099:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38204:1;38185:21;;:7;:21;;;;38177:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38286:6;38256:11;:18;38268:5;38256:18;;;;;;;;;;;;;;;:27;38275:7;38256:27;;;;;;;;;;;;;;;:36;;;;38323:7;38307:32;;38316:5;38307:32;;;38332:6;38307:32;;;;;;;;;;;;;;;;;;38006:340;;;:::o;35682:530::-;35805:1;35787:20;;:6;:20;;;;35779:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35888:1;35867:23;;:9;:23;;;;35859:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35941:47;35962:6;35970:9;35981:6;35941:20;:47::i;:::-;36019:71;36041:6;36019:71;;;;;;;;;;;;;;;;;:9;:17;36029:6;36019:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;35999:9;:17;36009:6;35999:17;;;;;;;;;;;;;;;:91;;;;36123:32;36148:6;36123:9;:20;36133:9;36123:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;36100:9;:20;36110:9;36100:20;;;;;;;;;;;;;;;:55;;;;36187:9;36170:35;;36179:6;36170:35;;;36198:6;36170:35;;;;;;;;;;;;;;;;;;35682:530;;;:::o;4544:187::-;4630:7;4662:1;4657;:6;;4665:12;4649:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4688:9;4704:1;4700;:5;4688:17;;4723:1;4716:8;;;4544:187;;;;;:::o;3672:176::-;3730:7;3749:9;3765:1;3761;:5;3749:17;;3789:1;3784;:6;;3776:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3840:1;3833:8;;;3672:176;;;;:::o;39344:92::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "864800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1144",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30740,
									"end": 30744,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30737,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30764,
									"end": 30770,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30761,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30792,
									"end": 30794,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 30780,
									"end": 30789,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 30780,
									"end": 30789,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122080981dddbdf91fe57a1b3dd26a19c569065df9843f9f18d2fe29e5cdf2b76d5964736f6c634300060c0033",
									".code": [
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30903,
											"end": 30916,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 30935,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32985,
											"end": 32989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33001,
											"end": 33040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 33010,
											"end": 33022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 33010,
											"end": 33020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 33010,
											"end": 33022,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33010,
											"end": 33022,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 33010,
											"end": 33022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33024,
											"end": 33031,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33033,
											"end": 33039,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33001,
											"end": 33009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33001,
											"end": 33040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33001,
											"end": 33040,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 33001,
											"end": 33040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33057,
											"end": 33061,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 33050,
											"end": 33061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33050,
											"end": 33061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31962,
											"end": 31969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31988,
											"end": 32000,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31988,
											"end": 32000,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31981,
											"end": 32000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31981,
											"end": 32000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33634,
											"end": 33638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33650,
											"end": 33686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 33660,
											"end": 33666,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33668,
											"end": 33677,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33679,
											"end": 33685,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33650,
											"end": 33659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 33650,
											"end": 33686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33650,
											"end": 33686,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 33650,
											"end": 33686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33696,
											"end": 33817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 33705,
											"end": 33711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33713,
											"end": 33725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 33713,
											"end": 33723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 33713,
											"end": 33725,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33713,
											"end": 33725,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 33713,
											"end": 33725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 33765,
											"end": 33771,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH data",
											"source": 1,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33738,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33739,
											"end": 33745,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33747,
											"end": 33759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 33747,
											"end": 33757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 33747,
											"end": 33759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33747,
											"end": 33759,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 33747,
											"end": 33759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 33727,
											"end": 33764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33696,
											"end": 33704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33696,
											"end": 33817,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33696,
											"end": 33817,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 33696,
											"end": 33817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33834,
											"end": 33838,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 33827,
											"end": 33838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33827,
											"end": 33838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31809,
											"end": 31814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31826,
											"end": 31842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31826,
											"end": 31842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34328,
											"end": 34332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34344,
											"end": 34427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 34353,
											"end": 34365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 34353,
											"end": 34363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 34353,
											"end": 34365,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34353,
											"end": 34365,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 34353,
											"end": 34365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34367,
											"end": 34374,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 34415,
											"end": 34425,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34387,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34388,
											"end": 34400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 34388,
											"end": 34398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 34388,
											"end": 34400,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34388,
											"end": 34400,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 34388,
											"end": 34400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34402,
											"end": 34409,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 34376,
											"end": 34414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34344,
											"end": 34352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 34344,
											"end": 34427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34344,
											"end": 34427,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 34344,
											"end": 34427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34444,
											"end": 34448,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34437,
											"end": 34448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34437,
											"end": 34448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32131,
											"end": 32138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32157,
											"end": 32166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32167,
											"end": 32174,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 32150,
											"end": 32175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32150,
											"end": 32175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31099,
											"end": 31112,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 31131,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35035,
											"end": 35039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35051,
											"end": 35180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 35060,
											"end": 35072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 35060,
											"end": 35070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 35060,
											"end": 35072,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35060,
											"end": 35072,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 35060,
											"end": 35072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35074,
											"end": 35081,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 35122,
											"end": 35137,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH data",
											"source": 1,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35094,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35095,
											"end": 35107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 35095,
											"end": 35105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 35095,
											"end": 35107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35095,
											"end": 35107,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 35095,
											"end": 35107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35109,
											"end": 35116,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 35083,
											"end": 35121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35051,
											"end": 35059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 35051,
											"end": 35180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35051,
											"end": 35180,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 35051,
											"end": 35180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35197,
											"end": 35201,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 35190,
											"end": 35201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35190,
											"end": 35201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32471,
											"end": 32475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32487,
											"end": 32529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 32497,
											"end": 32509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 32497,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 32497,
											"end": 32509,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32497,
											"end": 32509,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 32497,
											"end": 32509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32511,
											"end": 32520,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 32522,
											"end": 32528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 32487,
											"end": 32496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 32487,
											"end": 32529,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32487,
											"end": 32529,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 32487,
											"end": 32529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32546,
											"end": 32550,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 32539,
											"end": 32550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32539,
											"end": 32550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32704,
											"end": 32711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32730,
											"end": 32741,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32742,
											"end": 32747,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32749,
											"end": 32756,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 32723,
											"end": 32757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32723,
											"end": 32757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26178,
											"end": 26282,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 26178,
											"end": 26282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26231,
											"end": 26246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26265,
											"end": 26275,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 26258,
											"end": 26275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26258,
											"end": 26275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26178,
											"end": 26282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26178,
											"end": 26282,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38124,
											"end": 38125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38107,
											"end": 38112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH data",
											"source": 1,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38204,
											"end": 38205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38185,
											"end": 38192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH data",
											"source": 1,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38286,
											"end": 38292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38267,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38268,
											"end": 38273,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38275,
											"end": 38282,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38292,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38323,
											"end": 38330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38316,
											"end": 38321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 38332,
											"end": 38338,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35805,
											"end": 35806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35787,
											"end": 35793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH data",
											"source": 1,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35888,
											"end": 35889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35867,
											"end": 35876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH data",
											"source": 1,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35941,
											"end": 35988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 35962,
											"end": 35968,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 35970,
											"end": 35979,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 35981,
											"end": 35987,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 35941,
											"end": 35961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 35941,
											"end": 35988,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35941,
											"end": 35988,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 35941,
											"end": 35988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 36041,
											"end": 36047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH data",
											"source": 1,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36029,
											"end": 36035,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 36019,
											"end": 36040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36009,
											"end": 36015,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36090,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 36148,
											"end": 36154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36133,
											"end": 36142,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 36123,
											"end": 36147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36110,
											"end": 36119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36155,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36187,
											"end": 36196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36179,
											"end": 36185,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 36198,
											"end": 36204,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4662,
											"end": 4663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4663,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4663,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4704,
											"end": 4705,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4701,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4705,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3730,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3762,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3789,
											"end": 3790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1859,
								"contract": "PolarAI/interface.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1865,
								"contract": "PolarAI/interface.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1867,
								"contract": "PolarAI/interface.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1869,
								"contract": "PolarAI/interface.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1871,
								"contract": "PolarAI/interface.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1873,
								"contract": "PolarAI/interface.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PolarAI/interface.sol\":18505:25567  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"PolarAI/interface.sol\":18505:25567  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209dfe2cfd68742cb9b762dac0ed19a9568ed4be0dd7bd0d647faf036b98e3fca964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209dfe2cfd68742cb9b762dac0ed19a9568ed4be0dd7bd0d647faf036b98e3fca964736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 INVALID 0x2C REVERT PUSH9 0x742CB9B762DAC0ED19 0xA9 JUMP DUP15 0xD4 0xBE 0xD 0xD7 0xBD 0xD PUSH5 0x7FAF036B98 0xE3 0xFC 0xA9 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "18505:7062:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209dfe2cfd68742cb9b762dac0ed19a9568ed4be0dd7bd0d647faf036b98e3fca964736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 INVALID 0x2C REVERT PUSH9 0x742CB9B762DAC0ED19 0xA9 JUMP DUP15 0xD4 0xBE 0xD 0xD7 0xBD 0xD PUSH5 0x7FAF036B98 0xE3 0xFC 0xA9 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "18505:7062:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18505,
									"end": 25567,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209dfe2cfd68742cb9b762dac0ed19a9568ed4be0dd7bd0d647faf036b98e3fca964736f6c634300060c0033",
									".code": [
										{
											"begin": 18505,
											"end": 25567,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 25567,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 25567,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 25567,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 18505,
											"end": 25567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18505,
											"end": 25567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 25567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18505,
											"end": 25567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 25567,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1742,
								"contract": "PolarAI/interface.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PolarAI/interface.sol\":14648:17752  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"PolarAI/interface.sol\":14648:17752  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205d602c9e32583866c84f7cfec9feb301c3d920d5b267224729d2eb5860d35e1e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d602c9e32583866c84f7cfec9feb301c3d920d5b267224729d2eb5860d35e1e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D PUSH1 0x2C SWAP15 ORIGIN PC CODESIZE PUSH7 0xC84F7CFEC9FEB3 ADD 0xC3 0xD9 KECCAK256 0xD5 0xB2 PUSH8 0x224729D2EB5860D3 0x5E 0x1E PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "14648:3104:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d602c9e32583866c84f7cfec9feb301c3d920d5b267224729d2eb5860d35e1e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D PUSH1 0x2C SWAP15 ORIGIN PC CODESIZE PUSH7 0xC84F7CFEC9FEB3 ADD 0xC3 0xD9 KECCAK256 0xD5 0xB2 PUSH8 0x224729D2EB5860D3 0x5E 0x1E PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "14648:3104:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 14648,
									"end": 17752,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d602c9e32583866c84f7cfec9feb301c3d920d5b267224729d2eb5860d35e1e64736f6c634300060c0033",
									".code": [
										{
											"begin": 14648,
											"end": 17752,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 14648,
											"end": 17752,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 14648,
											"end": 17752,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14648,
											"end": 17752,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14648,
											"end": 17752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14648,
											"end": 17752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14648,
											"end": 17752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14648,
											"end": 17752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14648,
											"end": 17752,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PolarAI/interface.sol\":3420:7998  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"PolarAI/interface.sol\":3420:7998  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ea4903b66f02ab7b8f7597da48e7e4bdbe9736f8c00b4bb2e7ea3d6edc5c173f64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea4903b66f02ab7b8f7597da48e7e4bdbe9736f8c00b4bb2e7ea3d6edc5c173f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0x49 SUB 0xB6 PUSH16 0x2AB7B8F7597DA48E7E4BDBE9736F8C0 SIGNEXTEND 0x4B 0xB2 0xE7 0xEA RETURNDATASIZE PUSH15 0xDC5C173F64736F6C634300060C0033 ",
							"sourceMap": "3420:4578:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea4903b66f02ab7b8f7597da48e7e4bdbe9736f8c00b4bb2e7ea3d6edc5c173f64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0x49 SUB 0xB6 PUSH16 0x2AB7B8F7597DA48E7E4BDBE9736F8C0 SIGNEXTEND 0x4B 0xB2 0xE7 0xEA RETURNDATASIZE PUSH15 0xDC5C173F64736F6C634300060C0033 ",
							"sourceMap": "3420:4578:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3420,
									"end": 7998,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ea4903b66f02ab7b8f7597da48e7e4bdbe9736f8c00b4bb2e7ea3d6edc5c173f64736f6c634300060c0033",
									".code": [
										{
											"begin": 3420,
											"end": 7998,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 7998,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 7998,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3420,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3420,
											"end": 7998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3420,
											"end": 7998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 7998,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "PolarAI/SushiToken_HKHH.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "PolarAI/SushiToken_HKHH.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "7816",
				"formattedMessage": "PolarAI/SushiToken_HKHH.sol:18:5: Warning: Documentation tag on non-public state variables will be disallowed in 0.7.0. You will need to use the @dev tag explicitly.\n    /// @notice A record of each accounts delegate\n    ^--------------------------------------------^\n",
				"message": "Documentation tag on non-public state variables will be disallowed in 0.7.0. You will need to use the @dev tag explicitly.",
				"severity": "warning",
				"sourceLocation": {
					"end": 855,
					"file": "PolarAI/SushiToken_HKHH.sol",
					"start": 809
				},
				"type": "Warning"
			}
		],
		"sources": {
			"PolarAI/SushiToken_HKHH.sol": {
				"ast": {
					"absolutePath": "PolarAI/SushiToken_HKHH.sol",
					"exportedSymbols": {
						"SushiToken": [
							637
						]
					},
					"id": 638,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "PolarAI/interface.sol",
							"file": "./interface.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 638,
							"sourceUnit": 2446,
							"src": "24:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"argumentTypes": null,
											"hexValue": "5375736869546f6b656e",
											"id": 4,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "111:12:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_98c9bb91bdae9b7533d32a81c3a7219e9719600439224699b203450ac6111745",
												"typeString": "literal_string \"SushiToken\""
											},
											"value": "SushiToken"
										},
										{
											"argumentTypes": null,
											"hexValue": "5355534849",
											"id": 5,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "125:7:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_bbf304add43db0a05d104474683215530b076be1dfdf72a4d53a1e443d8e4c21",
												"typeString": "literal_string \"SUSHI\""
											},
											"value": "SUSHI"
										}
									],
									"baseName": {
										"contractScope": null,
										"id": 3,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2345,
										"src": "105:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$2345",
											"typeString": "contract ERC20"
										}
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "105:28:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 7,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1843,
										"src": "135:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1843",
											"typeString": "contract Ownable"
										}
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "135:7:0"
								}
							],
							"contractDependencies": [
								714,
								1736,
								1843,
								2345
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 637,
							"linearizedBaseContracts": [
								637,
								1843,
								2345,
								714,
								1736
							],
							"name": "SushiToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "307:98:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 19,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "323:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 20,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "328:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 18,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "317:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "317:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "317:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 26,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "369:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "361:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 24,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "361:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "361:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 28,
																"name": "_delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "373:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 30,
															"indexExpression": {
																"argumentTypes": null,
																"id": 29,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "384:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "373:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 31,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "390:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 23,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "346:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "346:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "346:52:0"
											}
										]
									},
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "149:92:0",
										"text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
									},
									"functionSelector": "40c10f19",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 16,
											"modifierName": {
												"argumentTypes": null,
												"id": 15,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1792,
												"src": "297:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "297:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "260:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "273:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "259:30:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "307:0:0"
									},
									"scope": 637,
									"src": "246:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "809:46:0",
										"text": "@notice A record of each accounts delegate"
									},
									"id": 40,
									"mutability": "mutable",
									"name": "_delegates",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 637,
									"src": "860:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 39,
										"keyType": {
											"id": 37,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "869:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "860:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 38,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "880:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"canonicalName": "SushiToken.Checkpoint",
									"id": 45,
									"members": [
										{
											"constant": false,
											"id": 42,
											"mutability": "mutable",
											"name": "fromBlock",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 45,
											"src": "1019:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 41,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1019:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 44,
											"mutability": "mutable",
											"name": "votes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 45,
											"src": "1045:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 43,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1045:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nodeType": "StructDefinition",
									"scope": 637,
									"src": "991:74:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1071:68:0",
										"text": "@notice A record of votes checkpoints for each account, by index"
									},
									"functionSelector": "f1127ed8",
									"id": 52,
									"mutability": "mutable",
									"name": "checkpoints",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 637,
									"src": "1144:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
										"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint))"
									},
									"typeName": {
										"id": 51,
										"keyType": {
											"id": 47,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1153:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1144:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
											"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint))"
										},
										"valueType": {
											"id": 50,
											"keyType": {
												"id": 48,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1173:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Mapping",
											"src": "1164:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
												"typeString": "mapping(uint32 => struct SushiToken.Checkpoint)"
											},
											"valueType": {
												"contractScope": null,
												"id": 49,
												"name": "Checkpoint",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 45,
												"src": "1183:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$45_storage_ptr",
													"typeString": "struct SushiToken.Checkpoint"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "1221:54:0",
										"text": "@notice The number of checkpoints for each account"
									},
									"functionSelector": "6fcfff45",
									"id": 57,
									"mutability": "mutable",
									"name": "numCheckpoints",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 637,
									"src": "1280:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 56,
										"keyType": {
											"id": 54,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1289:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1280:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueType": {
											"id": 55,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "1300:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "1336:58:0",
										"text": "@notice The EIP-712 typehash for the contract's domain"
									},
									"functionSelector": "20606b70",
									"id": 63,
									"mutability": "constant",
									"name": "DOMAIN_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 637,
									"src": "1399:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 59,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1399:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 61,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1451:69:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 60,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "1441:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 62,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1441:80:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "1528:79:0",
										"text": "@notice The EIP-712 typehash for the delegation struct used by the contract"
									},
									"functionSelector": "e7a324dc",
									"id": 69,
									"mutability": "constant",
									"name": "DELEGATION_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 637,
									"src": "1612:117:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 65,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1612:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 67,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1668:60:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 66,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "1658:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 68,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1658:71:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "1736:66:0",
										"text": "@notice A record of states for signing / validating signatures"
									},
									"functionSelector": "7ecebe00",
									"id": 74,
									"mutability": "mutable",
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 637,
									"src": "1807:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 73,
										"keyType": {
											"id": 71,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1816:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1807:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 72,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1827:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "1855:71:0",
										"text": "@notice An event thats emitted when an account changes its delegate"
									},
									"id": 83,
									"name": "DelegateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 83,
												"src": "1953:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromDelegate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 83,
												"src": "1980:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "toDelegate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 83,
												"src": "2010:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1952:85:0"
									},
									"src": "1931:107:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2044:81:0",
										"text": "@notice An event thats emitted when a delegate account's vote balance changes"
									},
									"id": 92,
									"name": "DelegateVotesChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 92,
												"src": "2157:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 92,
												"src": "2183:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 92,
												"src": "2205:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2205:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2156:65:0"
									},
									"src": "2130:92:0"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2462:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 100,
														"name": "_delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "2479:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 102,
													"indexExpression": {
														"argumentTypes": null,
														"id": 101,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "2490:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2479:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 99,
												"id": 103,
												"nodeType": "Return",
												"src": "2472:28:0"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "2228:131:0",
										"text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegator The address to get delegatee for"
									},
									"functionSelector": "587cde1e",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegates",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "2383:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2382:19:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "2449:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2448:9:0"
									},
									"scope": 637,
									"src": "2364:143:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "2691:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 112,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2718:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2718:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 114,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2730:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 111,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2708:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2708:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 110,
												"id": 116,
												"nodeType": "Return",
												"src": "2701:39:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2512:128:0",
										"text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegatee The address to delegate votes to"
									},
									"functionSelector": "5c19a95c",
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 118,
												"src": "2663:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2662:19:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2691:0:0"
									},
									"scope": 637,
									"src": "2645:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "3343:967:0",
										"statements": [
											{
												"assignments": [
													135
												],
												"declarations": [
													{
														"constant": false,
														"id": 135,
														"mutability": "mutable",
														"name": "domainSeparator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 220,
														"src": "3353:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 134,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 155,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 139,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 63,
																	"src": "3430:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 143,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1903,
																						"src": "3479:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																							"typeString": "function () view returns (string memory)"
																						}
																					},
																					"id": 144,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3479:6:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3473:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 141,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "3473:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3473:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 140,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -8,
																		"src": "3463:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3463:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 147,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "3505:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3505:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 151,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "3543:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SushiToken_$637",
																				"typeString": "contract SushiToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SushiToken_$637",
																				"typeString": "contract SushiToken"
																			}
																		],
																		"id": 150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3535:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 149,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3535:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3535:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 137,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "3402:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3402:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3402:160:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 136,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "3379:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3379:193:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3353:219:0"
											},
											{
												"assignments": [
													157
												],
												"declarations": [
													{
														"constant": false,
														"id": 157,
														"mutability": "mutable",
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 220,
														"src": "3583:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 156,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3583:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 167,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 161,
																	"name": "DELEGATION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 69,
																	"src": "3655:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 162,
																	"name": "delegatee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "3692:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 163,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "3719:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 164,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "3742:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 159,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "3627:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3627:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3627:135:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 158,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "3604:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3604:168:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3583:189:0"
											},
											{
												"assignments": [
													169
												],
												"declarations": [
													{
														"constant": false,
														"id": 169,
														"mutability": "mutable",
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 220,
														"src": "3783:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 168,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3783:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 178,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3857:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 174,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "3885:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 175,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "3918:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 171,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "3823:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3823:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3823:119:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 170,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "3800:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3800:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3783:169:0"
											},
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "signatory",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 220,
														"src": "3963:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3963:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 187,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 182,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "3993:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 183,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "4001:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 184,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "4004:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 185,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4007:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 181,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "3983:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3983:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3963:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 189,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "4027:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4048:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4040:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 190,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4040:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4040:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4027:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53555348493a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4052:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aeeb870860c7451819edc560c5520e1197c2d62c04cc23def3a21b91410d0633",
																"typeString": "literal_string \"SUSHI::delegateBySig: invalid signature\""
															},
															"value": "SUSHI::delegateBySig: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aeeb870860c7451819edc560c5520e1197c2d62c04cc23def3a21b91410d0633",
																"typeString": "literal_string \"SUSHI::delegateBySig: invalid signature\""
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4019:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4019:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "4019:75:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 199,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "4112:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "4121:19:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 200,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 74,
																		"src": "4121:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 202,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 201,
																		"name": "signatory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 180,
																		"src": "4128:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4121:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4112:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53555348493a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4142:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1e65db8426b65ad764814369e421d0b17d63e03dc4c1056a693e1cc89fb7a3e",
																"typeString": "literal_string \"SUSHI::delegateBySig: invalid nonce\""
															},
															"value": "SUSHI::delegateBySig: invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1e65db8426b65ad764814369e421d0b17d63e03dc4c1056a693e1cc89fb7a3e",
																"typeString": "literal_string \"SUSHI::delegateBySig: invalid nonce\""
															}
														],
														"id": 198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4104:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4104:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "4104:76:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 209,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -17,
																"src": "4198:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 210,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "4205:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4198:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53555348493a3a64656c656761746542795369673a207369676e61747572652065787069726564",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4213:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18fecdf225b5e9a1d03e234e6893b777c717a928a78496f199bb78499b5dcd1c",
																"typeString": "literal_string \"SUSHI::delegateBySig: signature expired\""
															},
															"value": "SUSHI::delegateBySig: signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18fecdf225b5e9a1d03e234e6893b777c717a928a78496f199bb78499b5dcd1c",
																"typeString": "literal_string \"SUSHI::delegateBySig: signature expired\""
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4190:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4190:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "4190:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 216,
															"name": "signatory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "4282:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 217,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "4293:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 215,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "4272:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 133,
												"id": 219,
												"nodeType": "Return",
												"src": "4265:38:0"
											}
										]
									},
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "2753:412:0",
										"text": " @notice Delegates votes from signatory to `delegatee`\n @param delegatee The address to delegate votes to\n @param nonce The contract state required to match the signature\n @param expiry The time at which to expire the signature\n @param v The recovery byte of the signature\n @param r Half of the ECDSA signature pair\n @param s Half of the ECDSA signature pair"
									},
									"functionSelector": "c3cda520",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateBySig",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "3202:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "3229:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3229:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "3249:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3249:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "3270:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 126,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3270:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "3287:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 128,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "3306:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3192:129:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3343:0:0"
									},
									"scope": 637,
									"src": "3170:1140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "4606:146:0",
										"statements": [
											{
												"assignments": [
													230
												],
												"declarations": [
													{
														"constant": false,
														"id": 230,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 249,
														"src": "4616:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 229,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "4616:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 234,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 231,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "4638:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 233,
													"indexExpression": {
														"argumentTypes": null,
														"id": 232,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4653:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4638:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4616:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 235,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "4678:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4693:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4678:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4744:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4678:67:0",
													"trueExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 238,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "4697:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																	}
																},
																"id": 240,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 239,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "4709:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4697:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																	"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																}
															},
															"id": 244,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 241,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "4718:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4733:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4718:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4697:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																"typeString": "struct SushiToken.Checkpoint storage ref"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "4697:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 228,
												"id": 248,
												"nodeType": "Return",
												"src": "4671:74:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "4316:183:0",
										"text": " @notice Gets the current votes balance for `account`\n @param account The address to get votes balance\n @return The number of current votes for `account`"
									},
									"functionSelector": "b4b5ea57",
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 250,
												"src": "4529:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4528:17:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 250,
												"src": "4593:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4592:9:0"
									},
									"scope": 637,
									"src": "4504:248:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "5292:1100:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 261,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "5310:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 262,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "5324:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5324:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5310:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53555348493a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5338:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95f5bca076212943aad5c226142010ad55d0096dba63ca905d770f4fe4afff33",
																"typeString": "literal_string \"SUSHI::getPriorVotes: not yet determined\""
															},
															"value": "SUSHI::getPriorVotes: not yet determined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95f5bca076212943aad5c226142010ad55d0096dba63ca905d770f4fe4afff33",
																"typeString": "literal_string \"SUSHI::getPriorVotes: not yet determined\""
															}
														],
														"id": 260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5302:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5302:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "5302:79:0"
											},
											{
												"assignments": [
													269
												],
												"declarations": [
													{
														"constant": false,
														"id": 269,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 381,
														"src": "5392:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 268,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "5392:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 273,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 270,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "5414:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 272,
													"indexExpression": {
														"argumentTypes": null,
														"id": 271,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "5429:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5414:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5392:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 274,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "5451:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5467:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5451:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 280,
												"nodeType": "IfStatement",
												"src": "5447:56:0",
												"trueBody": {
													"id": 279,
													"nodeType": "Block",
													"src": "5470:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5491:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 259,
															"id": 278,
															"nodeType": "Return",
															"src": "5484:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 281,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "5560:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																	}
																},
																"id": 283,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 282,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "5572:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5560:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																	"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																}
															},
															"id": 287,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 284,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 269,
																	"src": "5581:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5596:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5581:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5560:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																"typeString": "struct SushiToken.Checkpoint storage ref"
															}
														},
														"id": 288,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 42,
														"src": "5560:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 289,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "5612:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5560:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 301,
												"nodeType": "IfStatement",
												"src": "5556:145:0",
												"trueBody": {
													"id": 300,
													"nodeType": "Block",
													"src": "5625:76:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 291,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 52,
																			"src": "5646:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																			}
																		},
																		"id": 293,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 292,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "5658:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5646:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																			"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																		}
																	},
																	"id": 297,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 294,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 269,
																			"src": "5667:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5682:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5667:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5646:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																		"typeString": "struct SushiToken.Checkpoint storage ref"
																	}
																},
																"id": 298,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "5646:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 259,
															"id": 299,
															"nodeType": "Return",
															"src": "5639:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 302,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "5759:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																	}
																},
																"id": 304,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 303,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "5771:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5759:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																	"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																}
															},
															"id": 306,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5780:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5759:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																"typeString": "struct SushiToken.Checkpoint storage ref"
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 42,
														"src": "5759:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 308,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "5795:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5759:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 313,
												"nodeType": "IfStatement",
												"src": "5755:86:0",
												"trueBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "5808:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5829:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 259,
															"id": 311,
															"nodeType": "Return",
															"src": "5822:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 381,
														"src": "5851:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 314,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "5851:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5866:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5851:16:0"
											},
											{
												"assignments": [
													319
												],
												"declarations": [
													{
														"constant": false,
														"id": 319,
														"mutability": "mutable",
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 381,
														"src": "5877:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 318,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "5877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 323,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 320,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "5892:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5907:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5892:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5877:31:0"
											},
											{
												"body": {
													"id": 372,
													"nodeType": "Block",
													"src": "5940:396:0",
													"statements": [
														{
															"assignments": [
																328
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 328,
																	"mutability": "mutable",
																	"name": "center",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 372,
																	"src": "5954:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 327,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "5954:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 337,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 329,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "5970:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 330,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 319,
																					"src": "5979:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 331,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 315,
																					"src": "5987:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "5979:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 333,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5978:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5996:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5978:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "5970:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5954:43:0"
														},
														{
															"assignments": [
																339
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 339,
																	"mutability": "mutable",
																	"name": "cp",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 372,
																	"src": "6038:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$45_memory_ptr",
																		"typeString": "struct SushiToken.Checkpoint"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 338,
																		"name": "Checkpoint",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 45,
																		"src": "6038:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$45_storage_ptr",
																			"typeString": "struct SushiToken.Checkpoint"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 345,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 340,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 52,
																		"src": "6061:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																		}
																	},
																	"id": 342,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 341,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 253,
																		"src": "6073:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6061:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																		"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																	}
																},
																"id": 344,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 343,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "6082:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6061:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																	"typeString": "struct SushiToken.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6038:51:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 346,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 339,
																		"src": "6107:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$45_memory_ptr",
																			"typeString": "struct SushiToken.Checkpoint memory"
																		}
																	},
																	"id": 347,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 42,
																	"src": "6107:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 348,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "6123:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6107:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 354,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 339,
																			"src": "6194:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$45_memory_ptr",
																				"typeString": "struct SushiToken.Checkpoint memory"
																			}
																		},
																		"id": 355,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 42,
																		"src": "6194:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 356,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "6209:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6194:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 369,
																	"nodeType": "Block",
																	"src": "6275:51:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 363,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 319,
																					"src": "6293:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 366,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 364,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 328,
																						"src": "6301:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 365,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6310:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "6301:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "6293:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 368,
																			"nodeType": "ExpressionStatement",
																			"src": "6293:18:0"
																		}
																	]
																},
																"id": 370,
																"nodeType": "IfStatement",
																"src": "6190:136:0",
																"trueBody": {
																	"id": 362,
																	"nodeType": "Block",
																	"src": "6222:47:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 358,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 315,
																					"src": "6240:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"id": 359,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 328,
																					"src": "6248:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "6240:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 361,
																			"nodeType": "ExpressionStatement",
																			"src": "6240:14:0"
																		}
																	]
																}
															},
															"id": 371,
															"nodeType": "IfStatement",
															"src": "6103:223:0",
															"trueBody": {
																"id": 353,
																"nodeType": "Block",
																"src": "6136:48:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 350,
																				"name": "cp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 339,
																				"src": "6161:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Checkpoint_$45_memory_ptr",
																					"typeString": "struct SushiToken.Checkpoint memory"
																				}
																			},
																			"id": 351,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 44,
																			"src": "6161:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 259,
																		"id": 352,
																		"nodeType": "Return",
																		"src": "6154:15:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 324,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "5925:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 325,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "5933:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "5925:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "WhileStatement",
												"src": "5918:418:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 374,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "6352:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																	"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																}
															},
															"id": 376,
															"indexExpression": {
																"argumentTypes": null,
																"id": 375,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "6364:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6352:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
															}
														},
														"id": 378,
														"indexExpression": {
															"argumentTypes": null,
															"id": 377,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6373:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6352:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
															"typeString": "struct SushiToken.Checkpoint storage ref"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "votes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 44,
													"src": "6352:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 259,
												"id": 380,
												"nodeType": "Return",
												"src": "6345:40:0"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "4758:411:0",
										"text": " @notice Determine the prior number of votes for an account as of a block number\n @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n @param account The address of the account to check\n @param blockNumber The block number to get the vote balance at\n @return The number of votes the account had as of the given block"
									},
									"functionSelector": "782d6fe1",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 382,
												"src": "5197:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 382,
												"src": "5214:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5214:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5196:35:0"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 382,
												"src": "5279:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5278:9:0"
									},
									"scope": 637,
									"src": "5174:1218:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "6476:351:0",
										"statements": [
											{
												"assignments": [
													390
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"mutability": "mutable",
														"name": "currentDelegate",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 419,
														"src": "6486:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 389,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6486:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 394,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 391,
														"name": "_delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "6512:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 393,
													"indexExpression": {
														"argumentTypes": null,
														"id": 392,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6523:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6512:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6486:47:0"
											},
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "delegatorBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 419,
														"src": "6543:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 395,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6543:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 400,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 398,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6580:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 397,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1945,
														"src": "6570:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6570:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6543:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 401,
															"name": "_delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "6646:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 403,
														"indexExpression": {
															"argumentTypes": null,
															"id": 402,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6657:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6646:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 404,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6670:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6646:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "6646:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 408,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6711:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 409,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "6722:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 410,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "6739:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 407,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "6695:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6695:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "EmitStatement",
												"src": "6690:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 414,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "6775:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 415,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "6792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 416,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6803:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "6760:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6760:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "6760:60:0"
											}
										]
									},
									"documentation": null,
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "6417:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "6436:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6436:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6416:38:0"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6476:0:0"
									},
									"scope": 637,
									"src": "6398:429:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "6914:848:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 429,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "6928:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 430,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "6938:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6928:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 432,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "6948:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6957:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6948:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6928:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 525,
												"nodeType": "IfStatement",
												"src": "6924:832:0",
												"trueBody": {
													"id": 524,
													"nodeType": "Block",
													"src": "6960:796:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 436,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "6978:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6996:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6988:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 437,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6988:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6988:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "6978:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 479,
															"nodeType": "IfStatement",
															"src": "6974:379:0",
															"trueBody": {
																"id": 478,
																"nodeType": "Block",
																"src": "7000:353:0",
																"statements": [
																	{
																		"assignments": [
																			443
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 443,
																				"mutability": "mutable",
																				"name": "srcRepNum",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 478,
																				"src": "7065:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 442,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "7065:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 447,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 444,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 57,
																				"src": "7084:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 446,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 445,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 422,
																				"src": "7099:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7084:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7065:41:0"
																	},
																	{
																		"assignments": [
																			449
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 449,
																				"mutability": "mutable",
																				"name": "srcRepOld",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 478,
																				"src": "7124:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 448,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7124:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 463,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 452,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 450,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 443,
																					"src": "7144:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 451,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7156:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "7144:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7203:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "7144:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 453,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 52,
																							"src": "7160:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																							}
																						},
																						"id": 455,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 454,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 422,
																							"src": "7172:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7160:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																							"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																						}
																					},
																					"id": 459,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 458,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 456,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 443,
																							"src": "7180:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 457,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7192:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "7180:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7160:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																						"typeString": "struct SushiToken.Checkpoint storage ref"
																					}
																				},
																				"id": 460,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 44,
																				"src": "7160:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7124:80:0"
																	},
																	{
																		"assignments": [
																			465
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 465,
																				"mutability": "mutable",
																				"name": "srcRepNew",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 478,
																				"src": "7222:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 464,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7222:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 470,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 468,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 426,
																					"src": "7256:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 466,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 449,
																					"src": "7242:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 758,
																				"src": "7242:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7242:21:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7222:41:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 472,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 422,
																					"src": "7298:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 473,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 443,
																					"src": "7306:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 474,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 449,
																					"src": "7317:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 475,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 465,
																					"src": "7328:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 471,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 600,
																				"src": "7281:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7281:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 477,
																		"nodeType": "ExpressionStatement",
																		"src": "7281:57:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 480,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "7371:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7389:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7381:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 481,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7381:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7381:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "7371:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 523,
															"nodeType": "IfStatement",
															"src": "7367:379:0",
															"trueBody": {
																"id": 522,
																"nodeType": "Block",
																"src": "7393:353:0",
																"statements": [
																	{
																		"assignments": [
																			487
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 487,
																				"mutability": "mutable",
																				"name": "dstRepNum",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 522,
																				"src": "7458:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 486,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "7458:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 491,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 488,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 57,
																				"src": "7477:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 490,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 489,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 424,
																				"src": "7492:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7477:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7458:41:0"
																	},
																	{
																		"assignments": [
																			493
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 493,
																				"mutability": "mutable",
																				"name": "dstRepOld",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 522,
																				"src": "7517:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 492,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7517:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 507,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 494,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 487,
																					"src": "7537:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 495,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7549:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "7537:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7596:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "7537:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 497,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 52,
																							"src": "7553:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																							}
																						},
																						"id": 499,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 498,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 424,
																							"src": "7565:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7553:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																							"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																						}
																					},
																					"id": 503,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 502,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 500,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 487,
																							"src": "7573:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 501,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7585:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "7573:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7553:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																						"typeString": "struct SushiToken.Checkpoint storage ref"
																					}
																				},
																				"id": 504,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 44,
																				"src": "7553:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7517:80:0"
																	},
																	{
																		"assignments": [
																			509
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 509,
																				"mutability": "mutable",
																				"name": "dstRepNew",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 522,
																				"src": "7615:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 508,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7615:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 514,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 512,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 426,
																					"src": "7649:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 510,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 493,
																					"src": "7635:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 511,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 741,
																				"src": "7635:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7635:21:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7615:41:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 516,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 424,
																					"src": "7691:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 517,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 487,
																					"src": "7699:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 518,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 493,
																					"src": "7710:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 519,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 509,
																					"src": "7721:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 515,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 600,
																				"src": "7674:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7674:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 521,
																		"nodeType": "ExpressionStatement",
																		"src": "7674:57:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "srcRep",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 527,
												"src": "6857:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "dstRep",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 527,
												"src": "6873:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 527,
												"src": "6889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6856:48:0"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6914:0:0"
									},
									"scope": 637,
									"src": "6833:929:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "7929:526:0",
										"statements": [
											{
												"assignments": [
													539
												],
												"declarations": [
													{
														"constant": false,
														"id": 539,
														"mutability": "mutable",
														"name": "blockNumber",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 599,
														"src": "7939:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 538,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "7939:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 545,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 541,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "7967:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7967:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53555348493a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7981:55:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80202fadc1798ad44893c1a6a1a3b4079151936a969e36fa214486a4e00f3a74",
																"typeString": "literal_string \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\""
															},
															"value": "SUSHI::_writeCheckpoint: block number exceeds 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_80202fadc1798ad44893c1a6a1a3b4079151936a969e36fa214486a4e00f3a74",
																"typeString": "literal_string \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\""
															}
														],
														"id": 540,
														"name": "safe32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "7960:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint256,string memory) pure returns (uint32)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7960:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7939:98:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 546,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8052:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8067:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8052:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 549,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 52,
																		"src": "8072:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																		}
																	},
																	"id": 551,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 550,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "8084:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8072:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																		"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																	}
																},
																"id": 555,
																"indexExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 552,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "8095:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8110:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8095:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8072:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																	"typeString": "struct SushiToken.Checkpoint storage ref"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 42,
															"src": "8072:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 557,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "8126:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "8072:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8052:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 591,
													"nodeType": "Block",
													"src": "8227:155:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 572,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 52,
																			"src": "8241:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																			}
																		},
																		"id": 575,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 573,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 529,
																			"src": "8253:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8241:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																			"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																		}
																	},
																	"id": 576,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 574,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "8264:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8241:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																		"typeString": "struct SushiToken.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 578,
																			"name": "blockNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 539,
																			"src": "8291:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 579,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 535,
																			"src": "8304:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 577,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "8280:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$45_storage_ptr_$",
																			"typeString": "type(struct SushiToken.Checkpoint storage pointer)"
																		}
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8280:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$45_memory_ptr",
																		"typeString": "struct SushiToken.Checkpoint memory"
																	}
																},
																"src": "8241:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																	"typeString": "struct SushiToken.Checkpoint storage ref"
																}
															},
															"id": 582,
															"nodeType": "ExpressionStatement",
															"src": "8241:72:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 583,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 57,
																		"src": "8327:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																			"typeString": "mapping(address => uint32)"
																		}
																	},
																	"id": 585,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 584,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "8342:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8327:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 586,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "8355:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8370:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8355:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "8327:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 590,
															"nodeType": "ExpressionStatement",
															"src": "8327:44:0"
														}
													]
												},
												"id": 592,
												"nodeType": "IfStatement",
												"src": "8048:334:0",
												"trueBody": {
													"id": 571,
													"nodeType": "Block",
													"src": "8139:82:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 560,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "8153:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																					"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																				}
																			},
																			"id": 565,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 561,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 529,
																				"src": "8165:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8153:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																				"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																			}
																		},
																		"id": 566,
																		"indexExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 562,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 531,
																				"src": "8176:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8191:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "8176:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8153:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																			"typeString": "struct SushiToken.Checkpoint storage ref"
																		}
																	},
																	"id": 567,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "8153:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 568,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "8202:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8153:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 570,
															"nodeType": "ExpressionStatement",
															"src": "8153:57:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 594,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8418:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 595,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "8429:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 596,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "8439:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 593,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "8397:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8397:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "EmitStatement",
												"src": "8392:56:0"
											}
										]
									},
									"documentation": null,
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 600,
												"src": "7803:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "nCheckpoints",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 600,
												"src": "7830:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 530,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "7830:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "oldVotes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 600,
												"src": "7859:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "newVotes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 600,
												"src": "7885:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7793:114:0"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7929:0:0"
									},
									"scope": 637,
									"src": "7768:687:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "8544:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 610,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "8562:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8566:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8569:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8566:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "8562:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 615,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "8573:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 609,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8554:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8554:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "8554:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 620,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "8610:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8603:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 618,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "8603:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8603:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 608,
												"id": 622,
												"nodeType": "Return",
												"src": "8596:16:0"
											}
										]
									},
									"documentation": null,
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "n",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 624,
												"src": "8477:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8477:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 624,
												"src": "8485:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 603,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8485:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8476:36:0"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 624,
												"src": "8536:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 606,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8536:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8535:8:0"
									},
									"scope": 637,
									"src": "8461:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "8676:98:0",
										"statements": [
											{
												"assignments": [
													630
												],
												"declarations": [
													{
														"constant": false,
														"id": 630,
														"mutability": "mutable",
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 635,
														"src": "8686:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 629,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8686:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 631,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8686:15:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8720:24:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8722:20:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "8733:7:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8733:9:0"
															},
															"variableNames": [
																{
																	"name": "chainId",
																	"nodeType": "YulIdentifier",
																	"src": "8722:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 630,
														"isOffset": false,
														"isSlot": false,
														"src": "8722:7:0",
														"valueSize": 1
													}
												],
												"id": 632,
												"nodeType": "InlineAssembly",
												"src": "8711:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 633,
													"name": "chainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 630,
													"src": "8760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 628,
												"id": 634,
												"nodeType": "Return",
												"src": "8753:14:0"
											}
										]
									},
									"documentation": null,
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8644:2:0"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 636,
												"src": "8670:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8670:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8669:6:0"
									},
									"scope": 637,
									"src": "8625:149:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 638,
							"src": "82:8694:0"
						}
					],
					"src": "0:8776:0"
				},
				"id": 0
			},
			"PolarAI/interface.sol": {
				"ast": {
					"absolutePath": "PolarAI/interface.sol",
					"exportedSymbols": {
						"Address": [
							1111
						],
						"Context": [
							1736
						],
						"ERC20": [
							2345
						],
						"EnumerableSet": [
							1714
						],
						"IBEP20": [
							2445
						],
						"IERC20": [
							714
						],
						"Ownable": [
							1843
						],
						"SafeERC20": [
							1320
						],
						"SafeMath": [
							908
						]
					},
					"id": 2446,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 639,
								"nodeType": "StructuredDocumentation",
								"src": "164:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 714,
							"linearizedBaseContracts": [
								714
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "258:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 645,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:2:1"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 645,
												"src": "375:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "374:9:1"
									},
									"scope": 714,
									"src": "329:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "390:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 653,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 653,
												"src": "486:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "485:17:1"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 653,
												"src": "526:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "525:9:1"
									},
									"scope": 714,
									"src": "467:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "541:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 663,
												"src": "773:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 663,
												"src": "792:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "772:35:1"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 663,
												"src": "826:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "826:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "825:6:1"
									},
									"scope": 714,
									"src": "755:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "838:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 673,
												"src": "1126:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1126:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 673,
												"src": "1141:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1125:32:1"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 673,
												"src": "1181:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1180:9:1"
									},
									"scope": 714,
									"src": "1107:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "1196:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 683,
												"src": "1860:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 683,
												"src": "1877:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1859:33:1"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 683,
												"src": "1911:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1911:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1910:6:1"
									},
									"scope": 714,
									"src": "1843:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "1923:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 695,
												"src": "2246:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 695,
												"src": "2262:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 695,
												"src": "2281:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2281:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2245:51:1"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 695,
												"src": "2315:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2315:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2314:6:1"
									},
									"scope": 714,
									"src": "2224:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "2327:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 704,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 704,
												"src": "2505:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2505:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 704,
												"src": "2527:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2527:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 704,
												"src": "2547:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2504:57:1"
									},
									"src": "2490:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "2568:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 713,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 713,
												"src": "2736:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 713,
												"src": "2759:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 713,
												"src": "2784:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2784:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2735:63:1"
									},
									"src": "2721:78:1"
								}
							],
							"scope": 2446,
							"src": "235:2566:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 715,
								"nodeType": "StructuredDocumentation",
								"src": "2856:563:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 908,
							"linearizedBaseContracts": [
								908
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "3739:109:1",
										"statements": [
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 740,
														"src": "3749:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 725,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3749:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 730,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 727,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "3761:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 728,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "3765:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3761:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3749:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 732,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "3784:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 733,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "3789:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3784:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3792:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 731,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3776:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3776:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "3776:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 738,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 726,
													"src": "3840:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 724,
												"id": 739,
												"nodeType": "Return",
												"src": "3833:8:1"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "3443:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 741,
												"src": "3685:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 741,
												"src": "3696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3684:22:1"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 741,
												"src": "3730:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3730:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3729:9:1"
									},
									"scope": 908,
									"src": "3672:176:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "4186:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 752,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "4207:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 753,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "4210:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4213:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 751,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															758,
															786
														],
														"referencedDeclaration": 786,
														"src": "4203:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4203:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 750,
												"id": 756,
												"nodeType": "Return",
												"src": "4196:50:1"
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "3854:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "4132:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4132:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "4143:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4131:22:1"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "4177:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4177:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4176:9:1"
									},
									"scope": 908,
									"src": "4119:134:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "4639:92:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 771,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "4657:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 772,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "4662:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4657:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 774,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "4665:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 770,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4649:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4649:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "4649:29:1"
											},
											{
												"assignments": [
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 785,
														"src": "4688:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 777,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4688:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 782,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 779,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "4700:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 780,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "4704:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4700:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4688:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 783,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 778,
													"src": "4723:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 769,
												"id": 784,
												"nodeType": "Return",
												"src": "4716:8:1"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "4259:280:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 786,
												"src": "4557:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4557:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 786,
												"src": "4568:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4568:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 786,
												"src": "4579:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 764,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4579:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4556:50:1"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 786,
												"src": "4630:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4630:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4629:9:1"
									},
									"scope": 908,
									"src": "4544:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "5045:392:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 796,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "5277:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5282:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5277:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 802,
												"nodeType": "IfStatement",
												"src": "5273:45:1",
												"trueBody": {
													"id": 801,
													"nodeType": "Block",
													"src": "5285:33:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5306:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 795,
															"id": 800,
															"nodeType": "Return",
															"src": "5299:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													804
												],
												"declarations": [
													{
														"constant": false,
														"id": 804,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 820,
														"src": "5328:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 803,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 808,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 805,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "5340:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 806,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "5344:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5340:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5328:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 810,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "5363:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 811,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "5367:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5363:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 813,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "5372:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5363:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5375:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 809,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5355:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5355:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "5355:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 818,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 804,
													"src": "5429:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 795,
												"id": 819,
												"nodeType": "Return",
												"src": "5422:8:1"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "4737:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 821,
												"src": "4991:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4991:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 821,
												"src": "5002:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5002:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4990:22:1"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 821,
												"src": "5036:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5035:9:1"
									},
									"scope": 908,
									"src": "4978:459:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "5966:63:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 832,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "5987:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 833,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "5990:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 831,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															838,
															866
														],
														"referencedDeclaration": 866,
														"src": "5983:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5983:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 830,
												"id": 836,
												"nodeType": "Return",
												"src": "5976:46:1"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "5443:451:1",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 838,
												"src": "5912:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5912:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 838,
												"src": "5923:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5923:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5911:22:1"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 838,
												"src": "5957:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5957:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5956:9:1"
									},
									"scope": 908,
									"src": "5899:130:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "6606:177:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 851,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "6624:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6628:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6624:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 854,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "6631:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 850,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6616:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6616:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "6616:28:1"
											},
											{
												"assignments": [
													858
												],
												"declarations": [
													{
														"constant": false,
														"id": 858,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 865,
														"src": "6654:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 857,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6654:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 862,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 859,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "6666:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 860,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "6670:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6666:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6654:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 863,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 858,
													"src": "6775:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 849,
												"id": 864,
												"nodeType": "Return",
												"src": "6768:8:1"
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "6035:471:1",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 866,
												"src": "6524:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6524:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 866,
												"src": "6535:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6535:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 866,
												"src": "6546:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 844,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6546:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6523:50:1"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 866,
												"src": "6597:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6597:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6596:9:1"
									},
									"scope": 908,
									"src": "6511:272:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "7301:61:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 877,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "7322:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 878,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "7325:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7328:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 876,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															883,
															907
														],
														"referencedDeclaration": 907,
														"src": "7318:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 875,
												"id": 881,
												"nodeType": "Return",
												"src": "7311:44:1"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "6789:440:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 883,
												"src": "7247:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 883,
												"src": "7258:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7258:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7246:22:1"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 883,
												"src": "7292:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7292:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7291:9:1"
									},
									"scope": 908,
									"src": "7234:128:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "7928:68:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 896,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "7946:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7951:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7946:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 899,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "7954:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 895,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7938:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7938:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "7938:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 902,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "7984:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 903,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "7988:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7984:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 894,
												"id": 905,
												"nodeType": "Return",
												"src": "7977:12:1"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "7368:460:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 907,
												"src": "7846:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 907,
												"src": "7857:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7857:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 907,
												"src": "7868:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 889,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7868:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7845:50:1"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 907,
												"src": "7919:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7919:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7918:9:1"
									},
									"scope": 908,
									"src": "7833:163:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2446,
							"src": "3420:4578:1"
						},
						{
							"id": 909,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "8054:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 910,
								"nodeType": "StructuredDocumentation",
								"src": "8079:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1111,
							"linearizedBaseContracts": [
								1111
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "8805:544:1",
										"statements": [
											{
												"assignments": [
													919
												],
												"declarations": [
													{
														"constant": false,
														"id": 919,
														"mutability": "mutable",
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 935,
														"src": "9057:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 918,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:16:1"
											},
											{
												"assignments": [
													922
												],
												"declarations": [
													{
														"constant": false,
														"id": 922,
														"mutability": "mutable",
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 935,
														"src": "9083:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 921,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9083:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 924,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9105:66:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9083:88:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9246:36:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9248:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "9272:7:1"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "9260:11:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9260:20:1"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "9248:8:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 913,
														"isOffset": false,
														"isSlot": false,
														"src": "9272:7:1",
														"valueSize": 1
													},
													{
														"declaration": 919,
														"isOffset": false,
														"isSlot": false,
														"src": "9248:8:1",
														"valueSize": 1
													}
												],
												"id": 925,
												"nodeType": "InlineAssembly",
												"src": "9237:45:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 926,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "9299:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 927,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "9311:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "9299:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 929,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "9326:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9338:3:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "9326:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9299:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 933,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9298:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 917,
												"id": 934,
												"nodeType": "Return",
												"src": "9291:51:1"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "8169:565:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 936,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8758:17:1"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 936,
												"src": "8799:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 915,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8799:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8798:6:1"
									},
									"scope": 1111,
									"src": "8739:610:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "10337:320:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 947,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "10363:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1111",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1111",
																				"typeString": "library Address"
																			}
																		],
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10355:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 945,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10355:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10355:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10355:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 950,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "10380:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10355:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10388:31:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 944,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10347:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10347:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "10347:73:1"
											},
											{
												"assignments": [
													956,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 956,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 969,
														"src": "10509:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 955,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10509:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 963,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10559:2:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 957,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "10527:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10527:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 959,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "10550:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10527:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10527:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10508:54:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 965,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "10580:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10589:60:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 964,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10572:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10572:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "10572:78:1"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "9355:906:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 970,
												"src": "10285:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10285:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 970,
												"src": "10312:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10312:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10284:43:1"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10337:0:1"
									},
									"scope": 1111,
									"src": "10266:391:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "11487:82:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 981,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "11515:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 982,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "11523:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11529:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 980,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															987,
															1007
														],
														"referencedDeclaration": 1007,
														"src": "11502:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11502:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 979,
												"id": 985,
												"nodeType": "Return",
												"src": "11495:67:1"
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "10663:730:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 987,
												"src": "11420:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11420:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 987,
												"src": "11436:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 974,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11436:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11419:35:1"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 987,
												"src": "11473:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 977,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11473:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11472:14:1"
									},
									"scope": 1111,
									"src": "11398:171:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "11908:77:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1000,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "11948:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1001,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "11956:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11962:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 1003,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "11965:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 999,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "11925:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11925:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 998,
												"id": 1005,
												"nodeType": "Return",
												"src": "11918:60:1"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "11575:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1007,
												"src": "11813:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1007,
												"src": "11829:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 991,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11829:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1007,
												"src": "11848:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 993,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11848:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11812:63:1"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1007,
												"src": "11894:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11894:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11893:14:1"
									},
									"scope": 1111,
									"src": "11791:194:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "12460:111:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1020,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "12499:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1021,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "12507:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1022,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "12513:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12520:43:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1019,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1027,
															1060
														],
														"referencedDeclaration": 1060,
														"src": "12477:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12477:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1025,
												"nodeType": "Return",
												"src": "12470:94:1"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "11991:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1027,
												"src": "12378:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12378:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1027,
												"src": "12394:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1011,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12394:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1027,
												"src": "12413:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12413:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12377:50:1"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1027,
												"src": "12446:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1016,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12446:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12445:14:1"
									},
									"scope": 1111,
									"src": "12347:224:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "12960:172:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1044,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "12986:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1111",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1111",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12978:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1042,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12978:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12978:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12978:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1047,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "13003:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12978:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13010:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1041,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12970:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12970:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "12970:81:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1053,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "13091:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1054,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "13099:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1055,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "13105:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1056,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "13112:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1052,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "13068:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13068:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1040,
												"id": 1058,
												"nodeType": "Return",
												"src": "13061:64:1"
											}
										]
									},
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "12577:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1060,
												"src": "12850:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1060,
												"src": "12866:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12866:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1060,
												"src": "12885:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12885:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1060,
												"src": "12900:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1035,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12900:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12849:78:1"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1060,
												"src": "12946:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1038,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12946:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12945:14:1"
									},
									"scope": 1111,
									"src": "12819:313:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "13282:814:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1075,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "13311:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1074,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "13300:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13300:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13320:31:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1073,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13292:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13292:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "13292:60:1"
											},
											{
												"assignments": [
													1081,
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1081,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1109,
														"src": "13423:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1080,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13423:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1109,
														"src": "13437:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1082,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13437:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1090,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1088,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "13495:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1084,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "13464:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13464:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1086,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "13484:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13464:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13464:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13422:78:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1091,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1081,
													"src": "13514:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "13571:519:1",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1095,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "13655:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13655:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13675:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13655:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1105,
																"nodeType": "Block",
																"src": "14027:53:1",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1102,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1068,
																					"src": "14052:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1101,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "14045:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14045:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1104,
																		"nodeType": "ExpressionStatement",
																		"src": "14045:20:1"
																	}
																]
															},
															"id": 1106,
															"nodeType": "IfStatement",
															"src": "13651:429:1",
															"trueBody": {
																"id": 1100,
																"nodeType": "Block",
																"src": "13678:343:1",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "13862:145:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "13884:40:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "13913:10:1"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "13907:5:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13907:17:1"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "13888:15:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "13956:2:1",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "13960:10:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "13952:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13952:19:1"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "13973:15:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "13945:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13945:44:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "13945:44:1"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1083,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13913:10:1",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1083,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13960:10:1",
																				"valueSize": 1
																			}
																		],
																		"id": 1099,
																		"nodeType": "InlineAssembly",
																		"src": "13853:154:1"
																	}
																]
															}
														}
													]
												},
												"id": 1108,
												"nodeType": "IfStatement",
												"src": "13510:580:1",
												"trueBody": {
													"id": 1094,
													"nodeType": "Block",
													"src": "13523:42:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1092,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "13544:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1072,
															"id": 1093,
															"nodeType": "Return",
															"src": "13537:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1110,
												"src": "13170:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13170:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1110,
												"src": "13186:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1063,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13186:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1110,
												"src": "13205:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1110,
												"src": "13223:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1067,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13223:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13169:81:1"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1110,
												"src": "13268:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1070,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13268:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13267:14:1"
									},
									"scope": 1111,
									"src": "13138:958:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2446,
							"src": "8147:5951:1"
						},
						{
							"id": 1112,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "14162:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1113,
								"nodeType": "StructuredDocumentation",
								"src": "14190:457:1",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1320,
							"linearizedBaseContracts": [
								1320
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1116,
									"libraryName": {
										"contractScope": null,
										"id": 1114,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 908,
										"src": "14678:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$908",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "14672:27:1",
									"typeName": {
										"id": 1115,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14691:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1119,
									"libraryName": {
										"contractScope": null,
										"id": 1117,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1111,
										"src": "14710:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1111",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "14704:26:1",
									"typeName": {
										"id": 1118,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "14722:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "14808:103:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1129,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "14838:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$714",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1132,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1121,
																			"src": "14868:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$714",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 663,
																		"src": "14868:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "14868:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1135,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "14893:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1136,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1125,
																	"src": "14897:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1130,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "14845:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "14845:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14845:58:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$714",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1128,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "14818:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$714_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14818:86:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "14818:86:1"
											}
										]
									},
									"documentation": null,
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1141,
												"src": "14758:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$714",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1120,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 714,
													"src": "14758:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$714",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1141,
												"src": "14772:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14772:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1141,
												"src": "14784:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14784:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14757:41:1"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14808:0:1"
									},
									"scope": 1320,
									"src": "14736:175:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "15007:113:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1153,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "15037:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$714",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1156,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1143,
																			"src": "15067:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$714",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 695,
																		"src": "15067:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15067:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1159,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "15096:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1160,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "15102:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1161,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "15106:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1154,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "15044:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15044:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15044:68:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$714",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1152,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "15017:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$714_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15017:96:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "15017:96:1"
											}
										]
									},
									"documentation": null,
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1166,
												"src": "14943:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$714",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1142,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 714,
													"src": "14943:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$714",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1166,
												"src": "14957:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14957:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1166,
												"src": "14971:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14971:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1166,
												"src": "14983:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14983:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14942:55:1"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15007:0:1"
									},
									"scope": 1320,
									"src": "14917:203:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "15456:537:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1177,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1173,
																			"src": "15745:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15754:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "15745:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1180,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15744:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1185,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "15785:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1320",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1320",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1184,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "15777:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1183,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "15777:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1186,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15777:13:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1187,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1171,
																					"src": "15792:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1181,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1169,
																					"src": "15761:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$714",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1182,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 673,
																				"src": "15761:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15761:39:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15804:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "15761:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1191,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15760:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15744:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15820:56:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15736:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15736:150:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "15736:150:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1197,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "15916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$714",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1200,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1169,
																			"src": "15946:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$714",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 683,
																		"src": "15946:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15946:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1203,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "15970:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1204,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "15979:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1198,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "15923:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15923:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15923:62:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$714",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1196,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "15896:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$714_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15896:90:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "15896:90:1"
											}
										]
									},
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "15126:249:1",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1209,
												"src": "15401:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$714",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1168,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 714,
													"src": "15401:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$714",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1209,
												"src": "15415:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1209,
												"src": "15432:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15432:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15400:46:1"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15456:0:1"
									},
									"scope": 1320,
									"src": "15380:613:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "16085:197:1",
										"statements": [
											{
												"assignments": [
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1244,
														"src": "16095:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16095:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1231,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1229,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "16162:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1224,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "16142:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1320",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1320",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16134:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1222,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16134:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16134:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1226,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "16149:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1220,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "16118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$714",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 673,
																"src": "16118:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16118:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 741,
														"src": "16118:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16118:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16095:73:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1233,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "16198:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$714",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1236,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1211,
																			"src": "16228:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$714",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 683,
																		"src": "16228:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16228:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1239,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "16252:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1240,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1219,
																	"src": "16261:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1234,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "16205:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16205:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16205:69:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$714",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1232,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "16178:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$714_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16178:97:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "16178:97:1"
											}
										]
									},
									"documentation": null,
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1245,
												"src": "16030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$714",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1210,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 714,
													"src": "16030:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$714",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1245,
												"src": "16044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1245,
												"src": "16061:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16061:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16029:46:1"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16085:0:1"
									},
									"scope": 1320,
									"src": "15999:283:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "16374:242:1",
										"statements": [
											{
												"assignments": [
													1255
												],
												"declarations": [
													{
														"constant": false,
														"id": 1255,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1281,
														"src": "16384:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1254,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16384:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1268,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1265,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "16451:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16458:43:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1260,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "16431:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1320",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1320",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16423:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1258,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16423:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16423:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1262,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "16438:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1256,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1247,
																	"src": "16407:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$714",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 673,
																"src": "16407:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16407:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 786,
														"src": "16407:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16407:95:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16384:118:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1270,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "16532:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$714",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1273,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1247,
																			"src": "16562:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$714",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 683,
																		"src": "16562:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16562:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1276,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "16586:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1277,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "16595:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1271,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "16539:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16539:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16539:69:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$714",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1269,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "16512:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$714_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16512:97:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "16512:97:1"
											}
										]
									},
									"documentation": null,
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1282,
												"src": "16319:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$714",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1246,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 714,
													"src": "16319:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$714",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1282,
												"src": "16333:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1282,
												"src": "16350:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16318:46:1"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16374:0:1"
									},
									"scope": 1320,
									"src": "16288:328:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "17069:681:1",
										"statements": [
											{
												"assignments": [
													1291
												],
												"declarations": [
													{
														"constant": false,
														"id": 1291,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1318,
														"src": "17418:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1290,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17418:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1300,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1297,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "17472:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17478:34:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1294,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1285,
																	"src": "17452:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$714",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$714",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17444:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1292,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17444:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17444:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1007,
														"src": "17444:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17444:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17418:95:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1301,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "17527:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "17527:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17547:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17527:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1317,
												"nodeType": "IfStatement",
												"src": "17523:221:1",
												"trueBody": {
													"id": 1316,
													"nodeType": "Block",
													"src": "17550:194:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1308,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1291,
																				"src": "17667:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 1310,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17680:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1309,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "17680:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 1311,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "17679:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1306,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "17656:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "17656:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17656:30:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17688:44:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1305,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "17648:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17648:85:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1315,
															"nodeType": "ExpressionStatement",
															"src": "17648:85:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "16622:372:1",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1319,
												"src": "17028:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$714",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1284,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 714,
													"src": "17028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$714",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1319,
												"src": "17042:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17042:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17027:33:1"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17069:0:1"
									},
									"scope": 1320,
									"src": "16999:751:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2446,
							"src": "14648:3104:1"
						},
						{
							"id": 1321,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17814:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1322,
								"nodeType": "StructuredDocumentation",
								"src": "17839:665:1",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`\n (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 1714,
							"linearizedBaseContracts": [
								1714
							],
							"name": "EnumerableSet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1330,
									"members": [
										{
											"constant": false,
											"id": 1325,
											"mutability": "mutable",
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1330,
											"src": "19027:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 1323,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19027:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1324,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "19027:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1329,
											"mutability": "mutable",
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1330,
											"src": "19178:37:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1328,
												"keyType": {
													"id": 1326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "19178:28:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19198:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nodeType": "StructDefinition",
									"scope": 1714,
									"src": "18973:249:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "19461:335:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "19475:22:1",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1341,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "19486:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"argumentTypes": null,
																"id": 1342,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "19491:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1340,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "19476:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1330_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19476:21:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1368,
													"nodeType": "Block",
													"src": "19753:37:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19774:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1339,
															"id": 1367,
															"nodeType": "Return",
															"src": "19767:12:1"
														}
													]
												},
												"id": 1369,
												"nodeType": "IfStatement",
												"src": "19471:319:1",
												"trueBody": {
													"id": 1365,
													"nodeType": "Block",
													"src": "19499:248:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1350,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "19530:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1345,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1333,
																			"src": "19513:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1325,
																		"src": "19513:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "19513:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19513:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1352,
															"nodeType": "ExpressionStatement",
															"src": "19513:23:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1353,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1333,
																			"src": "19671:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1356,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1329,
																		"src": "19671:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1357,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1355,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "19684:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "19671:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1358,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1333,
																			"src": "19693:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1325,
																		"src": "19693:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "19693:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19671:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1362,
															"nodeType": "ExpressionStatement",
															"src": "19671:40:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19732:4:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1339,
															"id": 1364,
															"nodeType": "Return",
															"src": "19725:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "19228:159:1",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1371,
												"src": "19406:15:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1332,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1330,
													"src": "19406:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1371,
												"src": "19423:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1334,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19405:32:1"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1371,
												"src": "19455:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19455:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19454:6:1"
									},
									"scope": 1714,
									"src": "19392:404:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "20036:1440:1",
										"statements": [
											{
												"assignments": [
													1382
												],
												"declarations": [
													{
														"constant": false,
														"id": 1382,
														"mutability": "mutable",
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1450,
														"src": "20146:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1381,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20146:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1387,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1383,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "20167:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1329,
														"src": "20167:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1386,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1385,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1376,
														"src": "20180:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20167:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20146:40:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1388,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "20201:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20215:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20201:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1448,
													"nodeType": "Block",
													"src": "21433:37:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21454:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1380,
															"id": 1447,
															"nodeType": "Return",
															"src": "21447:12:1"
														}
													]
												},
												"id": 1449,
												"nodeType": "IfStatement",
												"src": "20197:1273:1",
												"trueBody": {
													"id": 1445,
													"nodeType": "Block",
													"src": "20218:1209:1",
													"statements": [
														{
															"assignments": [
																1392
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1392,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1445,
																	"src": "20558:21:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1391,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20558:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1396,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1393,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "20582:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20595:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20582:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20558:38:1"
														},
														{
															"assignments": [
																1398
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1398,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1445,
																	"src": "20610:17:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1397,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20610:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1404,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1399,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1374,
																			"src": "20630:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1325,
																		"src": "20630:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "20630:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20651:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20630:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20610:42:1"
														},
														{
															"assignments": [
																1406
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1406,
																	"mutability": "mutable",
																	"name": "lastvalue",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1445,
																	"src": "20892:17:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1405,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "20892:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1411,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1407,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1374,
																		"src": "20912:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 1408,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1325,
																	"src": "20912:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 1410,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1409,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "20924:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20912:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20892:42:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1412,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1374,
																			"src": "21026:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1325,
																		"src": "21026:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1416,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1414,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1392,
																		"src": "21038:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "21026:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1417,
																	"name": "lastvalue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "21055:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "21026:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1419,
															"nodeType": "ExpressionStatement",
															"src": "21026:38:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1420,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1374,
																			"src": "21130:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1423,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1329,
																		"src": "21130:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1424,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1422,
																		"name": "lastvalue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1406,
																		"src": "21143:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "21130:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1425,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1392,
																		"src": "21156:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21172:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "21156:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21130:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1429,
															"nodeType": "ExpressionStatement",
															"src": "21130:43:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1430,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1374,
																			"src": "21279:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1433,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1325,
																		"src": "21279:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "21279:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21279:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1436,
															"nodeType": "ExpressionStatement",
															"src": "21279:17:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "21364:26:1",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1437,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1374,
																			"src": "21371:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1329,
																		"src": "21371:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1440,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1439,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1376,
																		"src": "21384:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "21371:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1442,
															"nodeType": "ExpressionStatement",
															"src": "21364:26:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21412:4:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1380,
															"id": 1444,
															"nodeType": "Return",
															"src": "21405:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "19802:157:1",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1451,
												"src": "19981:15:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1373,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1330,
													"src": "19981:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1451,
												"src": "19998:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1375,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19998:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19980:32:1"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1451,
												"src": "20030:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20030:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20029:6:1"
									},
									"scope": 1714,
									"src": "19964:1512:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "21636:48:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1461,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1454,
																"src": "21653:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1329,
															"src": "21653:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1464,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1463,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "21666:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "21653:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21676:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21653:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1460,
												"id": 1467,
												"nodeType": "Return",
												"src": "21646:31:1"
											}
										]
									},
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "21482:70:1",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1469,
												"src": "21576:15:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1453,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1330,
													"src": "21576:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1469,
												"src": "21593:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1455,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21593:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21575:32:1"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1469,
												"src": "21630:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21630:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21629:6:1"
									},
									"scope": 1714,
									"src": "21557:127:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "21830:42:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1477,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "21847:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1325,
														"src": "21847:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "21847:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1476,
												"id": 1480,
												"nodeType": "Return",
												"src": "21840:25:1"
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "21690:70:1",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1482,
												"src": "21782:15:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1471,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1330,
													"src": "21782:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21781:17:1"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1482,
												"src": "21821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21820:9:1"
									},
									"scope": 1714,
									"src": "21765:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "22280:125:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1493,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1485,
																		"src": "22298:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 1494,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1325,
																	"src": "22298:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "22298:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1496,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "22319:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22298:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22326:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															},
															"value": "EnumerableSet: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															}
														],
														"id": 1492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "22290:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22290:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1500,
												"nodeType": "ExpressionStatement",
												"src": "22290:73:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1501,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "22380:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1325,
														"src": "22380:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1504,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1503,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "22392:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "22380:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1491,
												"id": 1505,
												"nodeType": "Return",
												"src": "22373:25:1"
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "21877:322:1",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1507,
												"src": "22217:15:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1484,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1330,
													"src": "22217:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1507,
												"src": "22234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22216:32:1"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1507,
												"src": "22271:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1489,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22271:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22270:9:1"
									},
									"scope": 1714,
									"src": "22204:201:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1510,
									"members": [
										{
											"constant": false,
											"id": 1509,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1510,
											"src": "22458:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 1508,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1330,
												"src": "22458:3:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 1714,
									"src": "22430:45:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "22721:65:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1521,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "22743:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1510_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1509,
															"src": "22743:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1330_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1527,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1515,
																			"src": "22771:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22763:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1525,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "22763:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22763:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22755:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1523,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "22755:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22755:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1330_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1520,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "22738:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1330_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22738:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1519,
												"id": 1531,
												"nodeType": "Return",
												"src": "22731:48:1"
											}
										]
									},
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "22481:159:1",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1533,
												"src": "22658:22:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1510_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1512,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1510,
													"src": "22658:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1510_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1533,
												"src": "22682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22657:39:1"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1533,
												"src": "22715:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1517,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22715:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22714:6:1"
									},
									"scope": 1714,
									"src": "22645:141:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "23033:68:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1544,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1536,
																"src": "23058:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1510_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1509,
															"src": "23058:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1330_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1550,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "23086:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "23078:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1548,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "23078:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23078:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23070:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1546,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "23070:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23070:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1330_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1543,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "23050:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1330_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23050:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1542,
												"id": 1554,
												"nodeType": "Return",
												"src": "23043:51:1"
											}
										]
									},
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "22792:157:1",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1556,
												"src": "22970:22:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1510_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1535,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1510,
													"src": "22970:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1510_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1556,
												"src": "22994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22969:39:1"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1556,
												"src": "23027:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1540,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23027:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23026:6:1"
									},
									"scope": 1714,
									"src": "22954:147:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "23268:70:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1567,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "23295:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1510_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1509,
															"src": "23295:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1330_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1573,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1561,
																			"src": "23323:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "23315:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1571,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "23315:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23315:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23307:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1569,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "23307:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23307:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1330_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1566,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "23285:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1330_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23285:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1565,
												"id": 1577,
												"nodeType": "Return",
												"src": "23278:53:1"
											}
										]
									},
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "23107:70:1",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1579,
												"src": "23200:22:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1510_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1558,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1510,
													"src": "23200:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1510_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1579,
												"src": "23224:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23224:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23199:39:1"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1579,
												"src": "23262:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1563,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23262:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23261:6:1"
									},
									"scope": 1714,
									"src": "23182:156:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1592,
										"nodeType": "Block",
										"src": "23491:43:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1588,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "23516:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1510_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1509,
															"src": "23516:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1330_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1330_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1587,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "23508:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1330_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23508:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1586,
												"id": 1591,
												"nodeType": "Return",
												"src": "23501:26:1"
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "23344:70:1",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1593,
												"src": "23435:22:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1510_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1581,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1510,
													"src": "23435:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1510_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23434:24:1"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1593,
												"src": "23482:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23482:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23481:9:1"
									},
									"scope": 1714,
									"src": "23419:115:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "23949:64:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1608,
																				"name": "set",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1596,
																				"src": "23986:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AddressSet_$1510_storage_ptr",
																					"typeString": "struct EnumerableSet.AddressSet storage pointer"
																				}
																			},
																			"id": 1609,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "_inner",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1509,
																			"src": "23986:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1330_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1610,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1598,
																			"src": "23998:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_Set_$1330_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1607,
																		"name": "_at",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1507,
																		"src": "23982:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1330_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																			"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																		}
																	},
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23982:22:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23974:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1605,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23974:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23974:31:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "23966:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1603,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23966:7:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23966:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1602,
												"id": 1614,
												"nodeType": "Return",
												"src": "23959:47:1"
											}
										]
									},
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "23539:322:1",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1616,
												"src": "23878:22:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1510_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1595,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1510,
													"src": "23878:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1510_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1616,
												"src": "23902:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23902:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23877:39:1"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1616,
												"src": "23940:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23939:9:1"
									},
									"scope": 1714,
									"src": "23866:147:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1619,
									"members": [
										{
											"constant": false,
											"id": 1618,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1619,
											"src": "24061:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 1617,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1330,
												"src": "24061:3:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1330_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nodeType": "StructDefinition",
									"scope": 1714,
									"src": "24036:42:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1638,
										"nodeType": "Block",
										"src": "24321:56:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1630,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "24343:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1619_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1618,
															"src": "24343:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1330_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1634,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "24363:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24355:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1632,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "24355:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24355:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1330_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1629,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "24338:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1330_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24338:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1628,
												"id": 1637,
												"nodeType": "Return",
												"src": "24331:39:1"
											}
										]
									},
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "24084:159:1",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1639,
												"src": "24261:19:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1619_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1621,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1619,
													"src": "24261:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1619_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1639,
												"src": "24282:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24282:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24260:36:1"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1639,
												"src": "24315:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1626,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24315:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24314:6:1"
									},
									"scope": 1714,
									"src": "24248:129:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "24621:59:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1650,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "24646:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1619_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1618,
															"src": "24646:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1330_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1654,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1644,
																	"src": "24666:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24658:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1652,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "24658:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24658:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1330_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1649,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "24638:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1330_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24638:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1648,
												"id": 1657,
												"nodeType": "Return",
												"src": "24631:42:1"
											}
										]
									},
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "24383:157:1",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1659,
												"src": "24561:19:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1619_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1641,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1619,
													"src": "24561:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1619_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1659,
												"src": "24582:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24560:36:1"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1659,
												"src": "24615:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1646,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24615:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24614:6:1"
									},
									"scope": 1714,
									"src": "24545:135:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "24844:61:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1670,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1662,
																"src": "24871:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1619_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1618,
															"src": "24871:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1330_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1674,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "24891:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24883:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1672,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "24883:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24883:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1330_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1669,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "24861:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1330_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24861:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1668,
												"id": 1677,
												"nodeType": "Return",
												"src": "24854:44:1"
											}
										]
									},
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "24686:70:1",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1679,
												"src": "24779:19:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1619_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1661,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1619,
													"src": "24779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1619_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1679,
												"src": "24800:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24800:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24778:36:1"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1679,
												"src": "24838:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1666,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24838:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24837:6:1"
									},
									"scope": 1714,
									"src": "24761:144:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "25055:43:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1688,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "25080:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1619_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1689,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1618,
															"src": "25080:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1330_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1330_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1687,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "25072:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1330_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25072:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1686,
												"id": 1691,
												"nodeType": "Return",
												"src": "25065:26:1"
											}
										]
									},
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "24911:70:1",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1693,
												"src": "25002:19:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1619_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1681,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1619,
													"src": "25002:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1619_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25001:21:1"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1693,
												"src": "25046:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25046:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25045:9:1"
									},
									"scope": 1714,
									"src": "24986:112:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "25510:55:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1706,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "25539:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1619_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1618,
																	"src": "25539:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1330_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1708,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1698,
																	"src": "25551:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1330_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1705,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "25535:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1330_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25535:22:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1704,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "25527:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1703,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25527:7:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25527:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1702,
												"id": 1711,
												"nodeType": "Return",
												"src": "25520:38:1"
											}
										]
									},
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "25103:322:1",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1713,
												"src": "25442:19:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1619_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1695,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1619,
													"src": "25442:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1619_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1713,
												"src": "25463:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25463:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25441:36:1"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1713,
												"src": "25501:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25501:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25500:9:1"
									},
									"scope": 1714,
									"src": "25430:135:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2446,
							"src": "18505:7062:1"
						},
						{
							"id": 1715,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "25621:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1736,
							"linearizedBaseContracts": [
								1736
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "26248:34:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1720,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "26265:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "26265:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1719,
												"id": 1722,
												"nodeType": "Return",
												"src": "26258:17:1"
											}
										]
									},
									"documentation": null,
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26197:2:1"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1724,
												"src": "26231:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26231:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26230:17:1"
									},
									"scope": 1736,
									"src": "26178:104:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "26353:165:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1729,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "26363:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1736",
														"typeString": "contract Context"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "26363:4:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1731,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "26503:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "26503:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1728,
												"id": 1733,
												"nodeType": "Return",
												"src": "26496:15:1"
											}
										]
									},
									"documentation": null,
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26305:2:1"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1735,
												"src": "26339:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26339:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26338:14:1"
									},
									"scope": 1736,
									"src": "26288:230:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2446,
							"src": "26146:374:1"
						},
						{
							"id": 1737,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "26577:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1739,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1736,
										"src": "27117:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1736",
											"typeString": "contract Context"
										}
									},
									"id": 1740,
									"nodeType": "InheritanceSpecifier",
									"src": "27117:7:1"
								}
							],
							"contractDependencies": [
								1736
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1738,
								"nodeType": "StructuredDocumentation",
								"src": "26602:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1843,
							"linearizedBaseContracts": [
								1843,
								1736
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1742,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1843,
									"src": "27131:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1741,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "27131:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1748,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1748,
												"src": "27187:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27187:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1748,
												"src": "27218:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27218:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27186:57:1"
									},
									"src": "27160:84:1"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "27370:135:1",
										"statements": [
											{
												"assignments": [
													1753
												],
												"declarations": [
													{
														"constant": false,
														"id": 1753,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1769,
														"src": "27380:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1752,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "27380:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1756,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1754,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "27400:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27400:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27380:32:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1757,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "27422:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1758,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "27431:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "27422:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1760,
												"nodeType": "ExpressionStatement",
												"src": "27422:18:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27484:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27476:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1762,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27476:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27476:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1766,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "27488:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1761,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1748,
														"src": "27455:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27455:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1768,
												"nodeType": "EmitStatement",
												"src": "27450:48:1"
											}
										]
									},
									"documentation": {
										"id": 1749,
										"nodeType": "StructuredDocumentation",
										"src": "27250:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1770,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27358:2:1"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27370:0:1"
									},
									"scope": 1843,
									"src": "27346:159:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "27628:30:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1776,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1742,
													"src": "27645:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1775,
												"id": 1777,
												"nodeType": "Return",
												"src": "27638:13:1"
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "27511:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27595:2:1"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1779,
												"src": "27619:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27618:9:1"
									},
									"scope": 1843,
									"src": "27581:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "27767:95:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1783,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "27785:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1784,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1724,
																	"src": "27795:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27795:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "27785:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27809:34:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "27777:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27777:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1789,
												"nodeType": "ExpressionStatement",
												"src": "27777:67:1"
											},
											{
												"id": 1790,
												"nodeType": "PlaceholderStatement",
												"src": "27854:1:1"
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "27664:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1792,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27764:2:1"
									},
									"src": "27746:116:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1813,
										"nodeType": "Block",
										"src": "28258:91:1",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1799,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "28294:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28310:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28302:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1800,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28302:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28302:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1798,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1748,
														"src": "28273:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28273:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1805,
												"nodeType": "EmitStatement",
												"src": "28268:45:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1806,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "28323:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28340:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28332:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1807,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "28332:7:1",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28332:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "28323:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1812,
												"nodeType": "ExpressionStatement",
												"src": "28323:19:1"
											}
										]
									},
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "27868:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1814,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1796,
											"modifierName": {
												"argumentTypes": null,
												"id": 1795,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1792,
												"src": "28248:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28248:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28230:2:1"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28258:0:1"
									},
									"scope": 1843,
									"src": "28204:145:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1841,
										"nodeType": "Block",
										"src": "28568:170:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1823,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "28586:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28606:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28598:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1824,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28598:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28598:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "28586:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28610:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1822,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "28578:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28578:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1831,
												"nodeType": "ExpressionStatement",
												"src": "28578:73:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1833,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "28687:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1834,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "28695:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1832,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1748,
														"src": "28666:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28666:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1836,
												"nodeType": "EmitStatement",
												"src": "28661:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1837,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "28714:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1838,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1817,
														"src": "28723:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28714:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1840,
												"nodeType": "ExpressionStatement",
												"src": "28714:17:1"
											}
										]
									},
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "28355:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1842,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1820,
											"modifierName": {
												"argumentTypes": null,
												"id": 1819,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1792,
												"src": "28558:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28558:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1842,
												"src": "28525:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28525:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28524:18:1"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28568:0:1"
									},
									"scope": 1843,
									"src": "28498:240:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2446,
							"src": "27097:1643:1"
						},
						{
							"id": 1844,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "28800:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1846,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1736,
										"src": "30010:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1736",
											"typeString": "contract Context"
										}
									},
									"id": 1847,
									"nodeType": "InheritanceSpecifier",
									"src": "30010:7:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1848,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 714,
										"src": "30019:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$714",
											"typeString": "contract IERC20"
										}
									},
									"id": 1849,
									"nodeType": "InheritanceSpecifier",
									"src": "30019:6:1"
								}
							],
							"contractDependencies": [
								714,
								1736
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1845,
								"nodeType": "StructuredDocumentation",
								"src": "28829:1162:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 2345,
							"linearizedBaseContracts": [
								2345,
								714,
								1736
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1852,
									"libraryName": {
										"contractScope": null,
										"id": 1850,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 908,
										"src": "30038:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$908",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "30032:27:1",
									"typeName": {
										"id": 1851,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30051:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1855,
									"libraryName": {
										"contractScope": null,
										"id": 1853,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1111,
										"src": "30070:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1111",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "30064:26:1",
									"typeName": {
										"id": 1854,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "30082:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 1859,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2345,
									"src": "30096:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1858,
										"keyType": {
											"id": 1856,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "30105:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "30096:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1857,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "30116:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1865,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2345,
									"src": "30149:69:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1864,
										"keyType": {
											"id": 1860,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "30158:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "30149:49:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1863,
											"keyType": {
												"id": 1861,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "30178:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "30169:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1862,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "30189:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1867,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2345,
									"src": "30225:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1866,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30225:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1869,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2345,
									"src": "30260:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1868,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "30260:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1871,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2345,
									"src": "30286:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1870,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "30286:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1873,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2345,
									"src": "30314:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1872,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "30314:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "30722:79:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1881,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "30732:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1882,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1876,
														"src": "30740:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "30732:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1884,
												"nodeType": "ExpressionStatement",
												"src": "30732:12:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1885,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1871,
														"src": "30754:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1886,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "30764:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "30754:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1888,
												"nodeType": "ExpressionStatement",
												"src": "30754:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1889,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1873,
														"src": "30780:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 1890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30792:2:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "30780:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1892,
												"nodeType": "ExpressionStatement",
												"src": "30780:14:1"
											}
										]
									},
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "30344:311:1",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1894,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1894,
												"src": "30673:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1875,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "30673:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1894,
												"src": "30693:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1877,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "30693:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30672:42:1"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30722:0:1"
									},
									"scope": 2345,
									"src": "30660:141:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1902,
										"nodeType": "Block",
										"src": "30918:29:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1900,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1869,
													"src": "30935:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1899,
												"id": 1901,
												"nodeType": "Return",
												"src": "30928:12:1"
											}
										]
									},
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "30807:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30879:2:1"
									},
									"returnParameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1903,
												"src": "30903:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1897,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "30903:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30902:15:1"
									},
									"scope": 2345,
									"src": "30866:81:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1911,
										"nodeType": "Block",
										"src": "31114:31:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1909,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1871,
													"src": "31131:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1908,
												"id": 1910,
												"nodeType": "Return",
												"src": "31124:14:1"
											}
										]
									},
									"documentation": {
										"id": 1904,
										"nodeType": "StructuredDocumentation",
										"src": "30953:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31075:2:1"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1912,
												"src": "31099:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1906,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "31099:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31098:15:1"
									},
									"scope": 2345,
									"src": "31060:85:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1920,
										"nodeType": "Block",
										"src": "31816:33:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1918,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1873,
													"src": "31833:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1917,
												"id": 1919,
												"nodeType": "Return",
												"src": "31826:16:1"
											}
										]
									},
									"documentation": {
										"id": 1913,
										"nodeType": "StructuredDocumentation",
										"src": "31151:612:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31785:2:1"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1921,
												"src": "31809:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1915,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "31809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31808:7:1"
									},
									"scope": 2345,
									"src": "31768:81:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										645
									],
									"body": {
										"id": 1930,
										"nodeType": "Block",
										"src": "31971:36:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1928,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1867,
													"src": "31988:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1927,
												"id": 1929,
												"nodeType": "Return",
												"src": "31981:19:1"
											}
										]
									},
									"documentation": {
										"id": 1922,
										"nodeType": "StructuredDocumentation",
										"src": "31855:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1924,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "31944:8:1"
									},
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31929:2:1"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1931,
												"src": "31962:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31962:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31961:9:1"
									},
									"scope": 2345,
									"src": "31909:98:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										653
									],
									"body": {
										"id": 1944,
										"nodeType": "Block",
										"src": "32140:42:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1940,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1859,
														"src": "32157:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1942,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1941,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "32167:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32157:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1939,
												"id": 1943,
												"nodeType": "Return",
												"src": "32150:25:1"
											}
										]
									},
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "32013:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1936,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32113:8:1"
									},
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1945,
												"src": "32084:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32084:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32083:17:1"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1945,
												"src": "32131:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32131:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32130:9:1"
									},
									"scope": 2345,
									"src": "32065:117:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										663
									],
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "32477:80:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1957,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "32497:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32497:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1959,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "32511:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1960,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "32522:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1956,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2166,
														"src": "32487:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32487:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1962,
												"nodeType": "ExpressionStatement",
												"src": "32487:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "32546:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1955,
												"id": 1964,
												"nodeType": "Return",
												"src": "32539:11:1"
											}
										]
									},
									"documentation": {
										"id": 1946,
										"nodeType": "StructuredDocumentation",
										"src": "32188:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1952,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32453:8:1"
									},
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1966,
												"src": "32403:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1966,
												"src": "32422:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32422:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32402:35:1"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1966,
												"src": "32471:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1953,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32471:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32470:6:1"
									},
									"scope": 2345,
									"src": "32385:172:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										673
									],
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "32713:51:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1977,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "32730:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1979,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1978,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "32742:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32730:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1981,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1980,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1971,
														"src": "32749:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32730:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1976,
												"id": 1982,
												"nodeType": "Return",
												"src": "32723:34:1"
											}
										]
									},
									"documentation": {
										"id": 1967,
										"nodeType": "StructuredDocumentation",
										"src": "32563:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1973,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32686:8:1"
									},
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1984,
												"src": "32634:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1984,
												"src": "32649:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32649:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32633:32:1"
									},
									"returnParameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1984,
												"src": "32704:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32704:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32703:9:1"
									},
									"scope": 2345,
									"src": "32615:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										683
									],
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "32991:77:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1996,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "33010:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33010:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1998,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "33024:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1999,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1989,
															"src": "33033:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1995,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "33001:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33001:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "33001:39:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "33057:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1994,
												"id": 2003,
												"nodeType": "Return",
												"src": "33050:11:1"
											}
										]
									},
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "32770:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1991,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32967:8:1"
									},
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2005,
												"src": "32919:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32919:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2005,
												"src": "32936:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32936:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32918:33:1"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2005,
												"src": "32985:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1992,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32985:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32984:6:1"
									},
									"scope": 2345,
									"src": "32902:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										695
									],
									"body": {
										"id": 2042,
										"nodeType": "Block",
										"src": "33640:205:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2019,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "33660:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2020,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "33668:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2021,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "33679:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2018,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2166,
														"src": "33650:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33650:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2023,
												"nodeType": "ExpressionStatement",
												"src": "33650:36:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2025,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "33705:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2026,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "33713:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33713:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2035,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "33765:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33773:42:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 2028,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1865,
																			"src": "33727:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2030,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 2029,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2008,
																			"src": "33739:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "33727:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2033,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2031,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1724,
																			"src": "33747:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33747:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "33727:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 786,
																"src": "33727:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33727:89:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2024,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "33696:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33696:121:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2039,
												"nodeType": "ExpressionStatement",
												"src": "33696:121:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "33834:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2017,
												"id": 2041,
												"nodeType": "Return",
												"src": "33827:11:1"
											}
										]
									},
									"documentation": {
										"id": 2006,
										"nodeType": "StructuredDocumentation",
										"src": "33074:449:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 2043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2014,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "33616:8:1"
									},
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2043,
												"src": "33550:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33550:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2043,
												"src": "33566:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2043,
												"src": "33585:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33585:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33549:51:1"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2043,
												"src": "33634:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2015,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33634:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33633:6:1"
									},
									"scope": 2345,
									"src": "33528:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "34334:121:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2054,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "34353:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34353:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2056,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "34367:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2064,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2048,
																	"src": "34415:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 2057,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1865,
																			"src": "34376:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2060,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2058,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1724,
																				"src": "34388:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 2059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34388:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "34376:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2062,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2061,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "34402:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "34376:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 741,
																"src": "34376:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34376:50:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2053,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "34344:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34344:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2067,
												"nodeType": "ExpressionStatement",
												"src": "34344:83:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "34444:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2052,
												"id": 2069,
												"nodeType": "Return",
												"src": "34437:11:1"
											}
										]
									},
									"documentation": {
										"id": 2044,
										"nodeType": "StructuredDocumentation",
										"src": "33851:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2071,
												"src": "34267:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34267:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2071,
												"src": "34284:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34284:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34266:37:1"
									},
									"returnParameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2071,
												"src": "34328:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2050,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34328:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34327:6:1"
									},
									"scope": 2345,
									"src": "34240:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2099,
										"nodeType": "Block",
										"src": "35041:167:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2082,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "35060:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35060:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2084,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "35074:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2092,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "35122:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35139:39:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 2085,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1865,
																			"src": "35083:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2088,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2086,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1724,
																				"src": "35095:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 2087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35095:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "35083:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2090,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2089,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2074,
																		"src": "35109:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "35083:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 786,
																"src": "35083:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35083:96:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2081,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "35051:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35051:129:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2096,
												"nodeType": "ExpressionStatement",
												"src": "35051:129:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "35197:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2080,
												"id": 2098,
												"nodeType": "Return",
												"src": "35190:11:1"
											}
										]
									},
									"documentation": {
										"id": 2072,
										"nodeType": "StructuredDocumentation",
										"src": "34461:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 2100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2100,
												"src": "34969:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2100,
												"src": "34986:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34986:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34968:42:1"
									},
									"returnParameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2100,
												"src": "35035:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2078,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35035:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35034:6:1"
									},
									"scope": 2345,
									"src": "34942:266:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2165,
										"nodeType": "Block",
										"src": "35769:443:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2111,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "35787:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "35805:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "35797:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2112,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "35797:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35797:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "35787:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35809:39:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 2110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "35779:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35779:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2119,
												"nodeType": "ExpressionStatement",
												"src": "35779:70:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2121,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2105,
																"src": "35867:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "35888:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "35880:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2122,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "35880:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35880:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "35867:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35892:37:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 2120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "35859:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35859:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2129,
												"nodeType": "ExpressionStatement",
												"src": "35859:71:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2131,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "35962:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2132,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2105,
															"src": "35970:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2133,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "35981:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2130,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2344,
														"src": "35941:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35941:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2135,
												"nodeType": "ExpressionStatement",
												"src": "35941:47:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2136,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "35999:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2138,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2137,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "36009:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "35999:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2143,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2107,
																"src": "36041:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36049:40:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2139,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1859,
																	"src": "36019:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2141,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2140,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2103,
																	"src": "36029:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36019:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 786,
															"src": "36019:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36019:71:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35999:91:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2147,
												"nodeType": "ExpressionStatement",
												"src": "35999:91:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2148,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "36100:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2150,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2149,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2105,
															"src": "36110:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "36100:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2155,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2107,
																"src": "36148:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2151,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1859,
																	"src": "36123:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2153,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2152,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2105,
																	"src": "36133:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36123:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 741,
															"src": "36123:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36123:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36100:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2158,
												"nodeType": "ExpressionStatement",
												"src": "36100:55:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2160,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "36179:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2161,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2105,
															"src": "36187:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2162,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "36198:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2159,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "36170:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36170:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2164,
												"nodeType": "EmitStatement",
												"src": "36165:40:1"
											}
										]
									},
									"documentation": {
										"id": 2101,
										"nodeType": "StructuredDocumentation",
										"src": "35214:463:1",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 2166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2166,
												"src": "35701:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2166,
												"src": "35717:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35717:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2166,
												"src": "35736:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35736:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35700:51:1"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35769:0:1"
									},
									"scope": 2345,
									"src": "35682:530:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2220,
										"nodeType": "Block",
										"src": "36547:305:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2175,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2169,
																"src": "36565:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36584:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "36576:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2176,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "36576:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36576:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "36565:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36588:33:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 2174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "36557:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36557:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2183,
												"nodeType": "ExpressionStatement",
												"src": "36557:65:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36662:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36654:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2185,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36654:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36654:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2189,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2169,
															"src": "36666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2190,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2171,
															"src": "36675:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2184,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2344,
														"src": "36633:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36633:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2192,
												"nodeType": "ExpressionStatement",
												"src": "36633:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2193,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "36693:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2196,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2171,
																"src": "36725:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2194,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1867,
																"src": "36708:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 741,
															"src": "36708:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36708:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36693:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2199,
												"nodeType": "ExpressionStatement",
												"src": "36693:39:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2200,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "36742:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2202,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2201,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2169,
															"src": "36752:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "36742:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2207,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2171,
																"src": "36786:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2203,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1859,
																	"src": "36763:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2205,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2204,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2169,
																	"src": "36773:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36763:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 741,
															"src": "36763:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36763:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36742:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2210,
												"nodeType": "ExpressionStatement",
												"src": "36742:51:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36825:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36817:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2212,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36817:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36817:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2216,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2169,
															"src": "36829:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2217,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2171,
															"src": "36838:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2211,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "36808:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36808:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2219,
												"nodeType": "EmitStatement",
												"src": "36803:42:1"
											}
										]
									},
									"documentation": {
										"id": 2167,
										"nodeType": "StructuredDocumentation",
										"src": "36218:259:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 2221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2221,
												"src": "36497:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36497:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2221,
												"src": "36514:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36514:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "36496:33:1"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36547:0:1"
									},
									"scope": 2345,
									"src": "36482:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2276,
										"nodeType": "Block",
										"src": "37236:345:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "37254:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37273:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "37265:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2231,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "37265:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37265:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "37254:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37277:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 2229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "37246:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37246:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2238,
												"nodeType": "ExpressionStatement",
												"src": "37246:67:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2240,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "37345:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37362:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37354:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2241,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37354:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37354:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2245,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2226,
															"src": "37366:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2239,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2344,
														"src": "37324:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37324:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2247,
												"nodeType": "ExpressionStatement",
												"src": "37324:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2248,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "37384:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2250,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2249,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "37394:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37384:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2255,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2226,
																"src": "37428:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37436:36:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2251,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1859,
																	"src": "37405:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2253,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2252,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2224,
																	"src": "37415:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "37405:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 786,
															"src": "37405:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 2257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37405:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37384:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2259,
												"nodeType": "ExpressionStatement",
												"src": "37384:89:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2260,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "37483:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2263,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2226,
																"src": "37515:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2261,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1867,
																"src": "37498:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 758,
															"src": "37498:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37498:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37483:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2266,
												"nodeType": "ExpressionStatement",
												"src": "37483:39:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "37546:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37563:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37555:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2269,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37555:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37555:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2273,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2226,
															"src": "37567:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2267,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "37537:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37537:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2275,
												"nodeType": "EmitStatement",
												"src": "37532:42:1"
											}
										]
									},
									"documentation": {
										"id": 2222,
										"nodeType": "StructuredDocumentation",
										"src": "36858:308:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 2277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2277,
												"src": "37186:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37186:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2277,
												"src": "37203:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37203:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "37185:33:1"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37236:0:1"
									},
									"scope": 2345,
									"src": "37171:410:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2321,
										"nodeType": "Block",
										"src": "38089:257:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2288,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2280,
																"src": "38107:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38124:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38116:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2289,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "38116:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38116:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "38107:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38128:38:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 2287,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "38099:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38099:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2296,
												"nodeType": "ExpressionStatement",
												"src": "38099:68:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2298,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2282,
																"src": "38185:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38204:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38196:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2299,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "38196:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38196:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "38185:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38208:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 2297,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "38177:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38177:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2306,
												"nodeType": "ExpressionStatement",
												"src": "38177:68:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2307,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "38256:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2310,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2308,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2280,
																"src": "38268:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "38256:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2311,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2309,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2282,
															"src": "38275:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38256:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2312,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2284,
														"src": "38286:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38256:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2314,
												"nodeType": "ExpressionStatement",
												"src": "38256:36:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2316,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2280,
															"src": "38316:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2317,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2282,
															"src": "38323:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2318,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2284,
															"src": "38332:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2315,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "38307:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38307:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2320,
												"nodeType": "EmitStatement",
												"src": "38302:37:1"
											}
										]
									},
									"documentation": {
										"id": 2278,
										"nodeType": "StructuredDocumentation",
										"src": "37587:414:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 2322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2322,
												"src": "38024:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38024:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2322,
												"src": "38039:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2322,
												"src": "38056:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38056:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38023:48:1"
									},
									"returnParameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38089:0:1"
									},
									"scope": 2345,
									"src": "38006:340:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2332,
										"nodeType": "Block",
										"src": "38719:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2328,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1873,
														"src": "38729:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2329,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2325,
														"src": "38741:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "38729:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2331,
												"nodeType": "ExpressionStatement",
												"src": "38729:21:1"
											}
										]
									},
									"documentation": {
										"id": 2323,
										"nodeType": "StructuredDocumentation",
										"src": "38352:312:1",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 2333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2333,
												"src": "38693:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2324,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "38693:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38692:17:1"
									},
									"returnParameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38719:0:1"
									},
									"scope": 2345,
									"src": "38669:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2343,
										"nodeType": "Block",
										"src": "39433:3:1",
										"statements": []
									},
									"documentation": {
										"id": 2334,
										"nodeType": "StructuredDocumentation",
										"src": "38763:576:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2344,
												"src": "39374:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2344,
												"src": "39388:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39388:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2344,
												"src": "39400:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39400:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39373:42:1"
									},
									"returnParameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39433:0:1"
									},
									"scope": 2345,
									"src": "39344:92:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2446,
							"src": "29992:9446:1"
						},
						{
							"id": 2346,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "39506:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2445,
							"linearizedBaseContracts": [
								2445
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 2347,
										"nodeType": "StructuredDocumentation",
										"src": "39551:62:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39636:2:1"
									},
									"returnParameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2352,
												"src": "39662:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39661:9:1"
									},
									"scope": 2445,
									"src": "39616:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2353,
										"nodeType": "StructuredDocumentation",
										"src": "39675:47:1",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 2358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39742:2:1"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2358,
												"src": "39768:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2355,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "39768:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39767:7:1"
									},
									"scope": 2445,
									"src": "39725:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2359,
										"nodeType": "StructuredDocumentation",
										"src": "39779:45:1",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39842:2:1"
									},
									"returnParameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2364,
												"src": "39868:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39868:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39867:15:1"
									},
									"scope": 2445,
									"src": "39827:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2365,
										"nodeType": "StructuredDocumentation",
										"src": "39887:41:1",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 2370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39944:2:1"
									},
									"returnParameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2370,
												"src": "39970:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39970:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39969:15:1"
									},
									"scope": 2445,
									"src": "39931:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2371,
										"nodeType": "StructuredDocumentation",
										"src": "39989:48:1",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 2376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40057:2:1"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2376,
												"src": "40083:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40083:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40082:9:1"
									},
									"scope": 2445,
									"src": "40040:52:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2377,
										"nodeType": "StructuredDocumentation",
										"src": "40096:68:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2384,
												"src": "40186:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40186:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40185:17:1"
									},
									"returnParameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2384,
												"src": "40226:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40225:9:1"
									},
									"scope": 2445,
									"src": "40167:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2385,
										"nodeType": "StructuredDocumentation",
										"src": "40239:197:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2394,
												"src": "40457:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40457:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2394,
												"src": "40476:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40476:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40456:35:1"
									},
									"returnParameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2394,
												"src": "40510:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40510:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40509:6:1"
									},
									"scope": 2445,
									"src": "40439:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2395,
										"nodeType": "StructuredDocumentation",
										"src": "40520:252:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2404,
												"src": "40794:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2404,
												"src": "40810:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40810:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40793:33:1"
									},
									"returnParameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2404,
												"src": "40850:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40850:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40849:9:1"
									},
									"scope": 2445,
									"src": "40775:84:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2405,
										"nodeType": "StructuredDocumentation",
										"src": "40863:616:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2414,
												"src": "41499:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41499:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2414,
												"src": "41516:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41516:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "41498:33:1"
									},
									"returnParameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2414,
												"src": "41550:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41550:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "41549:6:1"
									},
									"scope": 2445,
									"src": "41482:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2415,
										"nodeType": "StructuredDocumentation",
										"src": "41560:280:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2426,
												"src": "41865:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2426,
												"src": "41881:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41881:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2426,
												"src": "41900:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "41864:51:1"
									},
									"returnParameters": {
										"id": 2425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2426,
												"src": "41934:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41934:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "41933:6:1"
									},
									"scope": 2445,
									"src": "41843:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2427,
										"nodeType": "StructuredDocumentation",
										"src": "41944:148:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 2435,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2435,
												"src": "42110:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2431,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2435,
												"src": "42132:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42132:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2433,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2435,
												"src": "42152:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42152:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "42109:57:1"
									},
									"src": "42095:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2436,
										"nodeType": "StructuredDocumentation",
										"src": "42171:142:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 2444,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2444,
												"src": "42331:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2444,
												"src": "42354:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42354:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2442,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2444,
												"src": "42379:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42379:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "42330:63:1"
									},
									"src": "42316:78:1"
								}
							],
							"scope": 2446,
							"src": "39530:2866:1"
						}
					],
					"src": "235:42164:1"
				},
				"id": 1
			}
		}
	}
}