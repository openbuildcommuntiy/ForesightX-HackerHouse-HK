{
	"id": "a7c1f5a1328ec7f52584eae56d4e02a9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"PolarAI/BEP20-PolarCoin.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.6.0;\nimport \"./interface.sol\";\n\ncontract BEP20 is Context,IBEP20, Ownable {\n  using SafeMath for uint256;\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n  uint8 public _decimals;\n  string public _symbol;\n  string public _name;\n\n  constructor() public {\n    _name = \"PolarAI Token\";\n    _symbol = \"PAT\";\n    _decimals = 18;\n    _totalSupply = 2250000 * 10**18;\n    _balances[msg.sender] = _totalSupply;\n\n    emit Transfer(address(0), msg.sender, _totalSupply);\n  }\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view override returns (address) {\n    return owner();\n  }\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view override returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view override returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view override returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev See {BEP20-totalSupply}.\n   */\n  function totalSupply() external view override returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {BEP20-balanceOf}.\n   */\n  function balanceOf(address account) external view override returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {BEP20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  function transfer(address recipient, uint256 amount) external override returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-allowance}.\n   */\n  function allowance(address owner, address spender) external view override returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev See {BEP20-approve}.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function approve(address spender, uint256 amount) external override returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-transferFrom}.\n   *\n   * Emits an {Approval} event indicating the updated allowance. This is not\n   * required by the EIP. See the note at the beginning of {BEP20};\n   *\n   * Requirements:\n   * - `sender` and `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   * - the caller must have allowance for `sender`'s tokens of at least\n   * `amount`.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\n    return true;\n  }\n\n  /**\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   * - `spender` must have allowance for the caller of at least\n   * `subtractedValue`.\n   */\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\n    return true;\n  }\n\n  /**\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n   * the total supply.\n   *\n   * Requirements\n   *\n   * - `msg.sender` must be the token owner\n   */\n  function mint(uint256 amount) public onlyOwner returns (bool) {\n    _mint(_msgSender(), amount);\n    return true;\n  }\n\n  /**\n   * @dev Burn `amount` tokens and decreasing the total supply.\n   */\n  function burn(uint256 amount) public returns (bool) {\n    _burn(_msgSender(), amount);\n    return true;\n  }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal {\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n   * the total supply.\n   *\n   * Emits a {Transfer} event with `from` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `to` cannot be the zero address.\n   */\n  function _mint(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: mint to the zero address\");\n\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`, reducing the\n   * total supply.\n   *\n   * Emits a {Transfer} event with `to` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `account` cannot be the zero address.\n   * - `account` must have at least `amount` tokens.\n   */\n  function _burn(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: burn from the zero address\");\n\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   *\n   * This is internal function is equivalent to `approve`, and can be used to\n   * e.g. set automatic allowances for certain subsystems, etc.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `owner` cannot be the zero address.\n   * - `spender` cannot be the zero address.\n   */\n  function _approve(address owner, address spender, uint256 amount) internal {\n    require(owner != address(0), \"BEP20: approve from the zero address\");\n    require(spender != address(0), \"BEP20: approve to the zero address\");\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n   * from the caller's allowance.\n   *\n   * See {_burn} and {_approve}.\n   */\n  function _burnFrom(address account, uint256 amount) internal {\n    _burn(account, amount);\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\n  }\n}"
			},
			"PolarAI/interface.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\n/**\n *Submitted for verification at Etherscan.io on 2020-08-26\n*/\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: @openzeppelin/contracts/math/SafeMath.sol\n\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n\npragma solidity ^0.6.2;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { codehash := extcodehash(account) }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        return _functionCallWithValue(target, data, value, errorMessage);\n    }\n\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/SafeERC20.sol\n\n\n\npragma solidity ^0.6.0;\n\n\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/EnumerableSet.sol\n\n\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`\n * (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping (bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\n\n            bytes32 lastvalue = set._values[lastIndex];\n\n            // Move the last value to the index where the value to delete is\n            set._values[toDeleteIndex] = lastvalue;\n            // Update the index for the moved value\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        require(set._values.length > index, \"EnumerableSet: index out of bounds\");\n        return set._values[index];\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint256(_at(set._inner, index)));\n    }\n\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n}\n\n// File: @openzeppelin/contracts/GSN/Context.sol\n\n\n\npragma solidity ^0.6.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n\npragma solidity ^0.6.0;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n/**\n *Submitted for verification at Etherscan.io on 2020-09-09\n*/\n\npragma solidity 0.6.12;\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"PolarAI/BEP20-PolarCoin.sol": {
				"BEP20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PolarAI/BEP20-PolarCoin.sol\":90:7919  contract BEP20 is Context,IBEP20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"PolarAI/BEP20-PolarCoin.sol\":399:632  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"PolarAI/interface.sol\":27380:27397  address msgSender */\n  0x00\n    /* \"PolarAI/interface.sol\":27400:27412  _msgSender() */\n  tag_5\n    /* \"PolarAI/interface.sol\":27400:27410  _msgSender */\n  shl(0x20, tag_6)\n    /* \"PolarAI/interface.sol\":27400:27412  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"PolarAI/interface.sol\":27380:27412  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"PolarAI/interface.sol\":27431:27440  msgSender */\n  dup1\n    /* \"PolarAI/interface.sol\":27422:27428  _owner */\n  0x00\n  dup1\n    /* \"PolarAI/interface.sol\":27422:27440  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"PolarAI/interface.sol\":27488:27497  msgSender */\n  dup1\n    /* \"PolarAI/interface.sol\":27455:27498  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"PolarAI/interface.sol\":27484:27485  0 */\n  0x00\n    /* \"PolarAI/interface.sol\":27455:27498  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"PolarAI/interface.sol\":27346:27505  constructor () internal {... */\n  pop\n    /* \"PolarAI/BEP20-PolarCoin.sol\":426:449  _name = \"PolarAI Token\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  0x506f6c6172414920546f6b656e00000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"PolarAI/BEP20-PolarCoin.sol\":426:431  _name */\n  0x06\n    /* \"PolarAI/BEP20-PolarCoin.sol\":426:449  _name = \"PolarAI Token\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"PolarAI/BEP20-PolarCoin.sol\":455:470  _symbol = \"PAT\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5041540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"PolarAI/BEP20-PolarCoin.sol\":455:462  _symbol */\n  0x05\n    /* \"PolarAI/BEP20-PolarCoin.sol\":455:470  _symbol = \"PAT\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"PolarAI/BEP20-PolarCoin.sol\":488:490  18 */\n  0x12\n    /* \"PolarAI/BEP20-PolarCoin.sol\":476:485  _decimals */\n  0x04\n  0x00\n    /* \"PolarAI/BEP20-PolarCoin.sol\":476:490  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"PolarAI/BEP20-PolarCoin.sol\":511:527  2250000 * 10**18 */\n  0x01dc74be914d16aa400000\n    /* \"PolarAI/BEP20-PolarCoin.sol\":496:508  _totalSupply */\n  0x03\n    /* \"PolarAI/BEP20-PolarCoin.sol\":496:527  _totalSupply = 2250000 * 10**18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"PolarAI/BEP20-PolarCoin.sol\":557:569  _totalSupply */\n  sload(0x03)\n    /* \"PolarAI/BEP20-PolarCoin.sol\":533:542  _balances */\n  0x01\n    /* \"PolarAI/BEP20-PolarCoin.sol\":533:554  _balances[msg.sender] */\n  0x00\n    /* \"PolarAI/BEP20-PolarCoin.sol\":543:553  msg.sender */\n  caller\n    /* \"PolarAI/BEP20-PolarCoin.sol\":533:554  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"PolarAI/BEP20-PolarCoin.sol\":533:569  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"PolarAI/BEP20-PolarCoin.sol\":602:612  msg.sender */\n  caller\n    /* \"PolarAI/BEP20-PolarCoin.sol\":581:627  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"PolarAI/BEP20-PolarCoin.sol\":598:599  0 */\n  0x00\n    /* \"PolarAI/BEP20-PolarCoin.sol\":581:627  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"PolarAI/BEP20-PolarCoin.sol\":614:626  _totalSupply */\n  sload(0x03)\n    /* \"PolarAI/BEP20-PolarCoin.sol\":581:627  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"PolarAI/BEP20-PolarCoin.sol\":90:7919  contract BEP20 is Context,IBEP20, Ownable {... */\n  jump(tag_11)\n    /* \"PolarAI/interface.sol\":26178:26282  function _msgSender() internal view virtual returns (address payable) {... */\ntag_6:\n    /* \"PolarAI/interface.sol\":26231:26246  address payable */\n  0x00\n    /* \"PolarAI/interface.sol\":26265:26275  msg.sender */\n  caller\n    /* \"PolarAI/interface.sol\":26258:26275  return msg.sender */\n  swap1\n  pop\n    /* \"PolarAI/interface.sol\":26178:26282  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"PolarAI/BEP20-PolarCoin.sol\":90:7919  contract BEP20 is Context,IBEP20, Ownable {... */\ntag_9:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_13)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_13\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_13:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"PolarAI/BEP20-PolarCoin.sol\":90:7919  contract BEP20 is Context,IBEP20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x893d20e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x32424aa3\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1103:1189  function name() external view override returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_28:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_28)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_31\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_31:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2143:2293  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1240:1334  function totalSupply() external view override returns (uint256) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2724:3021  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/BEP20-PolarCoin.sol\":827:913  function decimals() external view override returns (uint8) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/BEP20-PolarCoin.sol\":324:346  uint8 public _decimals */\n    tag_8:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3389:3586  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4677:4784  function burn(uint256 amount) public returns (bool) {... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1383:1496  function balanceOf(address account) external view override returns (uint256) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":28204:28349  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":687:773  function getOwner() external view override returns (address) {... */\n    tag_13:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":27581:27658  function owner() public view returns (address) {... */\n    tag_14:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/BEP20-PolarCoin.sol\":965:1055  function symbol() external view override returns (string memory) {... */\n    tag_15:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_61:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_61)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_64\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_64:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4480:4597  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_16:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4042:4290  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_17:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1680:1836  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_18:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/BEP20-PolarCoin.sol\":350:371  string public _symbol */\n    tag_19:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_76:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_78\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_76)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_79:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/BEP20-PolarCoin.sol\":375:394  string public _name */\n    tag_20:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_82:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_84\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_82)\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_85:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1885:2022  function allowance(address owner, address spender) external view override returns (uint256) {... */\n    tag_21:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":28498:28738  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1103:1189  function name() external view override returns (string memory) {... */\n    tag_27:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1151:1164  string memory */\n      0x60\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1179:1184  _name */\n      0x06\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1172:1184  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1103:1189  function name() external view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2143:2293  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_34:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2220:2224  bool */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2232:2271  _approve(_msgSender(), spender, amount) */\n      tag_97\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2241:2253  _msgSender() */\n      tag_98\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2241:2251  _msgSender */\n      tag_99\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2241:2253  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2255:2262  spender */\n      dup5\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2264:2270  amount */\n      dup5\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2232:2240  _approve */\n      tag_100\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2232:2271  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_97:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2284:2288  true */\n      0x01\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2277:2288  return true */\n      swap1\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2143:2293  function approve(address spender, uint256 amount) external override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1240:1334  function totalSupply() external view override returns (uint256) {... */\n    tag_36:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1295:1302  uint256 */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1317:1329  _totalSupply */\n      sload(0x03)\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1310:1329  return _totalSupply */\n      swap1\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1240:1334  function totalSupply() external view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2724:3021  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_39:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2824:2828  bool */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2836:2872  _transfer(sender, recipient, amount) */\n      tag_103\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2846:2852  sender */\n      dup5\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2854:2863  recipient */\n      dup5\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2865:2871  amount */\n      dup5\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2836:2845  _transfer */\n      tag_104\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2836:2872  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_103:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2878:2999  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_105\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2887:2893  sender */\n      dup5\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2895:2907  _msgSender() */\n      tag_106\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2895:2905  _msgSender */\n      tag_99\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2895:2907  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2909:2998  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_107\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2947:2953  amount */\n      dup6\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2909:2998  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2909:2920  _allowances */\n      0x02\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2909:2928  _allowances[sender] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2921:2927  sender */\n      dup12\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2909:2928  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2909:2942  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2929:2941  _msgSender() */\n      tag_108\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2929:2939  _msgSender */\n      tag_99\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2929:2941  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2909:2942  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2909:2946  _allowances[sender][_msgSender()].sub */\n      tag_109\n      swap1\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2909:2998  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2878:2886  _approve */\n      tag_100\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2878:2999  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_105:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3012:3016  true */\n      0x01\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3005:3016  return true */\n      swap1\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2724:3021  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":827:913  function decimals() external view override returns (uint8) {... */\n    tag_41:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":879:884  uint8 */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":899:908  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"PolarAI/BEP20-PolarCoin.sol\":892:908  return _decimals */\n      swap1\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":827:913  function decimals() external view override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":324:346  uint8 public _decimals */\n    tag_43:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3389:3586  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_46:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3469:3473  bool */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3481:3564  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_112\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3490:3502  _msgSender() */\n      tag_113\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3490:3500  _msgSender */\n      tag_99\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3490:3502  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3504:3511  spender */\n      dup5\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3513:3563  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_114\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3552:3562  addedValue */\n      dup6\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3513:3524  _allowances */\n      0x02\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3513:3538  _allowances[_msgSender()] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3525:3537  _msgSender() */\n      tag_115\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3525:3535  _msgSender */\n      tag_99\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3525:3537  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3513:3538  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3513:3547  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3539:3546  spender */\n      dup10\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3513:3547  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3513:3551  _allowances[_msgSender()][spender].add */\n      tag_116\n      swap1\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3513:3563  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3481:3489  _approve */\n      tag_100\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3481:3564  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_112:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3577:3581  true */\n      0x01\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3570:3581  return true */\n      swap1\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":3389:3586  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4677:4784  function burn(uint256 amount) public returns (bool) {... */\n    tag_49:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4723:4727  bool */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4735:4762  _burn(_msgSender(), amount) */\n      tag_118\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4741:4753  _msgSender() */\n      tag_119\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4741:4751  _msgSender */\n      tag_99\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4741:4753  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4755:4761  amount */\n      dup4\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4735:4740  _burn */\n      tag_120\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4735:4762  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_118:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4775:4779  true */\n      0x01\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4768:4779  return true */\n      swap1\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4677:4784  function burn(uint256 amount) public returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1383:1496  function balanceOf(address account) external view override returns (uint256) {... */\n    tag_52:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1451:1458  uint256 */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1473:1482  _balances */\n      0x01\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1473:1491  _balances[account] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1483:1490  account */\n      dup4\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1473:1491  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1466:1491  return _balances[account] */\n      swap1\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1383:1496  function balanceOf(address account) external view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":28204:28349  function renounceOwnership() public virtual onlyOwner {... */\n    tag_54:\n        /* \"PolarAI/interface.sol\":27795:27807  _msgSender() */\n      tag_123\n        /* \"PolarAI/interface.sol\":27795:27805  _msgSender */\n      tag_99\n        /* \"PolarAI/interface.sol\":27795:27807  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"PolarAI/interface.sol\":27785:27807  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":27785:27791  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":27785:27807  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PolarAI/interface.sol\":27777:27844  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"PolarAI/interface.sol\":28310:28311  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":28273:28313  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":28294:28300  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":28273:28313  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PolarAI/interface.sol\":28340:28341  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":28323:28329  _owner */\n      dup1\n      0x00\n        /* \"PolarAI/interface.sol\":28323:28342  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/interface.sol\":28204:28349  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":687:773  function getOwner() external view override returns (address) {... */\n    tag_56:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":739:746  address */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":761:768  owner() */\n      tag_127\n        /* \"PolarAI/BEP20-PolarCoin.sol\":761:766  owner */\n      tag_58\n        /* \"PolarAI/BEP20-PolarCoin.sol\":761:768  owner() */\n      jump\t// in\n    tag_127:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":754:768  return owner() */\n      swap1\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":687:773  function getOwner() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":27581:27658  function owner() public view returns (address) {... */\n    tag_58:\n        /* \"PolarAI/interface.sol\":27619:27626  address */\n      0x00\n        /* \"PolarAI/interface.sol\":27645:27651  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":27638:27651  return _owner */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":27581:27658  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":965:1055  function symbol() external view override returns (string memory) {... */\n    tag_60:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1015:1028  string memory */\n      0x60\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1043:1050  _symbol */\n      0x05\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1036:1050  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":965:1055  function symbol() external view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4480:4597  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_67:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4536:4540  bool */\n      0x00\n        /* \"PolarAI/interface.sol\":27795:27807  _msgSender() */\n      tag_134\n        /* \"PolarAI/interface.sol\":27795:27805  _msgSender */\n      tag_99\n        /* \"PolarAI/interface.sol\":27795:27807  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"PolarAI/interface.sol\":27785:27807  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":27785:27791  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":27785:27807  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PolarAI/interface.sol\":27777:27844  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4548:4575  _mint(_msgSender(), amount) */\n      tag_137\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4554:4566  _msgSender() */\n      tag_138\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4554:4564  _msgSender */\n      tag_99\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4554:4566  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4568:4574  amount */\n      dup4\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4548:4553  _mint */\n      tag_139\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4548:4575  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_137:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4588:4592  true */\n      0x01\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4581:4592  return true */\n      swap1\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4480:4597  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4042:4290  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_70:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4127:4131  bool */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4139:4268  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_141\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4148:4160  _msgSender() */\n      tag_142\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4148:4158  _msgSender */\n      tag_99\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4148:4160  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4162:4169  spender */\n      dup5\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4171:4267  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_143\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4210:4225  subtractedValue */\n      dup6\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4171:4267  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4171:4182  _allowances */\n      0x02\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4171:4196  _allowances[_msgSender()] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4183:4195  _msgSender() */\n      tag_144\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4183:4193  _msgSender */\n      tag_99\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4183:4195  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4171:4196  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4171:4205  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4197:4204  spender */\n      dup11\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4171:4205  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4171:4209  _allowances[_msgSender()][spender].sub */\n      tag_109\n      swap1\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4171:4267  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4139:4147  _approve */\n      tag_100\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4139:4268  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_141:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4281:4285  true */\n      0x01\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4274:4285  return true */\n      swap1\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":4042:4290  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1680:1836  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_73:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1760:1764  bool */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1772:1814  _transfer(_msgSender(), recipient, amount) */\n      tag_146\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1782:1794  _msgSender() */\n      tag_147\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1782:1792  _msgSender */\n      tag_99\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1782:1794  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1796:1805  recipient */\n      dup5\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1807:1813  amount */\n      dup5\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1772:1781  _transfer */\n      tag_104\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1772:1814  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_146:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1827:1831  true */\n      0x01\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1820:1831  return true */\n      swap1\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1680:1836  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":350:371  string public _symbol */\n    tag_75:\n      0x05\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":375:394  string public _name */\n    tag_81:\n      0x06\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1885:2022  function allowance(address owner, address spender) external view override returns (uint256) {... */\n    tag_88:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1968:1975  uint256 */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1990:2001  _allowances */\n      0x02\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1990:2008  _allowances[owner] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2002:2007  owner */\n      dup5\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1990:2008  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1990:2017  _allowances[owner][spender] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":2009:2016  spender */\n      dup4\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1990:2017  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1983:2017  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":1885:2022  function allowance(address owner, address spender) external view override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":28498:28738  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_91:\n        /* \"PolarAI/interface.sol\":27795:27807  _msgSender() */\n      tag_156\n        /* \"PolarAI/interface.sol\":27795:27805  _msgSender */\n      tag_99\n        /* \"PolarAI/interface.sol\":27795:27807  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"PolarAI/interface.sol\":27785:27807  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":27785:27791  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":27785:27807  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PolarAI/interface.sol\":27777:27844  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"PolarAI/interface.sol\":28606:28607  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":28586:28608  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":28586:28594  newOwner */\n      dup2\n        /* \"PolarAI/interface.sol\":28586:28608  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/interface.sol\":28578:28651  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"PolarAI/interface.sol\":28695:28703  newOwner */\n      dup1\n        /* \"PolarAI/interface.sol\":28666:28704  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":28687:28693  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":28666:28704  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PolarAI/interface.sol\":28723:28731  newOwner */\n      dup1\n        /* \"PolarAI/interface.sol\":28714:28720  _owner */\n      0x00\n      dup1\n        /* \"PolarAI/interface.sol\":28714:28731  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/interface.sol\":28498:28738  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":26178:26282  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_99:\n        /* \"PolarAI/interface.sol\":26231:26246  address payable */\n      0x00\n        /* \"PolarAI/interface.sol\":26265:26275  msg.sender */\n      caller\n        /* \"PolarAI/interface.sol\":26258:26275  return msg.sender */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":26178:26282  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7220:7534  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_100:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7326:7327  0 */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7309:7328  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7309:7314  owner */\n      dup4\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7309:7328  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7301:7369  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7402:7403  0 */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7383:7404  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7383:7390  spender */\n      dup3\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7383:7404  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7375:7443  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7480:7486  amount */\n      dup1\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7450:7461  _allowances */\n      0x02\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7450:7468  _allowances[owner] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7462:7467  owner */\n      dup6\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7450:7468  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7450:7477  _allowances[owner][spender] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7469:7476  spender */\n      dup5\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7450:7477  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7450:7486  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7513:7520  spender */\n      dup2\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7497:7529  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7506:7511  owner */\n      dup4\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7497:7529  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7522:7528  amount */\n      dup4\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7497:7529  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PolarAI/BEP20-PolarCoin.sol\":7220:7534  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5228:5670  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_104:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5339:5340  0 */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5321:5341  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5321:5327  sender */\n      dup4\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5321:5341  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5313:5383  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5418:5419  0 */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5397:5420  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5397:5406  recipient */\n      dup3\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5397:5420  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5389:5460  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5487:5558  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_167\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5509:5515  amount */\n      dup2\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5487:5558  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5487:5496  _balances */\n      0x01\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5487:5504  _balances[sender] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5497:5503  sender */\n      dup8\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5487:5504  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5487:5508  _balances[sender].sub */\n      tag_109\n      swap1\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5487:5558  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_167:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5467:5476  _balances */\n      0x01\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5467:5484  _balances[sender] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5477:5483  sender */\n      dup6\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5467:5484  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5467:5558  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5587:5619  _balances[recipient].add(amount) */\n      tag_168\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5612:5618  amount */\n      dup2\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5587:5596  _balances */\n      0x01\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5587:5607  _balances[recipient] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5597:5606  recipient */\n      dup6\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5587:5607  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5587:5611  _balances[recipient].add */\n      tag_116\n      swap1\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5587:5619  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5564:5573  _balances */\n      0x01\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5564:5584  _balances[recipient] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5574:5583  recipient */\n      dup5\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5564:5584  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5564:5619  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5647:5656  recipient */\n      dup2\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5630:5665  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5639:5645  sender */\n      dup4\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5630:5665  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5658:5664  amount */\n      dup4\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5630:5665  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5228:5670  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":4544:4731  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_109:\n        /* \"PolarAI/interface.sol\":4630:4637  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":4662:4663  a */\n      dup4\n        /* \"PolarAI/interface.sol\":4657:4658  b */\n      dup4\n        /* \"PolarAI/interface.sol\":4657:4663  b <= a */\n      gt\n      iszero\n        /* \"PolarAI/interface.sol\":4665:4677  errorMessage */\n      dup3\n        /* \"PolarAI/interface.sol\":4649:4678  require(b <= a, errorMessage) */\n      swap1\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_171:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_173\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_171)\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_174\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_174:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n      pop\n        /* \"PolarAI/interface.sol\":4688:4697  uint256 c */\n      0x00\n        /* \"PolarAI/interface.sol\":4704:4705  b */\n      dup4\n        /* \"PolarAI/interface.sol\":4700:4701  a */\n      dup6\n        /* \"PolarAI/interface.sol\":4700:4705  a - b */\n      sub\n        /* \"PolarAI/interface.sol\":4688:4705  uint256 c = a - b */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":4723:4724  c */\n      dup1\n        /* \"PolarAI/interface.sol\":4716:4724  return c */\n      swap2\n      pop\n      pop\n        /* \"PolarAI/interface.sol\":4544:4731  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":3672:3848  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_116:\n        /* \"PolarAI/interface.sol\":3730:3737  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":3749:3758  uint256 c */\n      dup1\n        /* \"PolarAI/interface.sol\":3765:3766  b */\n      dup3\n        /* \"PolarAI/interface.sol\":3761:3762  a */\n      dup5\n        /* \"PolarAI/interface.sol\":3761:3766  a + b */\n      add\n        /* \"PolarAI/interface.sol\":3749:3766  uint256 c = a + b */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":3789:3790  a */\n      dup4\n        /* \"PolarAI/interface.sol\":3784:3785  c */\n      dup2\n        /* \"PolarAI/interface.sol\":3784:3790  c >= a */\n      lt\n      iszero\n        /* \"PolarAI/interface.sol\":3776:3822  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"PolarAI/interface.sol\":3840:3841  c */\n      dup1\n        /* \"PolarAI/interface.sol\":3833:3841  return c */\n      swap2\n      pop\n      pop\n        /* \"PolarAI/interface.sol\":3672:3848  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6499:6823  function _burn(address account, uint256 amount) internal {... */\n    tag_120:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6589:6590  0 */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6570:6591  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6570:6577  account */\n      dup3\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6570:6591  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6562:6629  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6657:6725  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      tag_179\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6680:6686  amount */\n      dup2\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6657:6725  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032\n      0x22\n      swap2\n      codecopy\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6657:6666  _balances */\n      0x01\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6657:6675  _balances[account] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6667:6674  account */\n      dup7\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6657:6675  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6657:6679  _balances[account].sub */\n      tag_109\n      swap1\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6657:6725  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6636:6645  _balances */\n      0x01\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6636:6654  _balances[account] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6646:6653  account */\n      dup5\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6636:6654  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6636:6725  _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6746:6770  _totalSupply.sub(amount) */\n      tag_180\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6763:6769  amount */\n      dup2\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6746:6758  _totalSupply */\n      sload(0x03)\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6746:6762  _totalSupply.sub */\n      tag_181\n      swap1\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6746:6770  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_180:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6731:6743  _totalSupply */\n      0x03\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6731:6770  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6807:6808  0 */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6781:6818  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6790:6797  account */\n      dup3\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6781:6818  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6811:6817  amount */\n      dup4\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6781:6818  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6499:6823  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5920:6204  function _mint(address account, uint256 amount) internal {... */\n    tag_139:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6010:6011  0 */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5991:6012  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5991:5998  account */\n      dup3\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5991:6012  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5983:6048  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6070:6094  _totalSupply.add(amount) */\n      tag_184\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6087:6093  amount */\n      dup2\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6070:6082  _totalSupply */\n      sload(0x03)\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6070:6086  _totalSupply.add */\n      tag_116\n      swap1\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6070:6094  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_184:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6055:6067  _totalSupply */\n      0x03\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6055:6094  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6121:6151  _balances[account].add(amount) */\n      tag_185\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6144:6150  amount */\n      dup2\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6121:6130  _balances */\n      0x01\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6121:6139  _balances[account] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6131:6138  account */\n      dup6\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6121:6139  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6121:6143  _balances[account].add */\n      tag_116\n      swap1\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6121:6151  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6100:6109  _balances */\n      0x01\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6100:6118  _balances[account] */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6110:6117  account */\n      dup5\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6100:6118  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6100:6151  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6183:6190  account */\n      dup2\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6162:6199  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6179:6180  0 */\n      0x00\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6162:6199  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6192:6198  amount */\n      dup4\n        /* \"PolarAI/BEP20-PolarCoin.sol\":6162:6199  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PolarAI/BEP20-PolarCoin.sol\":5920:6204  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":4119:4253  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_181:\n        /* \"PolarAI/interface.sol\":4177:4184  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":4203:4246  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_187\n        /* \"PolarAI/interface.sol\":4207:4208  a */\n      dup4\n        /* \"PolarAI/interface.sol\":4210:4211  b */\n      dup4\n        /* \"PolarAI/interface.sol\":4203:4246  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"PolarAI/interface.sol\":4203:4206  sub */\n      tag_109\n        /* \"PolarAI/interface.sol\":4203:4246  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_187:\n        /* \"PolarAI/interface.sol\":4196:4246  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":4119:4253  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855 42455032303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032 42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa264697066735822122043976d795e318dfc4fe1d57f530f0a8810e9bb4f37e8e3915af564caf5372e5e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200024060201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600d81526020017f506f6c6172414920546f6b656e00000000000000000000000000000000000000815250600690805190602001906200010f92919062000248565b506040518060400160405280600381526020017f5041540000000000000000000000000000000000000000000000000000000000815250600590805190602001906200015d92919062000248565b506012600460006101000a81548160ff021916908360ff1602179055506a01dc74be914d16aa400000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040518082815260200191505060405180910390a3620002ee565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028b57805160ff1916838001178555620002bc565b82800160010185558215620002bc579182015b82811115620002bb5782518255916020019190600101906200029e565b5b509050620002cb9190620002cf565b5090565b5b80821115620002ea576000816000905550600101620002d0565b5090565b611e0380620002fe6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb14610599578063b09f1266146105fd578063d28d885214610680578063dd62ed3e14610703578063f2fde38b1461077b5761012c565b8063893d20e8146104065780638da5cb5b1461043a57806395d89b411461046e578063a0712d68146104f1578063a457c2d7146105355761012c565b806332424aa3116100f457806332424aa3146102db57806339509351146102fc57806342966c681461036057806370a08231146103a4578063715018a6146103fc5761012c565b806306fdde0314610131578063095ea7b3146101b457806318160ddd1461021857806323b872dd14610236578063313ce567146102ba575b600080fd5b6101396107bf565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017957808201518184015260208101905061015e565b50505050905090810190601f1680156101a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610200600480360360408110156101ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610861565b60405180821515815260200191505060405180910390f35b61022061087f565b6040518082815260200191505060405180910390f35b6102a26004803603606081101561024c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610889565b60405180821515815260200191505060405180910390f35b6102c2610962565b604051808260ff16815260200191505060405180910390f35b6102e3610979565b604051808260ff16815260200191505060405180910390f35b6103486004803603604081101561031257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061098c565b60405180821515815260200191505060405180910390f35b61038c6004803603602081101561037657600080fd5b8101908080359060200190929190505050610a3f565b60405180821515815260200191505060405180910390f35b6103e6600480360360208110156103ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a5b565b6040518082815260200191505060405180910390f35b610404610aa4565b005b61040e610c2a565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610442610c39565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610476610c62565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104b657808201518184015260208101905061049b565b50505050905090810190601f1680156104e35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61051d6004803603602081101561050757600080fd5b8101908080359060200190929190505050610d04565b60405180821515815260200191505060405180910390f35b6105816004803603604081101561054b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610de8565b60405180821515815260200191505060405180910390f35b6105e5600480360360408110156105af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610eb5565b60405180821515815260200191505060405180910390f35b610605610ed3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561064557808201518184015260208101905061062a565b50505050905090810190601f1680156106725780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610688610f71565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106c85780820151818401526020810190506106ad565b50505050905090810190601f1680156106f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107656004803603604081101561071957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061100f565b6040518082815260200191505060405180910390f35b6107bd6004803603602081101561079157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611096565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108575780601f1061082c57610100808354040283529160200191610857565b820191906000526020600020905b81548152906001019060200180831161083a57829003601f168201915b5050505050905090565b600061087561086e6112a1565b84846112a9565b6001905092915050565b6000600354905090565b60006108968484846114a0565b610957846108a26112a1565b61095285604051806060016040528060288152602001611cd360289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006109086112a1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461175a9092919063ffffffff16565b6112a9565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b6000610a356109996112a1565b84610a3085600260006109aa6112a1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461181a90919063ffffffff16565b6112a9565b6001905092915050565b6000610a52610a4c6112a1565b836118a2565b60019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610aac6112a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b6c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c34610c39565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cfa5780601f10610ccf57610100808354040283529160200191610cfa565b820191906000526020600020905b815481529060010190602001808311610cdd57829003601f168201915b5050505050905090565b6000610d0e6112a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610dce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610ddf610dd96112a1565b83611a5c565b60019050919050565b6000610eab610df56112a1565b84610ea685604051806060016040528060258152602001611d446025913960026000610e1f6112a1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461175a9092919063ffffffff16565b6112a9565b6001905092915050565b6000610ec9610ec26112a1565b84846114a0565b6001905092915050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f695780601f10610f3e57610100808354040283529160200191610f69565b820191906000526020600020905b815481529060010190602001808311610f4c57829003601f168201915b505050505081565b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110075780601f10610fdc57610100808354040283529160200191611007565b820191906000526020600020905b815481529060010190602001808311610fea57829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61109e6112a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461115e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156111e4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611cad6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561132f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611c896024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113b5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611dac6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611526576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611c646025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156115ac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611d216023913960400191505060405180910390fd5b61161881604051806060016040528060268152602001611cfb60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461175a9092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506116ad81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461181a90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117cc5780820151818401526020810190506117b1565b50505050905090810190601f1680156117f95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015611898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611928576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611d696021913960400191505060405180910390fd5b61199481604051806060016040528060228152602001611d8a60229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461175a9092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506119ec81600354611c1990919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611aff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611b148160035461181a90919063ffffffff16565b600381905550611b6c81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461181a90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000611c5b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061175a565b90509291505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a264697066735822122043976d795e318dfc4fe1d57f530f0a8810e9bb4f37e8e3915af564caf5372e5e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x240 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506F6C6172414920546F6B656E00000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10F SWAP3 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5041540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15D SWAP3 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH11 0x1DC74BE914D16AA400000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x2EE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x28B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2BC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2BC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2BB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x29E JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2CB SWAP2 SWAP1 PUSH3 0x2CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2EA JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2D0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1E03 DUP1 PUSH3 0x2FE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x680 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x77B JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x535 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3FC JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH2 0x962 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH2 0x979 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x98C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x404 PUSH2 0xAA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40E PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x442 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x476 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x49B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4E3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x581 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x605 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x645 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x62A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x672 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x688 PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6C8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6AD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6F5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x765 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7BD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1096 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x857 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x857 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x83A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x875 PUSH2 0x86E PUSH2 0x12A1 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x896 DUP5 DUP5 DUP5 PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x957 DUP5 PUSH2 0x8A2 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x952 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD3 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x908 PUSH2 0x12A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x175A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA35 PUSH2 0x999 PUSH2 0x12A1 JUMP JUMPDEST DUP5 PUSH2 0xA30 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x9AA PUSH2 0x12A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA52 PUSH2 0xA4C PUSH2 0x12A1 JUMP JUMPDEST DUP4 PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAAC PUSH2 0x12A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC34 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xCFA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCCF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCFA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCDD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0E PUSH2 0x12A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDDF PUSH2 0xDD9 PUSH2 0x12A1 JUMP JUMPDEST DUP4 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAB PUSH2 0xDF5 PUSH2 0x12A1 JUMP JUMPDEST DUP5 PUSH2 0xEA6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D44 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xE1F PUSH2 0x12A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x175A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC9 PUSH2 0xEC2 PUSH2 0x12A1 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xF69 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF3E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF69 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF4C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1007 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFDC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1007 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x109E PUSH2 0x12A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CAD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x132F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C89 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DAC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1526 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C64 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x15AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D21 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1618 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CFB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x175A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x16AD DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1807 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17CC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17B1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17F9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1898 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1928 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D69 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1994 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D8A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x175A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x19EC DUP2 PUSH1 0x3 SLOAD PUSH2 0x1C19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1AFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B14 DUP2 PUSH1 0x3 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1B6C DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x175A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A264697066735822122043976D795E31 DUP14 0xFC 0x4F 0xE1 0xD5 PUSH32 0x530F0A8810E9BB4F37E8E3915AF564CAF5372E5E64736F6C634300060C003300 ",
							"sourceMap": "90:7829:0:-:0;;;399:233;;;;;;;;;;27380:17:1;27400:12;:10;;;:12;;:::i;:::-;27380:32;;27431:9;27422:6;;:18;;;;;;;;;;;;;;;;;;27488:9;27455:43;;27484:1;27455:43;;;;;;;;;;;;27346:159;426:23:0;;;;;;;;;;;;;;;;;:5;:23;;;;;;;;;;;;:::i;:::-;;455:15;;;;;;;;;;;;;;;;;:7;:15;;;;;;;;;;;;:::i;:::-;;488:2;476:9;;:14;;;;;;;;;;;;;;;;;;511:16;496:12;:31;;;;557:12;;533:9;:21;543:10;533:21;;;;;;;;;;;;;;;:36;;;;602:10;581:46;;598:1;581:46;;;614:12;;581:46;;;;;;;;;;;;;;;;;;90:7829;;26178:104:1;26231:15;26265:10;26258:17;;26178:104;:::o;90:7829:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x680 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x77B JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x535 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3FC JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH2 0x962 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH2 0x979 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x98C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x404 PUSH2 0xAA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40E PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x442 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x476 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x49B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4E3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x581 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x605 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x645 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x62A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x672 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x688 PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6C8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6AD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6F5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x765 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7BD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1096 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x857 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x857 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x83A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x875 PUSH2 0x86E PUSH2 0x12A1 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x896 DUP5 DUP5 DUP5 PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x957 DUP5 PUSH2 0x8A2 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x952 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD3 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x908 PUSH2 0x12A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x175A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA35 PUSH2 0x999 PUSH2 0x12A1 JUMP JUMPDEST DUP5 PUSH2 0xA30 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x9AA PUSH2 0x12A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA52 PUSH2 0xA4C PUSH2 0x12A1 JUMP JUMPDEST DUP4 PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAAC PUSH2 0x12A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC34 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xCFA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCCF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCFA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCDD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0E PUSH2 0x12A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDDF PUSH2 0xDD9 PUSH2 0x12A1 JUMP JUMPDEST DUP4 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAB PUSH2 0xDF5 PUSH2 0x12A1 JUMP JUMPDEST DUP5 PUSH2 0xEA6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D44 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xE1F PUSH2 0x12A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x175A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC9 PUSH2 0xEC2 PUSH2 0x12A1 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xF69 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF3E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF69 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF4C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1007 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFDC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1007 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x109E PUSH2 0x12A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CAD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x132F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C89 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DAC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1526 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C64 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x15AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D21 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1618 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CFB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x175A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x16AD DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1807 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17CC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17B1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17F9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1898 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1928 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D69 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1994 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D8A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x175A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x19EC DUP2 PUSH1 0x3 SLOAD PUSH2 0x1C19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1AFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B14 DUP2 PUSH1 0x3 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1B6C DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x175A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A264697066735822122043976D795E31 DUP14 0xFC 0x4F 0xE1 0xD5 PUSH32 0x530F0A8810E9BB4F37E8E3915AF564CAF5372E5E64736F6C634300060C003300 ",
							"sourceMap": "90:7829:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1240:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2724:297;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;827:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;324:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3389:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4677:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1383:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;28204:145:1;;;:::i;:::-;;687:86:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;27581:77:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;965:90:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4480:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4042:248;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1680:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;350:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;375:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1885:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;28498:240:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1103:86:0;1151:13;1179:5;1172:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:86;:::o;2143:150::-;2220:4;2232:39;2241:12;:10;:12::i;:::-;2255:7;2264:6;2232:8;:39::i;:::-;2284:4;2277:11;;2143:150;;;;:::o;1240:94::-;1295:7;1317:12;;1310:19;;1240:94;:::o;2724:297::-;2824:4;2836:36;2846:6;2854:9;2865:6;2836:9;:36::i;:::-;2878:121;2887:6;2895:12;:10;:12::i;:::-;2909:89;2947:6;2909:89;;;;;;;;;;;;;;;;;:11;:19;2921:6;2909:19;;;;;;;;;;;;;;;:33;2929:12;:10;:12::i;:::-;2909:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;2878:8;:121::i;:::-;3012:4;3005:11;;2724:297;;;;;:::o;827:86::-;879:5;899:9;;;;;;;;;;;892:16;;827:86;:::o;324:22::-;;;;;;;;;;;;;:::o;3389:197::-;3469:4;3481:83;3490:12;:10;:12::i;:::-;3504:7;3513:50;3552:10;3513:11;:25;3525:12;:10;:12::i;:::-;3513:25;;;;;;;;;;;;;;;:34;3539:7;3513:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3481:8;:83::i;:::-;3577:4;3570:11;;3389:197;;;;:::o;4677:107::-;4723:4;4735:27;4741:12;:10;:12::i;:::-;4755:6;4735:5;:27::i;:::-;4775:4;4768:11;;4677:107;;;:::o;1383:113::-;1451:7;1473:9;:18;1483:7;1473:18;;;;;;;;;;;;;;;;1466:25;;1383:113;;;:::o;28204:145:1:-;27795:12;:10;:12::i;:::-;27785:22;;:6;;;;;;;;;;:22;;;27777:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28310:1:::1;28273:40;;28294:6;::::0;::::1;;;;;;;;28273:40;;;;;;;;;;;;28340:1;28323:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;28204:145::o:0;687:86:0:-;739:7;761;:5;:7::i;:::-;754:14;;687:86;:::o;27581:77:1:-;27619:7;27645:6;;;;;;;;;;;27638:13;;27581:77;:::o;965:90:0:-;1015:13;1043:7;1036:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:90;:::o;4480:117::-;4536:4;27795:12:1;:10;:12::i;:::-;27785:22;;:6;;;;;;;;;;:22;;;27777:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4548:27:0::1;4554:12;:10;:12::i;:::-;4568:6;4548:5;:27::i;:::-;4588:4;4581:11;;4480:117:::0;;;:::o;4042:248::-;4127:4;4139:129;4148:12;:10;:12::i;:::-;4162:7;4171:96;4210:15;4171:96;;;;;;;;;;;;;;;;;:11;:25;4183:12;:10;:12::i;:::-;4171:25;;;;;;;;;;;;;;;:34;4197:7;4171:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4139:8;:129::i;:::-;4281:4;4274:11;;4042:248;;;;:::o;1680:156::-;1760:4;1772:42;1782:12;:10;:12::i;:::-;1796:9;1807:6;1772:9;:42::i;:::-;1827:4;1820:11;;1680:156;;;;:::o;350:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;375:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1885:137::-;1968:7;1990:11;:18;2002:5;1990:18;;;;;;;;;;;;;;;:27;2009:7;1990:27;;;;;;;;;;;;;;;;1983:34;;1885:137;;;;:::o;28498:240:1:-;27795:12;:10;:12::i;:::-;27785:22;;:6;;;;;;;;;;:22;;;27777:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28606:1:::1;28586:22;;:8;:22;;;;28578:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28695:8;28666:38;;28687:6;::::0;::::1;;;;;;;;28666:38;;;;;;;;;;;;28723:8;28714:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;28498:240:::0;:::o;26178:104::-;26231:15;26265:10;26258:17;;26178:104;:::o;7220:314:0:-;7326:1;7309:19;;:5;:19;;;;7301:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7402:1;7383:21;;:7;:21;;;;7375:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7480:6;7450:11;:18;7462:5;7450:18;;;;;;;;;;;;;;;:27;7469:7;7450:27;;;;;;;;;;;;;;;:36;;;;7513:7;7497:32;;7506:5;7497:32;;;7522:6;7497:32;;;;;;;;;;;;;;;;;;7220:314;;;:::o;5228:442::-;5339:1;5321:20;;:6;:20;;;;5313:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5418:1;5397:23;;:9;:23;;;;5389:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5487;5509:6;5487:71;;;;;;;;;;;;;;;;;:9;:17;5497:6;5487:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5467:9;:17;5477:6;5467:17;;;;;;;;;;;;;;;:91;;;;5587:32;5612:6;5587:9;:20;5597:9;5587:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5564:9;:20;5574:9;5564:20;;;;;;;;;;;;;;;:55;;;;5647:9;5630:35;;5639:6;5630:35;;;5658:6;5630:35;;;;;;;;;;;;;;;;;;5228:442;;;:::o;4544:187:1:-;4630:7;4662:1;4657;:6;;4665:12;4649:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4688:9;4704:1;4700;:5;4688:17;;4723:1;4716:8;;;4544:187;;;;;:::o;3672:176::-;3730:7;3749:9;3765:1;3761;:5;3749:17;;3789:1;3784;:6;;3776:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3840:1;3833:8;;;3672:176;;;;:::o;6499:324:0:-;6589:1;6570:21;;:7;:21;;;;6562:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6657:68;6680:6;6657:68;;;;;;;;;;;;;;;;;:9;:18;6667:7;6657:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;6636:9;:18;6646:7;6636:18;;;;;;;;;;;;;;;:89;;;;6746:24;6763:6;6746:12;;:16;;:24;;;;:::i;:::-;6731:12;:39;;;;6807:1;6781:37;;6790:7;6781:37;;;6811:6;6781:37;;;;;;;;;;;;;;;;;;6499:324;;:::o;5920:284::-;6010:1;5991:21;;:7;:21;;;;5983:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6070:24;6087:6;6070:12;;:16;;:24;;;;:::i;:::-;6055:12;:39;;;;6121:30;6144:6;6121:9;:18;6131:7;6121:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6100:9;:18;6110:7;6100:18;;;;;;;;;;;;;;;:51;;;;6183:7;6162:37;;6179:1;6162:37;;;6192:6;6162:37;;;;;;;;;;;;;;;;;;5920:284;;:::o;4119:134:1:-;4177:7;4203:43;4207:1;4210;4203:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;4196:50;;4119:134;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1536600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_decimals()": "1070",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1285",
								"burn(uint256)": "infinite",
								"decimals()": "1167",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1113",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1100",
								"renounceOwnership()": "24402",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 399,
									"end": 632,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 399,
									"end": 632,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 399,
									"end": 632,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 399,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 632,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 399,
									"end": 632,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 632,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 399,
									"end": 632,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 399,
									"end": 632,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 632,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 399,
									"end": 632,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27380,
									"end": 27397,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 27400,
									"end": 27412,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 27400,
									"end": 27410,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 27400,
									"end": 27410,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 27400,
									"end": 27410,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 27400,
									"end": 27412,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 27400,
									"end": 27412,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 27400,
									"end": 27412,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 27400,
									"end": 27412,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 27400,
									"end": 27412,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 27380,
									"end": 27412,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27380,
									"end": 27412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 27431,
									"end": 27440,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27428,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 27422,
									"end": 27428,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 27422,
									"end": 27440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 27488,
									"end": 27497,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27484,
									"end": 27485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27455,
									"end": 27498,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 27346,
									"end": 27505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 426,
									"end": 449,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 426,
									"end": 449,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 426,
									"end": 449,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 426,
									"end": 449,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 426,
									"end": 449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 426,
									"end": 449,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "PUSH",
									"source": 0,
									"value": "506F6C6172414920546F6B656E00000000000000000000000000000000000000"
								},
								{
									"begin": 426,
									"end": 449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 426,
									"end": 431,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 426,
									"end": 449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 426,
									"end": 449,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 449,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 426,
									"end": 449,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 449,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 426,
									"end": 449,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 455,
									"end": 470,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 455,
									"end": 470,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 455,
									"end": 470,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 455,
									"end": 470,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 455,
									"end": 470,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "PUSH",
									"source": 0,
									"value": "5041540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 455,
									"end": 470,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 455,
									"end": 462,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 455,
									"end": 470,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 455,
									"end": 470,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 455,
									"end": 470,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 455,
									"end": 470,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 455,
									"end": 470,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 455,
									"end": 470,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 455,
									"end": 470,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 476,
									"end": 485,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 476,
									"end": 485,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 476,
									"end": 490,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 476,
									"end": 490,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 476,
									"end": 490,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 476,
									"end": 490,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 476,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 476,
									"end": 490,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 476,
									"end": 490,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 476,
									"end": 490,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 476,
									"end": 490,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 476,
									"end": 490,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 476,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 476,
									"end": 490,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 476,
									"end": 490,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 476,
									"end": 490,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 476,
									"end": 490,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 476,
									"end": 490,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 476,
									"end": 490,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 511,
									"end": 527,
									"name": "PUSH",
									"source": 0,
									"value": "1DC74BE914D16AA400000"
								},
								{
									"begin": 496,
									"end": 508,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 496,
									"end": 527,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 496,
									"end": 527,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 496,
									"end": 527,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 496,
									"end": 527,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 557,
									"end": 569,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 557,
									"end": 569,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 533,
									"end": 542,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 554,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 543,
									"end": 553,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 533,
									"end": 554,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 533,
									"end": 554,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 533,
									"end": 554,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 533,
									"end": 554,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 533,
									"end": 554,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 533,
									"end": 554,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 533,
									"end": 554,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 533,
									"end": 554,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 533,
									"end": 554,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 533,
									"end": 554,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 533,
									"end": 554,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 533,
									"end": 554,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 533,
									"end": 554,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 533,
									"end": 554,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 554,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 533,
									"end": 569,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 533,
									"end": 569,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 533,
									"end": 569,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 533,
									"end": 569,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 602,
									"end": 612,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 581,
									"end": 627,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 598,
									"end": 599,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 581,
									"end": 627,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 581,
									"end": 627,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 614,
									"end": 626,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 614,
									"end": 626,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 581,
									"end": 627,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 581,
									"end": 627,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 581,
									"end": 627,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 627,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26178,
									"end": 26282,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 26178,
									"end": 26282,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 26231,
									"end": 26246,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 26265,
									"end": 26275,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 26258,
									"end": 26275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 26258,
									"end": 26275,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 26178,
									"end": 26282,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 26178,
									"end": 26282,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 7919,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122043976d795e318dfc4fe1d57f530f0a8810e9bb4f37e8e3915af564caf5372e5e64736f6c634300060c0033",
									".code": [
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "B09F1266"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "D28D8852"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "32424AA3"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "32424AA3"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 7919,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 827,
											"end": 913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 827,
											"end": 913,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 827,
											"end": 913,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 827,
											"end": 913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 324,
											"end": 346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 324,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 324,
											"end": 346,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 324,
											"end": 346,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 324,
											"end": 346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 324,
											"end": 346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 687,
											"end": 773,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 687,
											"end": 773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 687,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 687,
											"end": 773,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 773,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 687,
											"end": 773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 687,
											"end": 773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1189,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2241,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2241,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2241,
											"end": 2253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2241,
											"end": 2253,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2241,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2262,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2232,
											"end": 2271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2232,
											"end": 2271,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2232,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2288,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2277,
											"end": 2288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2293,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1334,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2846,
											"end": 2852,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2863,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2871,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2836,
											"end": 2872,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2836,
											"end": 2872,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2836,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2887,
											"end": 2893,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2895,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2895,
											"end": 2907,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2895,
											"end": 2907,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2895,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "PUSH data",
											"source": 0,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2920,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 2927,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2929,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2909,
											"end": 2946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2909,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2878,
											"end": 2999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2878,
											"end": 2999,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2878,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3005,
											"end": 3016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 3021,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 827,
											"end": 913,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 827,
											"end": 913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 879,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 908,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 899,
											"end": 908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 899,
											"end": 908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 899,
											"end": 908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 899,
											"end": 908,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 899,
											"end": 908,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 899,
											"end": 908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 899,
											"end": 908,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 899,
											"end": 908,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 899,
											"end": 908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 892,
											"end": 908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 892,
											"end": 908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 913,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 324,
											"end": 346,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 324,
											"end": 346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 324,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 324,
											"end": 346,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 324,
											"end": 346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 324,
											"end": 346,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3490,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3490,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3490,
											"end": 3502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3490,
											"end": 3502,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3490,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3504,
											"end": 3511,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3552,
											"end": 3562,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3513,
											"end": 3538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3525,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3525,
											"end": 3537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3525,
											"end": 3537,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3525,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3513,
											"end": 3538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3513,
											"end": 3538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3513,
											"end": 3538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3513,
											"end": 3538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3538,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3546,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3513,
											"end": 3551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3563,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3513,
											"end": 3563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3563,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3513,
											"end": 3563,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3513,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3481,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3481,
											"end": 3564,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3481,
											"end": 3564,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3481,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3581,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3570,
											"end": 3581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3586,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4741,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4741,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4741,
											"end": 4753,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4741,
											"end": 4753,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4741,
											"end": 4753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4755,
											"end": 4761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4735,
											"end": 4762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4735,
											"end": 4762,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4735,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 4779,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4768,
											"end": 4779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4784,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1490,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1496,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 27795,
											"end": 27805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28310,
											"end": 28311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28294,
											"end": 28300,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28313,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 28340,
											"end": 28341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28323,
											"end": 28329,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 28323,
											"end": 28342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28204,
											"end": 28349,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 687,
											"end": 773,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 687,
											"end": 773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 739,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 761,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 761,
											"end": 768,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 761,
											"end": 768,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 761,
											"end": 768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 754,
											"end": 768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 773,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27619,
											"end": 27626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27645,
											"end": 27651,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27638,
											"end": 27651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27638,
											"end": 27651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27581,
											"end": 27658,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1015,
											"end": 1028,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1043,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1055,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 4540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 27795,
											"end": 27805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4554,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4554,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4554,
											"end": 4566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4554,
											"end": 4566,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4554,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4548,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4548,
											"end": 4575,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4548,
											"end": 4575,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4548,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4592,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4581,
											"end": 4592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4581,
											"end": 4592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4597,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4148,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4148,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4148,
											"end": 4160,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4148,
											"end": 4160,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4148,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4169,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4210,
											"end": 4225,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "PUSH data",
											"source": 0,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4183,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4204,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4171,
											"end": 4209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4171,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4139,
											"end": 4268,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4139,
											"end": 4268,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4139,
											"end": 4268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4285,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4274,
											"end": 4285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4274,
											"end": 4285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4290,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1782,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1805,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1772,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1831,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1820,
											"end": 1831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1836,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 371,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 394,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 1975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2001,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2007,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2016,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 2017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 2017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 2022,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 27795,
											"end": 27805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 27795,
											"end": 27807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27785,
											"end": 27807,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 27777,
											"end": 27844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28606,
											"end": 28607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28586,
											"end": 28608,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28586,
											"end": 28608,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28586,
											"end": 28594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28586,
											"end": 28608,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28586,
											"end": 28608,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28586,
											"end": 28608,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28586,
											"end": 28608,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH data",
											"source": 1,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 28578,
											"end": 28651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28695,
											"end": 28703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28687,
											"end": 28693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28704,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 28723,
											"end": 28731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28714,
											"end": 28720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 28714,
											"end": 28731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28498,
											"end": 28738,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26178,
											"end": 26282,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 26178,
											"end": 26282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26231,
											"end": 26246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26265,
											"end": 26275,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 26258,
											"end": 26275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26258,
											"end": 26275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26178,
											"end": 26282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26178,
											"end": 26282,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7220,
											"end": 7534,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7220,
											"end": 7534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7326,
											"end": 7327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7309,
											"end": 7328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7309,
											"end": 7328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7314,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7309,
											"end": 7328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7328,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7328,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "PUSH data",
											"source": 0,
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7301,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7402,
											"end": 7403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7383,
											"end": 7404,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7383,
											"end": 7404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7404,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7383,
											"end": 7404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7404,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "PUSH data",
											"source": 0,
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7375,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7461,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7462,
											"end": 7467,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 7476,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7477,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7450,
											"end": 7477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7477,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7450,
											"end": 7477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7450,
											"end": 7477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7450,
											"end": 7477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7450,
											"end": 7477,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7486,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7486,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7513,
											"end": 7520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7506,
											"end": 7511,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7522,
											"end": 7528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7529,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 7220,
											"end": 7534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7220,
											"end": 7534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7220,
											"end": 7534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7220,
											"end": 7534,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5228,
											"end": 5670,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5228,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5339,
											"end": 5340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5321,
											"end": 5341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5321,
											"end": 5341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5321,
											"end": 5327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5321,
											"end": 5341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5321,
											"end": 5341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5321,
											"end": 5341,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5321,
											"end": 5341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "PUSH data",
											"source": 0,
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5313,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5418,
											"end": 5419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5397,
											"end": 5420,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5420,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5420,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5420,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "PUSH data",
											"source": 0,
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "PUSH data",
											"source": 0,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5496,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5487,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5487,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5476,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5467,
											"end": 5484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5467,
											"end": 5484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5467,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5467,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5467,
											"end": 5484,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5612,
											"end": 5618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5596,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5606,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5607,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5587,
											"end": 5611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5587,
											"end": 5619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5587,
											"end": 5619,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5587,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5583,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5619,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5647,
											"end": 5656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5658,
											"end": 5664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5670,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4662,
											"end": 4663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4663,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4663,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4704,
											"end": 4705,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4701,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4705,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3730,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3762,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3789,
											"end": 3790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6499,
											"end": 6823,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6499,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6589,
											"end": 6590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6591,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6577,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6591,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6591,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6591,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "PUSH data",
											"source": 0,
											"value": "B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855"
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6562,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6680,
											"end": 6686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "PUSH data",
											"source": 0,
											"value": "DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032"
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6666,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6667,
											"end": 6674,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6657,
											"end": 6679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6657,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6636,
											"end": 6645,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6636,
											"end": 6725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6636,
											"end": 6725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6636,
											"end": 6725,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6636,
											"end": 6725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6746,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 6763,
											"end": 6769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6746,
											"end": 6758,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6746,
											"end": 6758,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6746,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 6746,
											"end": 6762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6746,
											"end": 6770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6746,
											"end": 6770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6746,
											"end": 6770,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6746,
											"end": 6770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6746,
											"end": 6770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6746,
											"end": 6770,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 6746,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6731,
											"end": 6743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6731,
											"end": 6770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6731,
											"end": 6770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6731,
											"end": 6770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6731,
											"end": 6770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6790,
											"end": 6797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6811,
											"end": 6817,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6823,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5920,
											"end": 6204,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5920,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5991,
											"end": 5998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "PUSH",
											"source": 0,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5983,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6070,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6087,
											"end": 6093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6070,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6070,
											"end": 6082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6070,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6070,
											"end": 6086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6070,
											"end": 6094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6070,
											"end": 6094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6070,
											"end": 6094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6070,
											"end": 6094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6070,
											"end": 6094,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6070,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6055,
											"end": 6067,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6055,
											"end": 6094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6055,
											"end": 6094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6055,
											"end": 6094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6055,
											"end": 6094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 6144,
											"end": 6150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6131,
											"end": 6138,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6121,
											"end": 6143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6121,
											"end": 6151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6121,
											"end": 6151,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 6121,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6109,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6110,
											"end": 6117,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6151,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6192,
											"end": 6198,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5920,
											"end": 6204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5920,
											"end": 6204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5920,
											"end": 6204,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4119,
											"end": 4253,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4119,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4177,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4207,
											"end": 4208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4203,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4253,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4253,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_decimals()": "32424aa3",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/BEP20-PolarCoin.sol\":\"BEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/BEP20-PolarCoin.sol\":{\"keccak256\":\"0x5d03ed7c18395a7f544f2335ff8677f0fa6e687b3f4f3e3f7aff7473e01201e4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4051a77da4121ed186b13258a893302f8ed441558131e25625f247624879b198\",\"dweb:/ipfs/QmeXRKEBJa7DqPkEVRRmLp3Pnkh5HS78DULbgeTprHvxkL\"]},\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1660,
								"contract": "PolarAI/BEP20-PolarCoin.sol:BEP20",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 15,
								"contract": "PolarAI/BEP20-PolarCoin.sol:BEP20",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "PolarAI/BEP20-PolarCoin.sol:BEP20",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "PolarAI/BEP20-PolarCoin.sol:BEP20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "PolarAI/BEP20-PolarCoin.sol:BEP20",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 27,
								"contract": "PolarAI/BEP20-PolarCoin.sol:BEP20",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 29,
								"contract": "PolarAI/BEP20-PolarCoin.sol:BEP20",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"PolarAI/interface.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PolarAI/interface.sol\":8147:14098  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"PolarAI/interface.sol\":8147:14098  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205eae4f7d5f0761607e41e0663e4b5971ced4a6ac232b2d3872c055afae6982f364736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205eae4f7d5f0761607e41e0663e4b5971ced4a6ac232b2d3872c055afae6982f364736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xAE 0x4F PUSH30 0x5F0761607E41E0663E4B5971CED4A6AC232B2D3872C055AFAE6982F36473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "8147:5951:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205eae4f7d5f0761607e41e0663e4b5971ced4a6ac232b2d3872c055afae6982f364736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xAE 0x4F PUSH30 0x5F0761607E41E0663E4B5971CED4A6AC232B2D3872C055AFAE6982F36473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "8147:5951:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8147,
									"end": 14098,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 14098,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205eae4f7d5f0761607e41e0663e4b5971ced4a6ac232b2d3872c055afae6982f364736f6c634300060c0033",
									".code": [
										{
											"begin": 8147,
											"end": 14098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 8147,
											"end": 14098,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 8147,
											"end": 14098,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8147,
											"end": 14098,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8147,
											"end": 14098,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8147,
											"end": 14098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8147,
											"end": 14098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8147,
											"end": 14098,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8147,
											"end": 14098,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PolarAI/interface.sol\":29992:39438  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"PolarAI/interface.sol\":30660:30801  constructor (string memory name, string memory symbol) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"PolarAI/interface.sol\":30740:30744  name */\n  dup2\n    /* \"PolarAI/interface.sol\":30732:30737  _name */\n  0x03\n    /* \"PolarAI/interface.sol\":30732:30744  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"PolarAI/interface.sol\":30764:30770  symbol */\n  dup1\n    /* \"PolarAI/interface.sol\":30754:30761  _symbol */\n  0x04\n    /* \"PolarAI/interface.sol\":30754:30770  _symbol = symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"PolarAI/interface.sol\":30792:30794  18 */\n  0x12\n    /* \"PolarAI/interface.sol\":30780:30789  _decimals */\n  0x05\n  0x00\n    /* \"PolarAI/interface.sol\":30780:30794  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"PolarAI/interface.sol\":30660:30801  constructor (string memory name, string memory symbol) public {... */\n  pop\n  pop\n    /* \"PolarAI/interface.sol\":29992:39438  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_29)\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"PolarAI/interface.sol\":29992:39438  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"PolarAI/interface.sol\":30866:30947  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":32902:33068  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":31909:32007  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":33528:33845  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":31768:31849  function decimals() public view returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":34240:34455  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":32065:32182  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":31060:31145  function symbol() public view returns (string memory) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_39:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_39)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":34942:35208  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":32385:32557  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":32615:32764  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PolarAI/interface.sol\":30866:30947  function name() public view returns (string memory) {... */\n    tag_16:\n        /* \"PolarAI/interface.sol\":30903:30916  string memory */\n      0x60\n        /* \"PolarAI/interface.sol\":30935:30940  _name */\n      0x03\n        /* \"PolarAI/interface.sol\":30928:30940  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":30866:30947  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":32902:33068  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"PolarAI/interface.sol\":32985:32989  bool */\n      0x00\n        /* \"PolarAI/interface.sol\":33001:33040  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"PolarAI/interface.sol\":33010:33022  _msgSender() */\n      tag_58\n        /* \"PolarAI/interface.sol\":33010:33020  _msgSender */\n      tag_59\n        /* \"PolarAI/interface.sol\":33010:33022  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"PolarAI/interface.sol\":33024:33031  spender */\n      dup5\n        /* \"PolarAI/interface.sol\":33033:33039  amount */\n      dup5\n        /* \"PolarAI/interface.sol\":33001:33009  _approve */\n      tag_60\n        /* \"PolarAI/interface.sol\":33001:33040  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n        /* \"PolarAI/interface.sol\":33057:33061  true */\n      0x01\n        /* \"PolarAI/interface.sol\":33050:33061  return true */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":32902:33068  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":31909:32007  function totalSupply() public view override returns (uint256) {... */\n    tag_25:\n        /* \"PolarAI/interface.sol\":31962:31969  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":31988:32000  _totalSupply */\n      sload(0x02)\n        /* \"PolarAI/interface.sol\":31981:32000  return _totalSupply */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":31909:32007  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":33528:33845  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"PolarAI/interface.sol\":33634:33638  bool */\n      0x00\n        /* \"PolarAI/interface.sol\":33650:33686  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"PolarAI/interface.sol\":33660:33666  sender */\n      dup5\n        /* \"PolarAI/interface.sol\":33668:33677  recipient */\n      dup5\n        /* \"PolarAI/interface.sol\":33679:33685  amount */\n      dup5\n        /* \"PolarAI/interface.sol\":33650:33659  _transfer */\n      tag_64\n        /* \"PolarAI/interface.sol\":33650:33686  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"PolarAI/interface.sol\":33696:33817  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"PolarAI/interface.sol\":33705:33711  sender */\n      dup5\n        /* \"PolarAI/interface.sol\":33713:33725  _msgSender() */\n      tag_66\n        /* \"PolarAI/interface.sol\":33713:33723  _msgSender */\n      tag_59\n        /* \"PolarAI/interface.sol\":33713:33725  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"PolarAI/interface.sol\":33727:33816  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"PolarAI/interface.sol\":33765:33771  amount */\n      dup6\n        /* \"PolarAI/interface.sol\":33727:33816  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"PolarAI/interface.sol\":33727:33738  _allowances */\n      0x01\n        /* \"PolarAI/interface.sol\":33727:33746  _allowances[sender] */\n      0x00\n        /* \"PolarAI/interface.sol\":33739:33745  sender */\n      dup12\n        /* \"PolarAI/interface.sol\":33727:33746  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":33727:33760  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"PolarAI/interface.sol\":33747:33759  _msgSender() */\n      tag_68\n        /* \"PolarAI/interface.sol\":33747:33757  _msgSender */\n      tag_59\n        /* \"PolarAI/interface.sol\":33747:33759  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"PolarAI/interface.sol\":33727:33760  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":33727:33764  _allowances[sender][_msgSender()].sub */\n      tag_69\n      swap1\n        /* \"PolarAI/interface.sol\":33727:33816  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"PolarAI/interface.sol\":33696:33704  _approve */\n      tag_60\n        /* \"PolarAI/interface.sol\":33696:33817  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n        /* \"PolarAI/interface.sol\":33834:33838  true */\n      0x01\n        /* \"PolarAI/interface.sol\":33827:33838  return true */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":33528:33845  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":31768:31849  function decimals() public view returns (uint8) {... */\n    tag_30:\n        /* \"PolarAI/interface.sol\":31809:31814  uint8 */\n      0x00\n        /* \"PolarAI/interface.sol\":31833:31842  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"PolarAI/interface.sol\":31826:31842  return _decimals */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":31768:31849  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":34240:34455  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"PolarAI/interface.sol\":34328:34332  bool */\n      0x00\n        /* \"PolarAI/interface.sol\":34344:34427  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_72\n        /* \"PolarAI/interface.sol\":34353:34365  _msgSender() */\n      tag_73\n        /* \"PolarAI/interface.sol\":34353:34363  _msgSender */\n      tag_59\n        /* \"PolarAI/interface.sol\":34353:34365  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"PolarAI/interface.sol\":34367:34374  spender */\n      dup5\n        /* \"PolarAI/interface.sol\":34376:34426  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_74\n        /* \"PolarAI/interface.sol\":34415:34425  addedValue */\n      dup6\n        /* \"PolarAI/interface.sol\":34376:34387  _allowances */\n      0x01\n        /* \"PolarAI/interface.sol\":34376:34401  _allowances[_msgSender()] */\n      0x00\n        /* \"PolarAI/interface.sol\":34388:34400  _msgSender() */\n      tag_75\n        /* \"PolarAI/interface.sol\":34388:34398  _msgSender */\n      tag_59\n        /* \"PolarAI/interface.sol\":34388:34400  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"PolarAI/interface.sol\":34376:34401  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":34376:34410  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"PolarAI/interface.sol\":34402:34409  spender */\n      dup10\n        /* \"PolarAI/interface.sol\":34376:34410  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":34376:34414  _allowances[_msgSender()][spender].add */\n      tag_76\n      swap1\n        /* \"PolarAI/interface.sol\":34376:34426  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"PolarAI/interface.sol\":34344:34352  _approve */\n      tag_60\n        /* \"PolarAI/interface.sol\":34344:34427  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_72:\n        /* \"PolarAI/interface.sol\":34444:34448  true */\n      0x01\n        /* \"PolarAI/interface.sol\":34437:34448  return true */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":34240:34455  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":32065:32182  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_36:\n        /* \"PolarAI/interface.sol\":32131:32138  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":32157:32166  _balances */\n      dup1\n        /* \"PolarAI/interface.sol\":32157:32175  _balances[account] */\n      0x00\n        /* \"PolarAI/interface.sol\":32167:32174  account */\n      dup4\n        /* \"PolarAI/interface.sol\":32157:32175  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":32150:32175  return _balances[account] */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":32065:32182  function balanceOf(address account) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":31060:31145  function symbol() public view returns (string memory) {... */\n    tag_38:\n        /* \"PolarAI/interface.sol\":31099:31112  string memory */\n      0x60\n        /* \"PolarAI/interface.sol\":31131:31138  _symbol */\n      0x04\n        /* \"PolarAI/interface.sol\":31124:31138  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":31060:31145  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":34942:35208  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"PolarAI/interface.sol\":35035:35039  bool */\n      0x00\n        /* \"PolarAI/interface.sol\":35051:35180  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_83\n        /* \"PolarAI/interface.sol\":35060:35072  _msgSender() */\n      tag_84\n        /* \"PolarAI/interface.sol\":35060:35070  _msgSender */\n      tag_59\n        /* \"PolarAI/interface.sol\":35060:35072  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"PolarAI/interface.sol\":35074:35081  spender */\n      dup5\n        /* \"PolarAI/interface.sol\":35083:35179  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_85\n        /* \"PolarAI/interface.sol\":35122:35137  subtractedValue */\n      dup6\n        /* \"PolarAI/interface.sol\":35083:35179  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"PolarAI/interface.sol\":35083:35094  _allowances */\n      0x01\n        /* \"PolarAI/interface.sol\":35083:35108  _allowances[_msgSender()] */\n      0x00\n        /* \"PolarAI/interface.sol\":35095:35107  _msgSender() */\n      tag_86\n        /* \"PolarAI/interface.sol\":35095:35105  _msgSender */\n      tag_59\n        /* \"PolarAI/interface.sol\":35095:35107  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"PolarAI/interface.sol\":35083:35108  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":35083:35117  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"PolarAI/interface.sol\":35109:35116  spender */\n      dup11\n        /* \"PolarAI/interface.sol\":35083:35117  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":35083:35121  _allowances[_msgSender()][spender].sub */\n      tag_69\n      swap1\n        /* \"PolarAI/interface.sol\":35083:35179  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"PolarAI/interface.sol\":35051:35059  _approve */\n      tag_60\n        /* \"PolarAI/interface.sol\":35051:35180  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_83:\n        /* \"PolarAI/interface.sol\":35197:35201  true */\n      0x01\n        /* \"PolarAI/interface.sol\":35190:35201  return true */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":34942:35208  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":32385:32557  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"PolarAI/interface.sol\":32471:32475  bool */\n      0x00\n        /* \"PolarAI/interface.sol\":32487:32529  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \"PolarAI/interface.sol\":32497:32509  _msgSender() */\n      tag_89\n        /* \"PolarAI/interface.sol\":32497:32507  _msgSender */\n      tag_59\n        /* \"PolarAI/interface.sol\":32497:32509  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"PolarAI/interface.sol\":32511:32520  recipient */\n      dup5\n        /* \"PolarAI/interface.sol\":32522:32528  amount */\n      dup5\n        /* \"PolarAI/interface.sol\":32487:32496  _transfer */\n      tag_64\n        /* \"PolarAI/interface.sol\":32487:32529  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"PolarAI/interface.sol\":32546:32550  true */\n      0x01\n        /* \"PolarAI/interface.sol\":32539:32550  return true */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":32385:32557  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":32615:32764  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n        /* \"PolarAI/interface.sol\":32704:32711  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":32730:32741  _allowances */\n      0x01\n        /* \"PolarAI/interface.sol\":32730:32748  _allowances[owner] */\n      0x00\n        /* \"PolarAI/interface.sol\":32742:32747  owner */\n      dup5\n        /* \"PolarAI/interface.sol\":32730:32748  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":32730:32757  _allowances[owner][spender] */\n      0x00\n        /* \"PolarAI/interface.sol\":32749:32756  spender */\n      dup4\n        /* \"PolarAI/interface.sol\":32730:32757  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":32723:32757  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":32615:32764  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":26178:26282  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"PolarAI/interface.sol\":26231:26246  address payable */\n      0x00\n        /* \"PolarAI/interface.sol\":26265:26275  msg.sender */\n      caller\n        /* \"PolarAI/interface.sol\":26258:26275  return msg.sender */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":26178:26282  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"PolarAI/interface.sol\":38006:38346  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n        /* \"PolarAI/interface.sol\":38124:38125  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":38107:38126  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":38107:38112  owner */\n      dup4\n        /* \"PolarAI/interface.sol\":38107:38126  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/interface.sol\":38099:38167  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"PolarAI/interface.sol\":38204:38205  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":38185:38206  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":38185:38192  spender */\n      dup3\n        /* \"PolarAI/interface.sol\":38185:38206  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/interface.sol\":38177:38245  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"PolarAI/interface.sol\":38286:38292  amount */\n      dup1\n        /* \"PolarAI/interface.sol\":38256:38267  _allowances */\n      0x01\n        /* \"PolarAI/interface.sol\":38256:38274  _allowances[owner] */\n      0x00\n        /* \"PolarAI/interface.sol\":38268:38273  owner */\n      dup6\n        /* \"PolarAI/interface.sol\":38256:38274  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":38256:38283  _allowances[owner][spender] */\n      0x00\n        /* \"PolarAI/interface.sol\":38275:38282  spender */\n      dup5\n        /* \"PolarAI/interface.sol\":38256:38283  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":38256:38292  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/interface.sol\":38323:38330  spender */\n      dup2\n        /* \"PolarAI/interface.sol\":38307:38339  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":38316:38321  owner */\n      dup4\n        /* \"PolarAI/interface.sol\":38307:38339  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"PolarAI/interface.sol\":38332:38338  amount */\n      dup4\n        /* \"PolarAI/interface.sol\":38307:38339  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PolarAI/interface.sol\":38006:38346  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":35682:36212  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n        /* \"PolarAI/interface.sol\":35805:35806  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":35787:35807  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":35787:35793  sender */\n      dup4\n        /* \"PolarAI/interface.sol\":35787:35807  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/interface.sol\":35779:35849  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"PolarAI/interface.sol\":35888:35889  0 */\n      0x00\n        /* \"PolarAI/interface.sol\":35867:35890  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":35867:35876  recipient */\n      dup3\n        /* \"PolarAI/interface.sol\":35867:35890  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PolarAI/interface.sol\":35859:35930  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"PolarAI/interface.sol\":35941:35988  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"PolarAI/interface.sol\":35962:35968  sender */\n      dup4\n        /* \"PolarAI/interface.sol\":35970:35979  recipient */\n      dup4\n        /* \"PolarAI/interface.sol\":35981:35987  amount */\n      dup4\n        /* \"PolarAI/interface.sol\":35941:35961  _beforeTokenTransfer */\n      tag_99\n        /* \"PolarAI/interface.sol\":35941:35988  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"PolarAI/interface.sol\":36019:36090  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"PolarAI/interface.sol\":36041:36047  amount */\n      dup2\n        /* \"PolarAI/interface.sol\":36019:36090  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"PolarAI/interface.sol\":36019:36028  _balances */\n      0x00\n        /* \"PolarAI/interface.sol\":36019:36036  _balances[sender] */\n      dup1\n        /* \"PolarAI/interface.sol\":36029:36035  sender */\n      dup8\n        /* \"PolarAI/interface.sol\":36019:36036  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":36019:36040  _balances[sender].sub */\n      tag_69\n      swap1\n        /* \"PolarAI/interface.sol\":36019:36090  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"PolarAI/interface.sol\":35999:36008  _balances */\n      0x00\n        /* \"PolarAI/interface.sol\":35999:36016  _balances[sender] */\n      dup1\n        /* \"PolarAI/interface.sol\":36009:36015  sender */\n      dup6\n        /* \"PolarAI/interface.sol\":35999:36016  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":35999:36090  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/interface.sol\":36123:36155  _balances[recipient].add(amount) */\n      tag_101\n        /* \"PolarAI/interface.sol\":36148:36154  amount */\n      dup2\n        /* \"PolarAI/interface.sol\":36123:36132  _balances */\n      0x00\n        /* \"PolarAI/interface.sol\":36123:36143  _balances[recipient] */\n      dup1\n        /* \"PolarAI/interface.sol\":36133:36142  recipient */\n      dup6\n        /* \"PolarAI/interface.sol\":36123:36143  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PolarAI/interface.sol\":36123:36147  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"PolarAI/interface.sol\":36123:36155  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"PolarAI/interface.sol\":36100:36109  _balances */\n      0x00\n        /* \"PolarAI/interface.sol\":36100:36120  _balances[recipient] */\n      dup1\n        /* \"PolarAI/interface.sol\":36110:36119  recipient */\n      dup5\n        /* \"PolarAI/interface.sol\":36100:36120  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PolarAI/interface.sol\":36100:36155  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PolarAI/interface.sol\":36187:36196  recipient */\n      dup2\n        /* \"PolarAI/interface.sol\":36170:36205  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PolarAI/interface.sol\":36179:36185  sender */\n      dup4\n        /* \"PolarAI/interface.sol\":36170:36205  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"PolarAI/interface.sol\":36198:36204  amount */\n      dup4\n        /* \"PolarAI/interface.sol\":36170:36205  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PolarAI/interface.sol\":35682:36212  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":4544:4731  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"PolarAI/interface.sol\":4630:4637  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":4662:4663  a */\n      dup4\n        /* \"PolarAI/interface.sol\":4657:4658  b */\n      dup4\n        /* \"PolarAI/interface.sol\":4657:4663  b <= a */\n      gt\n      iszero\n        /* \"PolarAI/interface.sol\":4665:4677  errorMessage */\n      dup3\n        /* \"PolarAI/interface.sol\":4649:4678  require(b <= a, errorMessage) */\n      swap1\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n        /* \"PolarAI/interface.sol\":4688:4697  uint256 c */\n      0x00\n        /* \"PolarAI/interface.sol\":4704:4705  b */\n      dup4\n        /* \"PolarAI/interface.sol\":4700:4701  a */\n      dup6\n        /* \"PolarAI/interface.sol\":4700:4705  a - b */\n      sub\n        /* \"PolarAI/interface.sol\":4688:4705  uint256 c = a - b */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":4723:4724  c */\n      dup1\n        /* \"PolarAI/interface.sol\":4716:4724  return c */\n      swap2\n      pop\n      pop\n        /* \"PolarAI/interface.sol\":4544:4731  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":3672:3848  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"PolarAI/interface.sol\":3730:3737  uint256 */\n      0x00\n        /* \"PolarAI/interface.sol\":3749:3758  uint256 c */\n      dup1\n        /* \"PolarAI/interface.sol\":3765:3766  b */\n      dup3\n        /* \"PolarAI/interface.sol\":3761:3762  a */\n      dup5\n        /* \"PolarAI/interface.sol\":3761:3766  a + b */\n      add\n        /* \"PolarAI/interface.sol\":3749:3766  uint256 c = a + b */\n      swap1\n      pop\n        /* \"PolarAI/interface.sol\":3789:3790  a */\n      dup4\n        /* \"PolarAI/interface.sol\":3784:3785  c */\n      dup2\n        /* \"PolarAI/interface.sol\":3784:3790  c >= a */\n      lt\n      iszero\n        /* \"PolarAI/interface.sol\":3776:3822  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"PolarAI/interface.sol\":3840:3841  c */\n      dup1\n        /* \"PolarAI/interface.sol\":3833:3841  return c */\n      swap2\n      pop\n      pop\n        /* \"PolarAI/interface.sol\":3672:3848  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PolarAI/interface.sol\":39344:39436  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122080981dddbdf91fe57a1b3dd26a19c569065df9843f9f18d2fe29e5cdf2b76d5964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620013a5380380620013a5833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd9291906200020b565b508060049080519060200190620001e69291906200020b565b506012600560006101000a81548160ff021916908360ff1602179055505050620002b1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024e57805160ff19168380011785556200027f565b828001600101855582156200027f579182015b828111156200027e57825182559160200191906001019062000261565b5b5090506200028e919062000292565b5090565b5b80821115620002ad57600081600090555060010162000293565b5090565b6110e480620002c16000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101960289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2090919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108a60259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110666024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fd16022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110416025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fae6023913960400191505060405180910390fd5b610cb6838383610fa8565b610d2181604051806060016040528060268152602001610ff3602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2090919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610f9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122080981dddbdf91fe57a1b3dd26a19c569065df9843f9f18d2fe29e5cdf2b76d5964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13A5 CODESIZE SUB DUP1 PUSH3 0x13A5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2B1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x24E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x27F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x27F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x27E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x28E SWAP2 SWAP1 PUSH3 0x292 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2AD JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x293 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x10E4 DUP1 PUSH3 0x2C1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1019 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1066 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFD1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1041 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFAE PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFF3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212208098 SAR 0xDD 0xBD 0xF9 0x1F 0xE5 PUSH27 0x1B3DD26A19C569065DF9843F9F18D2FE29E5CDF2B76D5964736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "29992:9446:1:-:0;;;30660:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30740:4;30732:5;:12;;;;;;;;;;;;:::i;:::-;;30764:6;30754:7;:16;;;;;;;;;;;;:::i;:::-;;30792:2;30780:9;;:14;;;;;;;;;;;;;;;;;;30660:141;;29992:9446;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101960289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2090919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108a60259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110666024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fd16022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110416025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fae6023913960400191505060405180910390fd5b610cb6838383610fa8565b610d2181604051806060016040528060268152602001610ff3602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2090919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610f9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122080981dddbdf91fe57a1b3dd26a19c569065df9843f9f18d2fe29e5cdf2b76d5964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1019 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1066 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFD1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1041 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFAE PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFF3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212208098 SAR 0xDD 0xBD 0xF9 0x1F 0xE5 PUSH27 0x1B3DD26A19C569065DF9843F9F18D2FE29E5CDF2B76D5964736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "29992:9446:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30866:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32902:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;31909:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;33528:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;31768:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;34240:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;32065:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;31060:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34942:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;32385:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;32615:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;30866:81;30903:13;30935:5;30928:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30866:81;:::o;32902:166::-;32985:4;33001:39;33010:12;:10;:12::i;:::-;33024:7;33033:6;33001:8;:39::i;:::-;33057:4;33050:11;;32902:166;;;;:::o;31909:98::-;31962:7;31988:12;;31981:19;;31909:98;:::o;33528:317::-;33634:4;33650:36;33660:6;33668:9;33679:6;33650:9;:36::i;:::-;33696:121;33705:6;33713:12;:10;:12::i;:::-;33727:89;33765:6;33727:89;;;;;;;;;;;;;;;;;:11;:19;33739:6;33727:19;;;;;;;;;;;;;;;:33;33747:12;:10;:12::i;:::-;33727:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;33696:8;:121::i;:::-;33834:4;33827:11;;33528:317;;;;;:::o;31768:81::-;31809:5;31833:9;;;;;;;;;;;31826:16;;31768:81;:::o;34240:215::-;34328:4;34344:83;34353:12;:10;:12::i;:::-;34367:7;34376:50;34415:10;34376:11;:25;34388:12;:10;:12::i;:::-;34376:25;;;;;;;;;;;;;;;:34;34402:7;34376:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;34344:8;:83::i;:::-;34444:4;34437:11;;34240:215;;;;:::o;32065:117::-;32131:7;32157:9;:18;32167:7;32157:18;;;;;;;;;;;;;;;;32150:25;;32065:117;;;:::o;31060:85::-;31099:13;31131:7;31124:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31060:85;:::o;34942:266::-;35035:4;35051:129;35060:12;:10;:12::i;:::-;35074:7;35083:96;35122:15;35083:96;;;;;;;;;;;;;;;;;:11;:25;35095:12;:10;:12::i;:::-;35083:25;;;;;;;;;;;;;;;:34;35109:7;35083:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;35051:8;:129::i;:::-;35197:4;35190:11;;34942:266;;;;:::o;32385:172::-;32471:4;32487:42;32497:12;:10;:12::i;:::-;32511:9;32522:6;32487:9;:42::i;:::-;32546:4;32539:11;;32385:172;;;;:::o;32615:149::-;32704:7;32730:11;:18;32742:5;32730:18;;;;;;;;;;;;;;;:27;32749:7;32730:27;;;;;;;;;;;;;;;;32723:34;;32615:149;;;;:::o;26178:104::-;26231:15;26265:10;26258:17;;26178:104;:::o;38006:340::-;38124:1;38107:19;;:5;:19;;;;38099:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38204:1;38185:21;;:7;:21;;;;38177:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38286:6;38256:11;:18;38268:5;38256:18;;;;;;;;;;;;;;;:27;38275:7;38256:27;;;;;;;;;;;;;;;:36;;;;38323:7;38307:32;;38316:5;38307:32;;;38332:6;38307:32;;;;;;;;;;;;;;;;;;38006:340;;;:::o;35682:530::-;35805:1;35787:20;;:6;:20;;;;35779:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35888:1;35867:23;;:9;:23;;;;35859:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35941:47;35962:6;35970:9;35981:6;35941:20;:47::i;:::-;36019:71;36041:6;36019:71;;;;;;;;;;;;;;;;;:9;:17;36029:6;36019:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;35999:9;:17;36009:6;35999:17;;;;;;;;;;;;;;;:91;;;;36123:32;36148:6;36123:9;:20;36133:9;36123:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;36100:9;:20;36110:9;36100:20;;;;;;;;;;;;;;;:55;;;;36187:9;36170:35;;36179:6;36170:35;;;36198:6;36170:35;;;;;;;;;;;;;;;;;;35682:530;;;:::o;4544:187::-;4630:7;4662:1;4657;:6;;4665:12;4649:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4688:9;4704:1;4700;:5;4688:17;;4723:1;4716:8;;;4544:187;;;;;:::o;3672:176::-;3730:7;3749:9;3765:1;3761;:5;3749:17;;3789:1;3784;:6;;3776:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3840:1;3833:8;;;3672:176;;;;:::o;39344:92::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "864800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1144",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30740,
									"end": 30744,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30737,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30764,
									"end": 30770,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30761,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30754,
									"end": 30770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30792,
									"end": 30794,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 30780,
									"end": 30789,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 30780,
									"end": 30789,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 30780,
									"end": 30794,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 30660,
									"end": 30801,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 29992,
									"end": 39438,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122080981dddbdf91fe57a1b3dd26a19c569065df9843f9f18d2fe29e5cdf2b76d5964736f6c634300060c0033",
									".code": [
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29992,
											"end": 39438,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30903,
											"end": 30916,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 30935,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30928,
											"end": 30940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30947,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32985,
											"end": 32989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33001,
											"end": 33040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 33010,
											"end": 33022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 33010,
											"end": 33020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 33010,
											"end": 33022,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33010,
											"end": 33022,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 33010,
											"end": 33022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33024,
											"end": 33031,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33033,
											"end": 33039,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33001,
											"end": 33009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33001,
											"end": 33040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33001,
											"end": 33040,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 33001,
											"end": 33040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33057,
											"end": 33061,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 33050,
											"end": 33061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33050,
											"end": 33061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32902,
											"end": 33068,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31962,
											"end": 31969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31988,
											"end": 32000,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31988,
											"end": 32000,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31981,
											"end": 32000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31981,
											"end": 32000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31909,
											"end": 32007,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33634,
											"end": 33638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33650,
											"end": 33686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 33660,
											"end": 33666,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33668,
											"end": 33677,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33679,
											"end": 33685,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33650,
											"end": 33659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 33650,
											"end": 33686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33650,
											"end": 33686,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 33650,
											"end": 33686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33696,
											"end": 33817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 33705,
											"end": 33711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33713,
											"end": 33725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 33713,
											"end": 33723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 33713,
											"end": 33725,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33713,
											"end": 33725,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 33713,
											"end": 33725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 33765,
											"end": 33771,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH data",
											"source": 1,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33738,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33739,
											"end": 33745,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33747,
											"end": 33759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 33747,
											"end": 33757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 33747,
											"end": 33759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33747,
											"end": 33759,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 33747,
											"end": 33759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33760,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 33727,
											"end": 33764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 33727,
											"end": 33816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33696,
											"end": 33704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33696,
											"end": 33817,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33696,
											"end": 33817,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 33696,
											"end": 33817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33834,
											"end": 33838,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 33827,
											"end": 33838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33827,
											"end": 33838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33528,
											"end": 33845,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31809,
											"end": 31814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 31833,
											"end": 31842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31826,
											"end": 31842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31826,
											"end": 31842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31768,
											"end": 31849,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34328,
											"end": 34332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34344,
											"end": 34427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 34353,
											"end": 34365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 34353,
											"end": 34363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 34353,
											"end": 34365,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34353,
											"end": 34365,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 34353,
											"end": 34365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34367,
											"end": 34374,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 34415,
											"end": 34425,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34387,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34388,
											"end": 34400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 34388,
											"end": 34398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 34388,
											"end": 34400,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34388,
											"end": 34400,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 34388,
											"end": 34400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34376,
											"end": 34401,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34402,
											"end": 34409,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34410,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 34376,
											"end": 34414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 34376,
											"end": 34426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34344,
											"end": 34352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 34344,
											"end": 34427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34344,
											"end": 34427,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 34344,
											"end": 34427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34444,
											"end": 34448,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34437,
											"end": 34448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34437,
											"end": 34448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34240,
											"end": 34455,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32131,
											"end": 32138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32157,
											"end": 32166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32167,
											"end": 32174,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 32157,
											"end": 32175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 32150,
											"end": 32175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32150,
											"end": 32175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32065,
											"end": 32182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31099,
											"end": 31112,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 31131,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31124,
											"end": 31138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31060,
											"end": 31145,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35035,
											"end": 35039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35051,
											"end": 35180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 35060,
											"end": 35072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 35060,
											"end": 35070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 35060,
											"end": 35072,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35060,
											"end": 35072,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 35060,
											"end": 35072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35074,
											"end": 35081,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 35122,
											"end": 35137,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH data",
											"source": 1,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35094,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35095,
											"end": 35107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 35095,
											"end": 35105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 35095,
											"end": 35107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35095,
											"end": 35107,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 35095,
											"end": 35107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35083,
											"end": 35108,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35109,
											"end": 35116,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35117,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 35083,
											"end": 35121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 35083,
											"end": 35179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35051,
											"end": 35059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 35051,
											"end": 35180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35051,
											"end": 35180,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 35051,
											"end": 35180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35197,
											"end": 35201,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 35190,
											"end": 35201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35190,
											"end": 35201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34942,
											"end": 35208,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32471,
											"end": 32475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32487,
											"end": 32529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 32497,
											"end": 32509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 32497,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 32497,
											"end": 32509,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32497,
											"end": 32509,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 32497,
											"end": 32509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32511,
											"end": 32520,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 32522,
											"end": 32528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 32487,
											"end": 32496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 32487,
											"end": 32529,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32487,
											"end": 32529,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 32487,
											"end": 32529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32546,
											"end": 32550,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 32539,
											"end": 32550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32539,
											"end": 32550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32385,
											"end": 32557,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32704,
											"end": 32711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32730,
											"end": 32741,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32742,
											"end": 32747,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32730,
											"end": 32748,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32749,
											"end": 32756,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 32730,
											"end": 32757,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 32723,
											"end": 32757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32723,
											"end": 32757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32764,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26178,
											"end": 26282,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 26178,
											"end": 26282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26231,
											"end": 26246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26265,
											"end": 26275,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 26258,
											"end": 26275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26258,
											"end": 26275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26178,
											"end": 26282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26178,
											"end": 26282,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38124,
											"end": 38125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38107,
											"end": 38112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 38107,
											"end": 38126,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH data",
											"source": 1,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 38099,
											"end": 38167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38204,
											"end": 38205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38185,
											"end": 38192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 38185,
											"end": 38206,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH data",
											"source": 1,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 38177,
											"end": 38245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38286,
											"end": 38292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38267,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38268,
											"end": 38273,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38256,
											"end": 38274,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38275,
											"end": 38282,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38256,
											"end": 38283,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38292,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 38256,
											"end": 38292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38323,
											"end": 38330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38316,
											"end": 38321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 38332,
											"end": 38338,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38307,
											"end": 38339,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38006,
											"end": 38346,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35805,
											"end": 35806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35787,
											"end": 35793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 35787,
											"end": 35807,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH data",
											"source": 1,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 35779,
											"end": 35849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35888,
											"end": 35889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35867,
											"end": 35876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 35867,
											"end": 35890,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH data",
											"source": 1,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 35859,
											"end": 35930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35941,
											"end": 35988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 35962,
											"end": 35968,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 35970,
											"end": 35979,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 35981,
											"end": 35987,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 35941,
											"end": 35961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 35941,
											"end": 35988,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35941,
											"end": 35988,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 35941,
											"end": 35988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 36041,
											"end": 36047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH data",
											"source": 1,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36029,
											"end": 36035,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 36019,
											"end": 36040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 36019,
											"end": 36090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36009,
											"end": 36015,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35999,
											"end": 36016,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36090,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 35999,
											"end": 36090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 36148,
											"end": 36154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36133,
											"end": 36142,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36143,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 36123,
											"end": 36147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 36123,
											"end": 36155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36110,
											"end": 36119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36100,
											"end": 36120,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36155,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 36100,
											"end": 36155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36187,
											"end": 36196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36179,
											"end": 36185,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 36198,
											"end": 36204,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36170,
											"end": 36205,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35682,
											"end": 36212,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4662,
											"end": 4663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4663,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4663,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4704,
											"end": 4705,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4701,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4705,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4731,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3730,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3762,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3789,
											"end": 3790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3776,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3848,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39344,
											"end": 39436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1777,
								"contract": "PolarAI/interface.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1783,
								"contract": "PolarAI/interface.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1785,
								"contract": "PolarAI/interface.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1787,
								"contract": "PolarAI/interface.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1789,
								"contract": "PolarAI/interface.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1791,
								"contract": "PolarAI/interface.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PolarAI/interface.sol\":18505:25567  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"PolarAI/interface.sol\":18505:25567  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209dfe2cfd68742cb9b762dac0ed19a9568ed4be0dd7bd0d647faf036b98e3fca964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209dfe2cfd68742cb9b762dac0ed19a9568ed4be0dd7bd0d647faf036b98e3fca964736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 INVALID 0x2C REVERT PUSH9 0x742CB9B762DAC0ED19 0xA9 JUMP DUP15 0xD4 0xBE 0xD 0xD7 0xBD 0xD PUSH5 0x7FAF036B98 0xE3 0xFC 0xA9 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "18505:7062:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209dfe2cfd68742cb9b762dac0ed19a9568ed4be0dd7bd0d647faf036b98e3fca964736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 INVALID 0x2C REVERT PUSH9 0x742CB9B762DAC0ED19 0xA9 JUMP DUP15 0xD4 0xBE 0xD 0xD7 0xBD 0xD PUSH5 0x7FAF036B98 0xE3 0xFC 0xA9 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "18505:7062:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18505,
									"end": 25567,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 18505,
									"end": 25567,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209dfe2cfd68742cb9b762dac0ed19a9568ed4be0dd7bd0d647faf036b98e3fca964736f6c634300060c0033",
									".code": [
										{
											"begin": 18505,
											"end": 25567,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 25567,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 25567,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 25567,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 18505,
											"end": 25567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18505,
											"end": 25567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 25567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18505,
											"end": 25567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 25567,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1660,
								"contract": "PolarAI/interface.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PolarAI/interface.sol\":14648:17752  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"PolarAI/interface.sol\":14648:17752  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205d602c9e32583866c84f7cfec9feb301c3d920d5b267224729d2eb5860d35e1e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d602c9e32583866c84f7cfec9feb301c3d920d5b267224729d2eb5860d35e1e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D PUSH1 0x2C SWAP15 ORIGIN PC CODESIZE PUSH7 0xC84F7CFEC9FEB3 ADD 0xC3 0xD9 KECCAK256 0xD5 0xB2 PUSH8 0x224729D2EB5860D3 0x5E 0x1E PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "14648:3104:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d602c9e32583866c84f7cfec9feb301c3d920d5b267224729d2eb5860d35e1e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D PUSH1 0x2C SWAP15 ORIGIN PC CODESIZE PUSH7 0xC84F7CFEC9FEB3 ADD 0xC3 0xD9 KECCAK256 0xD5 0xB2 PUSH8 0x224729D2EB5860D3 0x5E 0x1E PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "14648:3104:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 14648,
									"end": 17752,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14648,
									"end": 17752,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d602c9e32583866c84f7cfec9feb301c3d920d5b267224729d2eb5860d35e1e64736f6c634300060c0033",
									".code": [
										{
											"begin": 14648,
											"end": 17752,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 14648,
											"end": 17752,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 14648,
											"end": 17752,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14648,
											"end": 17752,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14648,
											"end": 17752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14648,
											"end": 17752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14648,
											"end": 17752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14648,
											"end": 17752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14648,
											"end": 17752,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PolarAI/interface.sol\":3420:7998  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"PolarAI/interface.sol\":3420:7998  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ea4903b66f02ab7b8f7597da48e7e4bdbe9736f8c00b4bb2e7ea3d6edc5c173f64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea4903b66f02ab7b8f7597da48e7e4bdbe9736f8c00b4bb2e7ea3d6edc5c173f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0x49 SUB 0xB6 PUSH16 0x2AB7B8F7597DA48E7E4BDBE9736F8C0 SIGNEXTEND 0x4B 0xB2 0xE7 0xEA RETURNDATASIZE PUSH15 0xDC5C173F64736F6C634300060C0033 ",
							"sourceMap": "3420:4578:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea4903b66f02ab7b8f7597da48e7e4bdbe9736f8c00b4bb2e7ea3d6edc5c173f64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0x49 SUB 0xB6 PUSH16 0x2AB7B8F7597DA48E7E4BDBE9736F8C0 SIGNEXTEND 0x4B 0xB2 0xE7 0xEA RETURNDATASIZE PUSH15 0xDC5C173F64736F6C634300060C0033 ",
							"sourceMap": "3420:4578:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3420,
									"end": 7998,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3420,
									"end": 7998,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ea4903b66f02ab7b8f7597da48e7e4bdbe9736f8c00b4bb2e7ea3d6edc5c173f64736f6c634300060c0033",
									".code": [
										{
											"begin": 3420,
											"end": 7998,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 7998,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 7998,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3420,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3420,
											"end": 7998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3420,
											"end": 7998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 7998,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PolarAI/interface.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PolarAI/interface.sol\":{\"keccak256\":\"0xba3dbcdc7da8d11ccab066db51774c187fd7c86f1f98a8e3caf2ce82262d2f2c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://686e99d38930948e81f3b859ad72f0edd7d246f02d80a9d51cb7f6ffbafc2247\",\"dweb:/ipfs/Qma9LAhAguWqgzvnDqfGVL5y8UL9vehysQKWHMj1gL72HC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"PolarAI/BEP20-PolarCoin.sol": {
				"ast": {
					"absolutePath": "PolarAI/BEP20-PolarCoin.sol",
					"exportedSymbols": {
						"BEP20": [
							555
						]
					},
					"id": 556,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"absolutePath": "PolarAI/interface.sol",
							"file": "./interface.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 556,
							"sourceUnit": 2364,
							"src": "63:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 3,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1654,
										"src": "108:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1654",
											"typeString": "contract Context"
										}
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "108:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 5,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2363,
										"src": "116:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$2363",
											"typeString": "contract IBEP20"
										}
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "116:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 7,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1761,
										"src": "124:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1761",
											"typeString": "contract Ownable"
										}
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "124:7:0"
								}
							],
							"contractDependencies": [
								1654,
								1761,
								2363
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 555,
							"linearizedBaseContracts": [
								555,
								1761,
								2363,
								1654
							],
							"name": "BEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 11,
									"libraryName": {
										"contractScope": null,
										"id": 9,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 826,
										"src": "142:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$826",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "136:27:0",
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "155:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 555,
									"src": "167:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "176:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "167:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "187:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 555,
									"src": "218:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "227:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "218:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 19,
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "247:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "238:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "258:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 555,
									"src": "292:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "292:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "32424aa3",
									"id": 25,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 555,
									"src": "324:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 24,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "324:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b09f1266",
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 555,
									"src": "350:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "350:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d28d8852",
									"id": 29,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 555,
									"src": "375:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 28,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "375:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "420:212:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 32,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "426:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "506f6c6172414920546f6b656e",
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "434:15:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_366c17aaa17bf06ae874de5ffbe23c0fd47d556eddedeaa210f391f2a856cf0c",
															"typeString": "literal_string \"PolarAI Token\""
														},
														"value": "PolarAI Token"
													},
													"src": "426:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "426:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 36,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "504154",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "465:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_0e4d1b4fb2558687eecd651ee2d9d18ec141a4ebb5dcc49141fc72f92f80a663",
															"typeString": "literal_string \"PAT\""
														},
														"value": "PAT"
													},
													"src": "455:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "455:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 40,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "476:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "488:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "476:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "476:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 44,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "496:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_2250000000000000000000000_by_1",
															"typeString": "int_const 2250000000000000000000000"
														},
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "32323530303030",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "511:7:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2250000_by_1",
																"typeString": "int_const 2250000"
															},
															"value": "2250000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "521:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3138",
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "525:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "521:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "511:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2250000000000000000000000_by_1",
															"typeString": "int_const 2250000000000000000000000"
														}
													},
													"src": "496:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "496:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 52,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "533:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 55,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 53,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "543:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "543:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "533:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 56,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "557:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "533:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "533:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 62,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "598:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "590:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 60,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "590:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "590:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 64,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "602:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "602:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 66,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "614:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 59,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2353,
														"src": "581:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "581:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "EmitStatement",
												"src": "576:51:0"
											}
										]
									},
									"documentation": null,
									"id": 70,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "420:0:0"
									},
									"scope": 555,
									"src": "399:233:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2294
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "748:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 77,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "761:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "761:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 76,
												"id": 79,
												"nodeType": "Return",
												"src": "754:14:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "636:48:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 73,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "721:8:0"
									},
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:2:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "739:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "738:9:0"
									},
									"scope": 555,
									"src": "687:86:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2276
									],
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "886:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 88,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "899:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 87,
												"id": 89,
												"nodeType": "Return",
												"src": "892:16:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "777:47:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 84,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "861:8:0"
									},
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "844:2:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 91,
												"src": "879:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 85,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "879:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "878:7:0"
									},
									"scope": 555,
									"src": "827:86:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2282
									],
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1030:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 98,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 97,
												"id": 99,
												"nodeType": "Return",
												"src": "1036:14:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "917:45:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 94,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "997:8:0"
									},
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "980:2:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1015:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 95,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1015:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1014:15:0"
									},
									"scope": 555,
									"src": "965:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2288
									],
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "1166:23:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 108,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1179:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 107,
												"id": 109,
												"nodeType": "Return",
												"src": "1172:12:0"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "1059:41:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 104,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1133:8:0"
									},
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1116:2:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 111,
												"src": "1151:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 105,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1151:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1150:15:0"
									},
									"scope": 555,
									"src": "1103:86:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2270
									],
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1304:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 118,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "1317:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 117,
												"id": 119,
												"nodeType": "Return",
												"src": "1310:19:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "1193:44:0",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 114,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1277:8:0"
									},
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1260:2:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 121,
												"src": "1295:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1294:9:0"
									},
									"scope": 555,
									"src": "1240:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2302
									],
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "1460:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 130,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1473:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 132,
													"indexExpression": {
														"argumentTypes": null,
														"id": 131,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "1483:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1473:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 129,
												"id": 133,
												"nodeType": "Return",
												"src": "1466:25:0"
											}
										]
									},
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "1338:42:0",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 126,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1433:8:0"
									},
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1402:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1402:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1401:17:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1451:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1450:9:0"
									},
									"scope": 555,
									"src": "1383:113:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2312
									],
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "1766:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 147,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "1782:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1782:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1796:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 150,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "1807:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 146,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "1772:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1772:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1772:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1827:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 145,
												"id": 154,
												"nodeType": "Return",
												"src": "1820:11:0"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "1500:177:0",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 142,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1742:8:0"
									},
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 156,
												"src": "1698:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 156,
												"src": "1717:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1697:35:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 156,
												"src": "1760:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 143,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1760:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1759:6:0"
									},
									"scope": 555,
									"src": "1680:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2322
									],
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "1977:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 167,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "1990:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 169,
														"indexExpression": {
															"argumentTypes": null,
															"id": 168,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "2002:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1990:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 171,
													"indexExpression": {
														"argumentTypes": null,
														"id": 170,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "2009:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1990:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 166,
												"id": 172,
												"nodeType": "Return",
												"src": "1983:34:0"
											}
										]
									},
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "1840:42:0",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 163,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1950:8:0"
									},
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 174,
												"src": "1904:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1904:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 174,
												"src": "1919:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1903:32:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 174,
												"src": "1968:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1967:9:0"
									},
									"scope": 555,
									"src": "1885:137:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2332
									],
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2226:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 186,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "2241:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2241:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 188,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "2255:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 189,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2264:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 185,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "2232:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2232:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "2232:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2284:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 184,
												"id": 193,
												"nodeType": "Return",
												"src": "2277:11:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "2026:114:0",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2202:8:0"
									},
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 195,
												"src": "2160:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 195,
												"src": "2177:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2177:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2159:33:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 195,
												"src": "2220:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2220:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2219:6:0"
									},
									"scope": 555,
									"src": "2143:150:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2344
									],
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "2830:191:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 209,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2846:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 210,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "2854:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 211,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2865:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 208,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "2836:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2836:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "2836:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 215,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2887:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 216,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "2895:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2895:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 225,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "2947:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2955:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 218,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 21,
																			"src": "2909:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 220,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 219,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 198,
																			"src": "2921:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2909:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 223,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 221,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1642,
																			"src": "2929:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2929:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2909:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 704,
																"src": "2909:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2909:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "2878:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2878:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "2878:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3012:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 207,
												"id": 231,
												"nodeType": "Return",
												"src": "3005:11:0"
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2297:424:0",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 204,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2806:8:0"
									},
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 233,
												"src": "2746:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 233,
												"src": "2762:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 233,
												"src": "2781:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2745:51:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 233,
												"src": "2824:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2824:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2823:6:0"
									},
									"scope": 555,
									"src": "2724:297:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3475:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 244,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "3490:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3490:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "3504:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 254,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "3552:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 247,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 21,
																			"src": "3513:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 250,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 248,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1642,
																				"src": "3525:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3525:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3513:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 252,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 251,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 236,
																		"src": "3539:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3513:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 659,
																"src": "3513:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3513:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 243,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "3481:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3481:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3481:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3577:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 242,
												"id": 259,
												"nodeType": "Return",
												"src": "3570:11:0"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "3025:361:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 261,
												"src": "3416:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 261,
												"src": "3433:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3433:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3415:37:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 261,
												"src": "3469:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3469:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3468:6:0"
									},
									"scope": 555,
									"src": "3389:197:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "4133:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 272,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "4148:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4148:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 274,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "4162:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 282,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "4210:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4227:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 275,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 21,
																			"src": "4171:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 278,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 276,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1642,
																				"src": "4183:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4183:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4171:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 280,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 279,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "4197:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4171:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 704,
																"src": "4171:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4171:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 271,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "4139:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4139:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "4139:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4281:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 270,
												"id": 288,
												"nodeType": "Return",
												"src": "4274:11:0"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3590:449:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 290,
												"src": "4069:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 290,
												"src": "4086:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4068:42:0"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 290,
												"src": "4127:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 268,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4127:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4126:6:0"
									},
									"scope": 555,
									"src": "4042:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "4542:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 301,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "4554:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4554:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 303,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "4568:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 300,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "4548:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "4548:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4588:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 299,
												"id": 307,
												"nodeType": "Return",
												"src": "4581:11:0"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "4294:183:0",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner"
									},
									"functionSelector": "a0712d68",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 296,
											"modifierName": {
												"argumentTypes": null,
												"id": 295,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1710,
												"src": "4517:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4517:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 309,
												"src": "4494:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4493:16:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 309,
												"src": "4536:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4536:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4535:6:0"
									},
									"scope": 555,
									"src": "4480:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "4729:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 318,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "4741:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4741:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 320,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "4755:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 317,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "4735:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4735:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "4735:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4775:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 316,
												"id": 324,
												"nodeType": "Return",
												"src": "4768:11:0"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "4601:73:0",
										"text": " @dev Burn `amount` tokens and decreasing the total supply."
									},
									"functionSelector": "42966c68",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 326,
												"src": "4691:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4691:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4690:16:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 326,
												"src": "4723:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4723:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4722:6:0"
									},
									"scope": 555,
									"src": "4677:107:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "5307:363:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 337,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "5321:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5339:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5331:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 338,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5331:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5331:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5321:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5343:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 336,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5313:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5313:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "5313:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 347,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "5397:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5418:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5410:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 348,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5410:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5410:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5397:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5422:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5389:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "5389:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 356,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "5467:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 358,
														"indexExpression": {
															"argumentTypes": null,
															"id": 357,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "5477:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5467:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 363,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "5509:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5517:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 359,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "5487:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 361,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 360,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "5497:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5487:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 704,
															"src": "5487:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5487:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5467:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "5467:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 368,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "5564:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 370,
														"indexExpression": {
															"argumentTypes": null,
															"id": 369,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "5574:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5564:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 375,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "5612:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 371,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "5587:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 373,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 372,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "5597:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5587:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 659,
															"src": "5587:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5587:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5564:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "5564:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 380,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "5639:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 381,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "5647:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 382,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "5658:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 379,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2353,
														"src": "5630:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5630:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "EmitStatement",
												"src": "5625:40:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "4788:437:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 386,
												"src": "5247:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 386,
												"src": "5263:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 386,
												"src": "5282:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5246:51:0"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5307:0:0"
									},
									"scope": 555,
									"src": "5228:442:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "5977:227:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 395,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "5991:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6010:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6002:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 396,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6002:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6002:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5991:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6014:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5983:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5983:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "5983:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 404,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "6055:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 407,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "6087:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 405,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "6070:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 659,
															"src": "6070:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6070:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6055:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "6055:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 411,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "6100:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 413,
														"indexExpression": {
															"argumentTypes": null,
															"id": 412,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "6110:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6100:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 418,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "6144:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 414,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "6121:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 416,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 415,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "6131:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6121:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 659,
															"src": "6121:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6121:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6100:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "6100:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6179:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6171:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 423,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6171:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6171:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 427,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "6183:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 428,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "6192:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 422,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2353,
														"src": "6162:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6162:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "EmitStatement",
												"src": "6157:42:0"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "5674:243:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 432,
												"src": "5935:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 432,
												"src": "5952:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5934:33:0"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5977:0:0"
									},
									"scope": 555,
									"src": "5920:284:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "6556:267:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 441,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "6570:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6589:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6581:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 442,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6581:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6581:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6570:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6593:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6562:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6562:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "6562:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 450,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "6636:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 452,
														"indexExpression": {
															"argumentTypes": null,
															"id": 451,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "6646:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6636:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 457,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "6680:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6688:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 453,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "6657:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 455,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 454,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "6667:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6657:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 704,
															"src": "6657:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6657:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6636:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "6636:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 462,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "6731:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 465,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "6763:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 463,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "6746:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 676,
															"src": "6746:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6746:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6731:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "6731:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 470,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "6790:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6807:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6799:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 471,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6799:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6799:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 475,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "6811:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 469,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2353,
														"src": "6781:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6781:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "EmitStatement",
												"src": "6776:42:0"
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "6208:288:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 479,
												"src": "6514:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 479,
												"src": "6531:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6513:33:0"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6556:0:0"
									},
									"scope": 555,
									"src": "6499:324:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "7295:239:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 490,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "7309:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7326:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7318:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 491,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7318:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7318:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7309:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7330:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7301:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7301:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "7301:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 500,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "7383:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7402:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7394:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 501,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7394:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7394:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7383:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7406:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7375:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7375:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "7375:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 509,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "7450:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 512,
															"indexExpression": {
																"argumentTypes": null,
																"id": 510,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "7462:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7450:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 513,
														"indexExpression": {
															"argumentTypes": null,
															"id": 511,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "7469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7450:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 514,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "7480:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7450:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "7450:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 518,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "7506:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 519,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "7513:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 520,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "7522:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2362,
														"src": "7497:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7497:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "EmitStatement",
												"src": "7492:37:0"
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "6827:390:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "7238:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7238:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "7253:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "7270:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7237:48:0"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7295:0:0"
									},
									"scope": 555,
									"src": "7220:314:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "7759:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 533,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "7771:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 534,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "7780:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "7765:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7765:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "7765:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 538,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "7802:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 539,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "7811:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7811:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 548,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "7864:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7872:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 541,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 21,
																			"src": "7825:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 543,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 542,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 527,
																			"src": "7837:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7825:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 546,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 544,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1642,
																			"src": "7846:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7846:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7825:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 704,
																"src": "7825:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:86:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 537,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "7793:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "7793:119:0"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "7538:157:0",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 554,
												"src": "7717:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 554,
												"src": "7734:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7716:33:0"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7759:0:0"
									},
									"scope": 555,
									"src": "7698:219:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 556,
							"src": "90:7829:0"
						}
					],
					"src": "39:7880:0"
				},
				"id": 0
			},
			"PolarAI/interface.sol": {
				"ast": {
					"absolutePath": "PolarAI/interface.sol",
					"exportedSymbols": {
						"Address": [
							1029
						],
						"Context": [
							1654
						],
						"ERC20": [
							2263
						],
						"EnumerableSet": [
							1632
						],
						"IBEP20": [
							2363
						],
						"IERC20": [
							632
						],
						"Ownable": [
							1761
						],
						"SafeERC20": [
							1238
						],
						"SafeMath": [
							826
						]
					},
					"id": 2364,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 557,
								"nodeType": "StructuredDocumentation",
								"src": "164:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 632,
							"linearizedBaseContracts": [
								632
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "258:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:2:1"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 563,
												"src": "375:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "374:9:1"
									},
									"scope": 632,
									"src": "329:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "390:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 571,
												"src": "486:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "485:17:1"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 571,
												"src": "526:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "525:9:1"
									},
									"scope": 632,
									"src": "467:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "541:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 581,
												"src": "773:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 581,
												"src": "792:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "772:35:1"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 581,
												"src": "826:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 578,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "826:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "825:6:1"
									},
									"scope": 632,
									"src": "755:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "838:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "1126:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1126:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "1141:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1125:32:1"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "1181:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1180:9:1"
									},
									"scope": 632,
									"src": "1107:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "1196:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "1860:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "1877:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1859:33:1"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "1911:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1911:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1910:6:1"
									},
									"scope": 632,
									"src": "1843:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "1923:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 613,
												"src": "2246:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 613,
												"src": "2262:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 613,
												"src": "2281:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2281:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2245:51:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 613,
												"src": "2315:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 610,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2315:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2314:6:1"
									},
									"scope": 632,
									"src": "2224:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "2327:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 622,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 622,
												"src": "2505:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2505:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 622,
												"src": "2527:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2527:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 622,
												"src": "2547:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2504:57:1"
									},
									"src": "2490:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "2568:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 631,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 631,
												"src": "2736:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 631,
												"src": "2759:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 631,
												"src": "2784:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2784:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2735:63:1"
									},
									"src": "2721:78:1"
								}
							],
							"scope": 2364,
							"src": "235:2566:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 633,
								"nodeType": "StructuredDocumentation",
								"src": "2856:563:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 826,
							"linearizedBaseContracts": [
								826
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "3739:109:1",
										"statements": [
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 658,
														"src": "3749:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3749:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 648,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 645,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "3761:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 646,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "3765:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3761:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3749:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 650,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "3784:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 651,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "3789:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3784:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3792:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 649,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3776:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3776:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "3776:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 656,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 644,
													"src": "3840:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 642,
												"id": 657,
												"nodeType": "Return",
												"src": "3833:8:1"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "3443:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 659,
												"src": "3685:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 659,
												"src": "3696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3684:22:1"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 659,
												"src": "3730:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3730:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3729:9:1"
									},
									"scope": 826,
									"src": "3672:176:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "4186:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 670,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4207:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 671,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "4210:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4213:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 669,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															676,
															704
														],
														"referencedDeclaration": 704,
														"src": "4203:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4203:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 668,
												"id": 674,
												"nodeType": "Return",
												"src": "4196:50:1"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "3854:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 676,
												"src": "4132:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4132:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 676,
												"src": "4143:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4131:22:1"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 676,
												"src": "4177:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4177:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4176:9:1"
									},
									"scope": 826,
									"src": "4119:134:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "4639:92:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 689,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "4657:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 690,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "4662:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4657:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 692,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "4665:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 688,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4649:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4649:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "4649:29:1"
											},
											{
												"assignments": [
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 696,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 703,
														"src": "4688:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 695,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4688:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 700,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 697,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "4700:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 698,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "4704:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4700:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4688:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 701,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 696,
													"src": "4723:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 687,
												"id": 702,
												"nodeType": "Return",
												"src": "4716:8:1"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "4259:280:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 704,
												"src": "4557:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4557:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 704,
												"src": "4568:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4568:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 704,
												"src": "4579:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 682,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4579:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4556:50:1"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 704,
												"src": "4630:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4630:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4629:9:1"
									},
									"scope": 826,
									"src": "4544:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "5045:392:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 714,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "5277:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5282:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5277:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 720,
												"nodeType": "IfStatement",
												"src": "5273:45:1",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "5285:33:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5306:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 713,
															"id": 718,
															"nodeType": "Return",
															"src": "5299:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													722
												],
												"declarations": [
													{
														"constant": false,
														"id": 722,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 738,
														"src": "5328:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 721,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 726,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 723,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "5340:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 724,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "5344:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5340:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5328:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 728,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "5363:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 729,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "5367:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5363:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 731,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "5372:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5363:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5375:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 727,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5355:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5355:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "5355:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 736,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 722,
													"src": "5429:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 713,
												"id": 737,
												"nodeType": "Return",
												"src": "5422:8:1"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "4737:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "4991:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4991:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "5002:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5002:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4990:22:1"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "5036:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5035:9:1"
									},
									"scope": 826,
									"src": "4978:459:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "5966:63:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 750,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "5987:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 751,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "5990:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 749,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															756,
															784
														],
														"referencedDeclaration": 784,
														"src": "5983:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5983:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 748,
												"id": 754,
												"nodeType": "Return",
												"src": "5976:46:1"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "5443:451:1",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 756,
												"src": "5912:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5912:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 756,
												"src": "5923:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5923:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5911:22:1"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 756,
												"src": "5957:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5957:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5956:9:1"
									},
									"scope": 826,
									"src": "5899:130:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "6606:177:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 769,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "6624:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6628:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6624:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 772,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "6631:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 768,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6616:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6616:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "6616:28:1"
											},
											{
												"assignments": [
													776
												],
												"declarations": [
													{
														"constant": false,
														"id": 776,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 783,
														"src": "6654:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 775,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6654:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 780,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 777,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "6666:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 778,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "6670:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6666:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6654:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 781,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 776,
													"src": "6775:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 767,
												"id": 782,
												"nodeType": "Return",
												"src": "6768:8:1"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "6035:471:1",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 784,
												"src": "6524:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6524:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 784,
												"src": "6535:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6535:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 784,
												"src": "6546:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 762,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6546:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6523:50:1"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 784,
												"src": "6597:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6597:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6596:9:1"
									},
									"scope": 826,
									"src": "6511:272:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "7301:61:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 795,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "7322:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 796,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "7325:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7328:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 794,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															801,
															825
														],
														"referencedDeclaration": 825,
														"src": "7318:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 793,
												"id": 799,
												"nodeType": "Return",
												"src": "7311:44:1"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "6789:440:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 801,
												"src": "7247:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 801,
												"src": "7258:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7258:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7246:22:1"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 801,
												"src": "7292:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7292:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7291:9:1"
									},
									"scope": 826,
									"src": "7234:128:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "7928:68:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 814,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "7946:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7951:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7946:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 817,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "7954:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7938:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7938:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "7938:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 820,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "7984:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 821,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "7988:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7984:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 812,
												"id": 823,
												"nodeType": "Return",
												"src": "7977:12:1"
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "7368:460:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 825,
												"src": "7846:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 825,
												"src": "7857:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7857:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 825,
												"src": "7868:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 807,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7868:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7845:50:1"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 825,
												"src": "7919:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7919:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7918:9:1"
									},
									"scope": 826,
									"src": "7833:163:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2364,
							"src": "3420:4578:1"
						},
						{
							"id": 827,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "8054:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 828,
								"nodeType": "StructuredDocumentation",
								"src": "8079:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1029,
							"linearizedBaseContracts": [
								1029
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "8805:544:1",
										"statements": [
											{
												"assignments": [
													837
												],
												"declarations": [
													{
														"constant": false,
														"id": 837,
														"mutability": "mutable",
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 853,
														"src": "9057:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 836,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 838,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:16:1"
											},
											{
												"assignments": [
													840
												],
												"declarations": [
													{
														"constant": false,
														"id": 840,
														"mutability": "mutable",
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 853,
														"src": "9083:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 839,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9083:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 842,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9105:66:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9083:88:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9246:36:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9248:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "9272:7:1"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "9260:11:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9260:20:1"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "9248:8:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 831,
														"isOffset": false,
														"isSlot": false,
														"src": "9272:7:1",
														"valueSize": 1
													},
													{
														"declaration": 837,
														"isOffset": false,
														"isSlot": false,
														"src": "9248:8:1",
														"valueSize": 1
													}
												],
												"id": 843,
												"nodeType": "InlineAssembly",
												"src": "9237:45:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 844,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "9299:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 845,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "9311:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "9299:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 847,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "9326:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9338:3:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "9326:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9299:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 851,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9298:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 835,
												"id": 852,
												"nodeType": "Return",
												"src": "9291:51:1"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "8169:565:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 854,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8758:17:1"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 854,
												"src": "8799:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 833,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8799:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8798:6:1"
									},
									"scope": 1029,
									"src": "8739:610:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "10337:320:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 865,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "10363:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1029",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1029",
																				"typeString": "library Address"
																			}
																		],
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10355:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 863,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10355:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10355:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10355:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 868,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "10380:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10355:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10388:31:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 862,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10347:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10347:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "10347:73:1"
											},
											{
												"assignments": [
													874,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 887,
														"src": "10509:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 873,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10509:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 881,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10559:2:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 875,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "10527:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10527:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 877,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "10550:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10527:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10527:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10508:54:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 883,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "10580:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10589:60:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 882,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10572:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10572:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "10572:78:1"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "9355:906:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 888,
												"src": "10285:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10285:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 888,
												"src": "10312:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10312:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10284:43:1"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10337:0:1"
									},
									"scope": 1029,
									"src": "10266:391:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "11487:82:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 899,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "11515:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 900,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "11523:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11529:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 898,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															905,
															925
														],
														"referencedDeclaration": 925,
														"src": "11502:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11502:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 897,
												"id": 903,
												"nodeType": "Return",
												"src": "11495:67:1"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "10663:730:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 905,
												"src": "11420:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11420:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 905,
												"src": "11436:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 892,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11436:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11419:35:1"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 905,
												"src": "11473:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 895,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11473:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11472:14:1"
									},
									"scope": 1029,
									"src": "11398:171:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "11908:77:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 918,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "11948:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 919,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "11956:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11962:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 921,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "11965:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 917,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "11925:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11925:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 916,
												"id": 923,
												"nodeType": "Return",
												"src": "11918:60:1"
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "11575:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 925,
												"src": "11813:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 925,
												"src": "11829:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 909,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11829:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 925,
												"src": "11848:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 911,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11848:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11812:63:1"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 925,
												"src": "11894:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11894:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11893:14:1"
									},
									"scope": 1029,
									"src": "11791:194:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "12460:111:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 938,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "12499:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 939,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "12507:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 940,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "12513:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12520:43:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 937,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															945,
															978
														],
														"referencedDeclaration": 978,
														"src": "12477:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12477:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 936,
												"id": 943,
												"nodeType": "Return",
												"src": "12470:94:1"
											}
										]
									},
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "11991:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 945,
												"src": "12378:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12378:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 945,
												"src": "12394:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 929,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12394:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 945,
												"src": "12413:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12413:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12377:50:1"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 945,
												"src": "12446:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 934,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12446:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12445:14:1"
									},
									"scope": 1029,
									"src": "12347:224:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "12960:172:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 962,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "12986:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1029",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1029",
																				"typeString": "library Address"
																			}
																		],
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12978:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 960,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12978:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12978:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12978:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 965,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "13003:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12978:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13010:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 959,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12970:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12970:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "12970:81:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 971,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "13091:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 972,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "13099:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 973,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "13105:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 974,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "13112:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 970,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "13068:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13068:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 958,
												"id": 976,
												"nodeType": "Return",
												"src": "13061:64:1"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "12577:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 978,
												"src": "12850:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 978,
												"src": "12866:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 949,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12866:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 978,
												"src": "12885:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12885:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 978,
												"src": "12900:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 953,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12900:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12849:78:1"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 978,
												"src": "12946:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 956,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12946:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12945:14:1"
									},
									"scope": 1029,
									"src": "12819:313:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "13282:814:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 993,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "13311:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 992,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "13300:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13300:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13320:31:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 991,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13292:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13292:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "13292:60:1"
											},
											{
												"assignments": [
													999,
													1001
												],
												"declarations": [
													{
														"constant": false,
														"id": 999,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1027,
														"src": "13423:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 998,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13423:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1001,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1027,
														"src": "13437:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1000,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13437:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1008,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1006,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "13495:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1002,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "13464:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13464:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1004,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "13484:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13464:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13464:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13422:78:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1009,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 999,
													"src": "13514:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1025,
													"nodeType": "Block",
													"src": "13571:519:1",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1013,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1001,
																		"src": "13655:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13655:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13675:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13655:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1023,
																"nodeType": "Block",
																"src": "14027:53:1",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1020,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "14052:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1019,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "14045:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14045:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1022,
																		"nodeType": "ExpressionStatement",
																		"src": "14045:20:1"
																	}
																]
															},
															"id": 1024,
															"nodeType": "IfStatement",
															"src": "13651:429:1",
															"trueBody": {
																"id": 1018,
																"nodeType": "Block",
																"src": "13678:343:1",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "13862:145:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "13884:40:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "13913:10:1"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "13907:5:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13907:17:1"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "13888:15:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "13956:2:1",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "13960:10:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "13952:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13952:19:1"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "13973:15:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "13945:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13945:44:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "13945:44:1"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1001,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13913:10:1",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1001,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13960:10:1",
																				"valueSize": 1
																			}
																		],
																		"id": 1017,
																		"nodeType": "InlineAssembly",
																		"src": "13853:154:1"
																	}
																]
															}
														}
													]
												},
												"id": 1026,
												"nodeType": "IfStatement",
												"src": "13510:580:1",
												"trueBody": {
													"id": 1012,
													"nodeType": "Block",
													"src": "13523:42:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1010,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "13544:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 990,
															"id": 1011,
															"nodeType": "Return",
															"src": "13537:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1028,
												"src": "13170:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13170:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1028,
												"src": "13186:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 981,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13186:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1028,
												"src": "13205:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1028,
												"src": "13223:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 985,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13223:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13169:81:1"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1028,
												"src": "13268:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 988,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13268:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13267:14:1"
									},
									"scope": 1029,
									"src": "13138:958:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2364,
							"src": "8147:5951:1"
						},
						{
							"id": 1030,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "14162:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1031,
								"nodeType": "StructuredDocumentation",
								"src": "14190:457:1",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1238,
							"linearizedBaseContracts": [
								1238
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1034,
									"libraryName": {
										"contractScope": null,
										"id": 1032,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 826,
										"src": "14678:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$826",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "14672:27:1",
									"typeName": {
										"id": 1033,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14691:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1037,
									"libraryName": {
										"contractScope": null,
										"id": 1035,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1029,
										"src": "14710:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1029",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "14704:26:1",
									"typeName": {
										"id": 1036,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "14722:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "14808:103:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1047,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "14838:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$632",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1050,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1039,
																			"src": "14868:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$632",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 581,
																		"src": "14868:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "14868:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1053,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "14893:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1054,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "14897:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1048,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "14845:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "14845:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14845:58:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$632",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1046,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "14818:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$632_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14818:86:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "14818:86:1"
											}
										]
									},
									"documentation": null,
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1059,
												"src": "14758:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$632",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1038,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 632,
													"src": "14758:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$632",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1059,
												"src": "14772:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14772:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1059,
												"src": "14784:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14784:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14757:41:1"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14808:0:1"
									},
									"scope": 1238,
									"src": "14736:175:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "15007:113:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1071,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "15037:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$632",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1074,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1061,
																			"src": "15067:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$632",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 613,
																		"src": "15067:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15067:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1077,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "15096:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1078,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "15102:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1079,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "15106:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1072,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "15044:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15044:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15044:68:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$632",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1070,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "15017:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$632_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15017:96:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "15017:96:1"
											}
										]
									},
									"documentation": null,
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1084,
												"src": "14943:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$632",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1060,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 632,
													"src": "14943:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$632",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1084,
												"src": "14957:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14957:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1084,
												"src": "14971:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14971:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1084,
												"src": "14983:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14983:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14942:55:1"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15007:0:1"
									},
									"scope": 1238,
									"src": "14917:203:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "15456:537:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1095,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "15745:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15754:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "15745:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1098,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15744:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1103,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "15785:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1238",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1238",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1102,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "15777:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1101,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "15777:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1104,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15777:13:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1105,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1089,
																					"src": "15792:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1099,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1087,
																					"src": "15761:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$632",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 591,
																				"src": "15761:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15761:39:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15804:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "15761:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1109,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15760:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15744:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15820:56:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15736:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15736:150:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "15736:150:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1115,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "15916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$632",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1118,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "15946:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$632",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 601,
																		"src": "15946:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15946:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1121,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "15970:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1122,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "15979:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1116,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "15923:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15923:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15923:62:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$632",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1114,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "15896:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$632_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15896:90:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "15896:90:1"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "15126:249:1",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1127,
												"src": "15401:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$632",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1086,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 632,
													"src": "15401:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$632",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1127,
												"src": "15415:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1127,
												"src": "15432:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15432:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15400:46:1"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15456:0:1"
									},
									"scope": 1238,
									"src": "15380:613:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "16085:197:1",
										"statements": [
											{
												"assignments": [
													1137
												],
												"declarations": [
													{
														"constant": false,
														"id": 1137,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1162,
														"src": "16095:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16095:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1149,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1147,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "16162:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1142,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "16142:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1238",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1238",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16134:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1140,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16134:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16134:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1144,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "16149:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1138,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "16118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$632",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 591,
																"src": "16118:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16118:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 659,
														"src": "16118:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16118:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16095:73:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "16198:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$632",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1154,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1129,
																			"src": "16228:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$632",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 601,
																		"src": "16228:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16228:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1157,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "16252:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1158,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "16261:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "16205:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16205:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16205:69:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$632",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "16178:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$632_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16178:97:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1161,
												"nodeType": "ExpressionStatement",
												"src": "16178:97:1"
											}
										]
									},
									"documentation": null,
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "16030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$632",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1128,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 632,
													"src": "16030:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$632",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "16044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "16061:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16061:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16029:46:1"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16085:0:1"
									},
									"scope": 1238,
									"src": "15999:283:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "16374:242:1",
										"statements": [
											{
												"assignments": [
													1173
												],
												"declarations": [
													{
														"constant": false,
														"id": 1173,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1199,
														"src": "16384:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16384:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1186,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1183,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "16451:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16458:43:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1178,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "16431:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1238",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1238",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16423:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1176,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16423:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16423:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1180,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "16438:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1174,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "16407:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$632",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 591,
																"src": "16407:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16407:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 704,
														"src": "16407:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16407:95:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16384:118:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1188,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "16532:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$632",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1191,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1165,
																			"src": "16562:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$632",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 601,
																		"src": "16562:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16562:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1194,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "16586:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1195,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "16595:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1189,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "16539:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16539:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16539:69:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$632",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1187,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "16512:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$632_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16512:97:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "16512:97:1"
											}
										]
									},
									"documentation": null,
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1200,
												"src": "16319:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$632",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1164,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 632,
													"src": "16319:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$632",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1200,
												"src": "16333:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1200,
												"src": "16350:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16318:46:1"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16374:0:1"
									},
									"scope": 1238,
									"src": "16288:328:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "17069:681:1",
										"statements": [
											{
												"assignments": [
													1209
												],
												"declarations": [
													{
														"constant": false,
														"id": 1209,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1236,
														"src": "17418:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1208,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17418:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1218,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1215,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "17472:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17478:34:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1212,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1203,
																	"src": "17452:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$632",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$632",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17444:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1210,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17444:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17444:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 925,
														"src": "17444:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17444:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17418:95:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1219,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "17527:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "17527:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17547:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17527:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1235,
												"nodeType": "IfStatement",
												"src": "17523:221:1",
												"trueBody": {
													"id": 1234,
													"nodeType": "Block",
													"src": "17550:194:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1226,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1209,
																				"src": "17667:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 1228,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17680:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1227,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "17680:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 1229,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "17679:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1224,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "17656:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "17656:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17656:30:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17688:44:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1223,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "17648:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17648:85:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1233,
															"nodeType": "ExpressionStatement",
															"src": "17648:85:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "16622:372:1",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1237,
												"src": "17028:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$632",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1202,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 632,
													"src": "17028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$632",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1237,
												"src": "17042:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17042:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17027:33:1"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17069:0:1"
									},
									"scope": 1238,
									"src": "16999:751:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2364,
							"src": "14648:3104:1"
						},
						{
							"id": 1239,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17814:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1240,
								"nodeType": "StructuredDocumentation",
								"src": "17839:665:1",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`\n (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 1632,
							"linearizedBaseContracts": [
								1632
							],
							"name": "EnumerableSet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1248,
									"members": [
										{
											"constant": false,
											"id": 1243,
											"mutability": "mutable",
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1248,
											"src": "19027:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 1241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19027:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1242,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "19027:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1247,
											"mutability": "mutable",
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1248,
											"src": "19178:37:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1246,
												"keyType": {
													"id": 1244,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "19178:28:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19198:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nodeType": "StructDefinition",
									"scope": 1632,
									"src": "18973:249:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "19461:335:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "19475:22:1",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1259,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1251,
																"src": "19486:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"argumentTypes": null,
																"id": 1260,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "19491:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1258,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "19476:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1248_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19476:21:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1286,
													"nodeType": "Block",
													"src": "19753:37:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19774:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1257,
															"id": 1285,
															"nodeType": "Return",
															"src": "19767:12:1"
														}
													]
												},
												"id": 1287,
												"nodeType": "IfStatement",
												"src": "19471:319:1",
												"trueBody": {
													"id": 1283,
													"nodeType": "Block",
													"src": "19499:248:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1268,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "19530:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1263,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "19513:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1243,
																		"src": "19513:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "19513:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19513:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1270,
															"nodeType": "ExpressionStatement",
															"src": "19513:23:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1271,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "19671:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1247,
																		"src": "19671:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1275,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1273,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "19684:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "19671:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1276,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "19693:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1243,
																		"src": "19693:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "19693:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19671:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1280,
															"nodeType": "ExpressionStatement",
															"src": "19671:40:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19732:4:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1257,
															"id": 1282,
															"nodeType": "Return",
															"src": "19725:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "19228:159:1",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1289,
												"src": "19406:15:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1250,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1248,
													"src": "19406:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1289,
												"src": "19423:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1252,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19405:32:1"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1289,
												"src": "19455:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19455:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19454:6:1"
									},
									"scope": 1632,
									"src": "19392:404:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "20036:1440:1",
										"statements": [
											{
												"assignments": [
													1300
												],
												"declarations": [
													{
														"constant": false,
														"id": 1300,
														"mutability": "mutable",
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "20146:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1299,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20146:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1305,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1301,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "20167:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1247,
														"src": "20167:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1304,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1303,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "20180:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20167:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20146:40:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1306,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "20201:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20215:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20201:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1366,
													"nodeType": "Block",
													"src": "21433:37:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21454:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1298,
															"id": 1365,
															"nodeType": "Return",
															"src": "21447:12:1"
														}
													]
												},
												"id": 1367,
												"nodeType": "IfStatement",
												"src": "20197:1273:1",
												"trueBody": {
													"id": 1363,
													"nodeType": "Block",
													"src": "20218:1209:1",
													"statements": [
														{
															"assignments": [
																1310
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1310,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1363,
																	"src": "20558:21:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1309,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20558:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1314,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1311,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1300,
																	"src": "20582:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20595:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20582:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20558:38:1"
														},
														{
															"assignments": [
																1316
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1316,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1363,
																	"src": "20610:17:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1315,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20610:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1322,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1317,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "20630:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1243,
																		"src": "20630:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "20630:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20651:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20630:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20610:42:1"
														},
														{
															"assignments": [
																1324
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1324,
																	"mutability": "mutable",
																	"name": "lastvalue",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1363,
																	"src": "20892:17:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1323,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "20892:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1329,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1325,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "20912:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1243,
																	"src": "20912:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 1328,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1327,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "20924:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20912:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20892:42:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1330,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "21026:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1243,
																		"src": "21026:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1334,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1332,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "21038:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "21026:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1335,
																	"name": "lastvalue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "21055:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "21026:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1337,
															"nodeType": "ExpressionStatement",
															"src": "21026:38:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1338,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "21130:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1247,
																		"src": "21130:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1342,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1340,
																		"name": "lastvalue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1324,
																		"src": "21143:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "21130:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1343,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "21156:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21172:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "21156:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21130:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1347,
															"nodeType": "ExpressionStatement",
															"src": "21130:43:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1348,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "21279:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1243,
																		"src": "21279:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "21279:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21279:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1354,
															"nodeType": "ExpressionStatement",
															"src": "21279:17:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "21364:26:1",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1355,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "21371:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1356,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1247,
																		"src": "21371:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1358,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1357,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "21384:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "21371:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1360,
															"nodeType": "ExpressionStatement",
															"src": "21364:26:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21412:4:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1298,
															"id": 1362,
															"nodeType": "Return",
															"src": "21405:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "19802:157:1",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1369,
												"src": "19981:15:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1291,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1248,
													"src": "19981:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1369,
												"src": "19998:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1293,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19998:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19980:32:1"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1369,
												"src": "20030:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1296,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20030:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20029:6:1"
									},
									"scope": 1632,
									"src": "19964:1512:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "21636:48:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1379,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1372,
																"src": "21653:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1247,
															"src": "21653:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1382,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1381,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "21666:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "21653:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21676:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21653:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1378,
												"id": 1385,
												"nodeType": "Return",
												"src": "21646:31:1"
											}
										]
									},
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "21482:70:1",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1387,
												"src": "21576:15:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1371,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1248,
													"src": "21576:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1387,
												"src": "21593:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21593:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21575:32:1"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1387,
												"src": "21630:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21630:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21629:6:1"
									},
									"scope": 1632,
									"src": "21557:127:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "21830:42:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1395,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "21847:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1396,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1243,
														"src": "21847:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "21847:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1394,
												"id": 1398,
												"nodeType": "Return",
												"src": "21840:25:1"
											}
										]
									},
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "21690:70:1",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1400,
												"src": "21782:15:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1389,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1248,
													"src": "21782:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21781:17:1"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1400,
												"src": "21821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21820:9:1"
									},
									"scope": 1632,
									"src": "21765:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "22280:125:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1411,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "22298:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 1412,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1243,
																	"src": "22298:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "22298:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1414,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "22319:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22298:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22326:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															},
															"value": "EnumerableSet: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															}
														],
														"id": 1410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "22290:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22290:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "22290:73:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1419,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "22380:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1243,
														"src": "22380:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1422,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1421,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "22392:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "22380:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1409,
												"id": 1423,
												"nodeType": "Return",
												"src": "22373:25:1"
											}
										]
									},
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "21877:322:1",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1425,
												"src": "22217:15:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1402,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1248,
													"src": "22217:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1425,
												"src": "22234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22216:32:1"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1425,
												"src": "22271:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22271:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22270:9:1"
									},
									"scope": 1632,
									"src": "22204:201:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1428,
									"members": [
										{
											"constant": false,
											"id": 1427,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1428,
											"src": "22458:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 1426,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1248,
												"src": "22458:3:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 1632,
									"src": "22430:45:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "22721:65:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1439,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "22743:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1428_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1427,
															"src": "22743:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1248_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1433,
																			"src": "22771:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22763:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1443,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "22763:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22763:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22755:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1441,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "22755:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22755:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1248_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1438,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "22738:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1248_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22738:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1437,
												"id": 1449,
												"nodeType": "Return",
												"src": "22731:48:1"
											}
										]
									},
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "22481:159:1",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1451,
												"src": "22658:22:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1428_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1430,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1428,
													"src": "22658:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1428_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1451,
												"src": "22682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22657:39:1"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1451,
												"src": "22715:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22715:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22714:6:1"
									},
									"scope": 1632,
									"src": "22645:141:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "23033:68:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1462,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1454,
																"src": "23058:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1428_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1427,
															"src": "23058:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1248_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1468,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1456,
																			"src": "23086:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "23078:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1466,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "23078:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23078:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23070:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1464,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "23070:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23070:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1248_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1461,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "23050:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1248_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23050:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1460,
												"id": 1472,
												"nodeType": "Return",
												"src": "23043:51:1"
											}
										]
									},
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "22792:157:1",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1474,
												"src": "22970:22:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1428_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1453,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1428,
													"src": "22970:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1428_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1474,
												"src": "22994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22969:39:1"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1474,
												"src": "23027:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23027:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23026:6:1"
									},
									"scope": 1632,
									"src": "22954:147:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1496,
										"nodeType": "Block",
										"src": "23268:70:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1485,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "23295:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1428_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1427,
															"src": "23295:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1248_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1491,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "23323:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "23315:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1489,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "23315:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23315:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23307:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1487,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "23307:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23307:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1248_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1484,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "23285:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1248_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23285:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1483,
												"id": 1495,
												"nodeType": "Return",
												"src": "23278:53:1"
											}
										]
									},
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "23107:70:1",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1497,
												"src": "23200:22:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1428_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1476,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1428,
													"src": "23200:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1428_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1497,
												"src": "23224:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23224:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23199:39:1"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1497,
												"src": "23262:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23262:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23261:6:1"
									},
									"scope": 1632,
									"src": "23182:156:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "23491:43:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1506,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1500,
																"src": "23516:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1428_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1427,
															"src": "23516:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1248_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1248_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1505,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "23508:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1248_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23508:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1504,
												"id": 1509,
												"nodeType": "Return",
												"src": "23501:26:1"
											}
										]
									},
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "23344:70:1",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1511,
												"src": "23435:22:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1428_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1499,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1428,
													"src": "23435:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1428_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23434:24:1"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1511,
												"src": "23482:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23482:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23481:9:1"
									},
									"scope": 1632,
									"src": "23419:115:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "23949:64:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1526,
																				"name": "set",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1514,
																				"src": "23986:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AddressSet_$1428_storage_ptr",
																					"typeString": "struct EnumerableSet.AddressSet storage pointer"
																				}
																			},
																			"id": 1527,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "_inner",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1427,
																			"src": "23986:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1248_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1528,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1516,
																			"src": "23998:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_Set_$1248_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1525,
																		"name": "_at",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1425,
																		"src": "23982:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1248_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																			"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																		}
																	},
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23982:22:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23974:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1523,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23974:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23974:31:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "23966:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1521,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23966:7:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23966:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1520,
												"id": 1532,
												"nodeType": "Return",
												"src": "23959:47:1"
											}
										]
									},
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "23539:322:1",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1534,
												"src": "23878:22:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1428_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1513,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1428,
													"src": "23878:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1428_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1534,
												"src": "23902:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23902:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23877:39:1"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1534,
												"src": "23940:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23939:9:1"
									},
									"scope": 1632,
									"src": "23866:147:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1537,
									"members": [
										{
											"constant": false,
											"id": 1536,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1537,
											"src": "24061:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 1535,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1248,
												"src": "24061:3:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1248_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nodeType": "StructDefinition",
									"scope": 1632,
									"src": "24036:42:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1556,
										"nodeType": "Block",
										"src": "24321:56:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1548,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1540,
																"src": "24343:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1537_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1536,
															"src": "24343:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1248_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1552,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1542,
																	"src": "24363:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24355:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1550,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "24355:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24355:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1248_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1547,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "24338:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1248_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24338:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1546,
												"id": 1555,
												"nodeType": "Return",
												"src": "24331:39:1"
											}
										]
									},
									"documentation": {
										"id": 1538,
										"nodeType": "StructuredDocumentation",
										"src": "24084:159:1",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1557,
												"src": "24261:19:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1537_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1539,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1537,
													"src": "24261:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1537_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1557,
												"src": "24282:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24282:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24260:36:1"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1557,
												"src": "24315:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24315:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24314:6:1"
									},
									"scope": 1632,
									"src": "24248:129:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1576,
										"nodeType": "Block",
										"src": "24621:59:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1568,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "24646:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1537_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1536,
															"src": "24646:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1248_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1572,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1562,
																	"src": "24666:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24658:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1570,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "24658:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24658:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1248_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1567,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "24638:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1248_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24638:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1566,
												"id": 1575,
												"nodeType": "Return",
												"src": "24631:42:1"
											}
										]
									},
									"documentation": {
										"id": 1558,
										"nodeType": "StructuredDocumentation",
										"src": "24383:157:1",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "24561:19:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1537_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1559,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1537,
													"src": "24561:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1537_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "24582:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24560:36:1"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "24615:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24615:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24614:6:1"
									},
									"scope": 1632,
									"src": "24545:135:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "24844:61:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1588,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "24871:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1537_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1536,
															"src": "24871:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1248_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1592,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1582,
																	"src": "24891:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24883:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1590,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "24883:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24883:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1248_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1587,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "24861:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1248_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24861:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1586,
												"id": 1595,
												"nodeType": "Return",
												"src": "24854:44:1"
											}
										]
									},
									"documentation": {
										"id": 1578,
										"nodeType": "StructuredDocumentation",
										"src": "24686:70:1",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1597,
												"src": "24779:19:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1537_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1579,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1537,
													"src": "24779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1537_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1597,
												"src": "24800:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24800:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24778:36:1"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1597,
												"src": "24838:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1584,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24838:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24837:6:1"
									},
									"scope": 1632,
									"src": "24761:144:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "25055:43:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1606,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1600,
																"src": "25080:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1537_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1536,
															"src": "25080:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1248_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1248_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1605,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "25072:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1248_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25072:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1604,
												"id": 1609,
												"nodeType": "Return",
												"src": "25065:26:1"
											}
										]
									},
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "24911:70:1",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1611,
												"src": "25002:19:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1537_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1599,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1537,
													"src": "25002:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1537_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25001:21:1"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1611,
												"src": "25046:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25046:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25045:9:1"
									},
									"scope": 1632,
									"src": "24986:112:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "25510:55:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1624,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1614,
																		"src": "25539:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1537_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1625,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1536,
																	"src": "25539:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1248_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1626,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "25551:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1248_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1623,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "25535:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1248_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25535:22:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "25527:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1621,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25527:7:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25527:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1620,
												"id": 1629,
												"nodeType": "Return",
												"src": "25520:38:1"
											}
										]
									},
									"documentation": {
										"id": 1612,
										"nodeType": "StructuredDocumentation",
										"src": "25103:322:1",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1631,
												"src": "25442:19:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1537_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1613,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1537,
													"src": "25442:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1537_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1631,
												"src": "25463:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25463:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25441:36:1"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1631,
												"src": "25501:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25501:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25500:9:1"
									},
									"scope": 1632,
									"src": "25430:135:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2364,
							"src": "18505:7062:1"
						},
						{
							"id": 1633,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "25621:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1654,
							"linearizedBaseContracts": [
								1654
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "26248:34:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1638,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "26265:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "26265:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1637,
												"id": 1640,
												"nodeType": "Return",
												"src": "26258:17:1"
											}
										]
									},
									"documentation": null,
									"id": 1642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26197:2:1"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1642,
												"src": "26231:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26231:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26230:17:1"
									},
									"scope": 1654,
									"src": "26178:104:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "26353:165:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1647,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "26363:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1654",
														"typeString": "contract Context"
													}
												},
												"id": 1648,
												"nodeType": "ExpressionStatement",
												"src": "26363:4:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1649,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "26503:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "26503:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1646,
												"id": 1651,
												"nodeType": "Return",
												"src": "26496:15:1"
											}
										]
									},
									"documentation": null,
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26305:2:1"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1653,
												"src": "26339:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1644,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26339:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26338:14:1"
									},
									"scope": 1654,
									"src": "26288:230:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2364,
							"src": "26146:374:1"
						},
						{
							"id": 1655,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "26577:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1657,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1654,
										"src": "27117:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1654",
											"typeString": "contract Context"
										}
									},
									"id": 1658,
									"nodeType": "InheritanceSpecifier",
									"src": "27117:7:1"
								}
							],
							"contractDependencies": [
								1654
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1656,
								"nodeType": "StructuredDocumentation",
								"src": "26602:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1761,
							"linearizedBaseContracts": [
								1761,
								1654
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1660,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1761,
									"src": "27131:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1659,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "27131:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1666,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1666,
												"src": "27187:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27187:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1666,
												"src": "27218:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27218:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27186:57:1"
									},
									"src": "27160:84:1"
								},
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "27370:135:1",
										"statements": [
											{
												"assignments": [
													1671
												],
												"declarations": [
													{
														"constant": false,
														"id": 1671,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1687,
														"src": "27380:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1670,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "27380:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1674,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1672,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "27400:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27400:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27380:32:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1675,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "27422:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1676,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "27431:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "27422:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "27422:18:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27484:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27476:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1680,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27476:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27476:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1684,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "27488:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1679,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "27455:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27455:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1686,
												"nodeType": "EmitStatement",
												"src": "27450:48:1"
											}
										]
									},
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "27250:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1688,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27358:2:1"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27370:0:1"
									},
									"scope": 1761,
									"src": "27346:159:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "27628:30:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1694,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1660,
													"src": "27645:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1693,
												"id": 1695,
												"nodeType": "Return",
												"src": "27638:13:1"
											}
										]
									},
									"documentation": {
										"id": 1689,
										"nodeType": "StructuredDocumentation",
										"src": "27511:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27595:2:1"
									},
									"returnParameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1697,
												"src": "27619:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27618:9:1"
									},
									"scope": 1761,
									"src": "27581:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "27767:95:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1701,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1660,
																"src": "27785:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1702,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "27795:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27795:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "27785:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27809:34:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "27777:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27777:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1707,
												"nodeType": "ExpressionStatement",
												"src": "27777:67:1"
											},
											{
												"id": 1708,
												"nodeType": "PlaceholderStatement",
												"src": "27854:1:1"
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "27664:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1710,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27764:2:1"
									},
									"src": "27746:116:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1731,
										"nodeType": "Block",
										"src": "28258:91:1",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1717,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "28294:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28310:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28302:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1718,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28302:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28302:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1716,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "28273:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28273:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1723,
												"nodeType": "EmitStatement",
												"src": "28268:45:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1724,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "28323:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28340:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28332:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1725,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "28332:7:1",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28332:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "28323:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "28323:19:1"
											}
										]
									},
									"documentation": {
										"id": 1711,
										"nodeType": "StructuredDocumentation",
										"src": "27868:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1732,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1714,
											"modifierName": {
												"argumentTypes": null,
												"id": 1713,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1710,
												"src": "28248:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28248:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28230:2:1"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28258:0:1"
									},
									"scope": 1761,
									"src": "28204:145:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "28568:170:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1741,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1735,
																"src": "28586:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28606:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28598:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1742,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28598:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28598:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "28586:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28610:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "28578:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28578:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "28578:73:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1751,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "28687:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1752,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "28695:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1750,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "28666:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28666:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1754,
												"nodeType": "EmitStatement",
												"src": "28661:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1755,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "28714:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1756,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "28723:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28714:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "28714:17:1"
											}
										]
									},
									"documentation": {
										"id": 1733,
										"nodeType": "StructuredDocumentation",
										"src": "28355:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1738,
											"modifierName": {
												"argumentTypes": null,
												"id": 1737,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1710,
												"src": "28558:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28558:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1760,
												"src": "28525:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28525:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28524:18:1"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28568:0:1"
									},
									"scope": 1761,
									"src": "28498:240:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2364,
							"src": "27097:1643:1"
						},
						{
							"id": 1762,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "28800:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1764,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1654,
										"src": "30010:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1654",
											"typeString": "contract Context"
										}
									},
									"id": 1765,
									"nodeType": "InheritanceSpecifier",
									"src": "30010:7:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1766,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 632,
										"src": "30019:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$632",
											"typeString": "contract IERC20"
										}
									},
									"id": 1767,
									"nodeType": "InheritanceSpecifier",
									"src": "30019:6:1"
								}
							],
							"contractDependencies": [
								632,
								1654
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1763,
								"nodeType": "StructuredDocumentation",
								"src": "28829:1162:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 2263,
							"linearizedBaseContracts": [
								2263,
								632,
								1654
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1770,
									"libraryName": {
										"contractScope": null,
										"id": 1768,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 826,
										"src": "30038:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$826",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "30032:27:1",
									"typeName": {
										"id": 1769,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30051:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1773,
									"libraryName": {
										"contractScope": null,
										"id": 1771,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1029,
										"src": "30070:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1029",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "30064:26:1",
									"typeName": {
										"id": 1772,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "30082:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 1777,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2263,
									"src": "30096:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1776,
										"keyType": {
											"id": 1774,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "30105:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "30096:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1775,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "30116:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1783,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2263,
									"src": "30149:69:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1782,
										"keyType": {
											"id": 1778,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "30158:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "30149:49:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1781,
											"keyType": {
												"id": 1779,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "30178:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "30169:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1780,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "30189:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1785,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2263,
									"src": "30225:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1784,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30225:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1787,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2263,
									"src": "30260:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1786,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "30260:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1789,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2263,
									"src": "30286:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1788,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "30286:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1791,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2263,
									"src": "30314:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1790,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "30314:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "30722:79:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1799,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "30732:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1800,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "30740:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "30732:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1802,
												"nodeType": "ExpressionStatement",
												"src": "30732:12:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1803,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1789,
														"src": "30754:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1804,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1796,
														"src": "30764:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "30754:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1806,
												"nodeType": "ExpressionStatement",
												"src": "30754:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1807,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "30780:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 1808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30792:2:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "30780:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1810,
												"nodeType": "ExpressionStatement",
												"src": "30780:14:1"
											}
										]
									},
									"documentation": {
										"id": 1792,
										"nodeType": "StructuredDocumentation",
										"src": "30344:311:1",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1812,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1812,
												"src": "30673:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1793,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "30673:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1812,
												"src": "30693:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1795,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "30693:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30672:42:1"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30722:0:1"
									},
									"scope": 2263,
									"src": "30660:141:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1820,
										"nodeType": "Block",
										"src": "30918:29:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1818,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1787,
													"src": "30935:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1817,
												"id": 1819,
												"nodeType": "Return",
												"src": "30928:12:1"
											}
										]
									},
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "30807:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30879:2:1"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1821,
												"src": "30903:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1815,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "30903:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30902:15:1"
									},
									"scope": 2263,
									"src": "30866:81:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1829,
										"nodeType": "Block",
										"src": "31114:31:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1827,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1789,
													"src": "31131:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1826,
												"id": 1828,
												"nodeType": "Return",
												"src": "31124:14:1"
											}
										]
									},
									"documentation": {
										"id": 1822,
										"nodeType": "StructuredDocumentation",
										"src": "30953:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31075:2:1"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1830,
												"src": "31099:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1824,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "31099:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31098:15:1"
									},
									"scope": 2263,
									"src": "31060:85:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "31816:33:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1836,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1791,
													"src": "31833:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1835,
												"id": 1837,
												"nodeType": "Return",
												"src": "31826:16:1"
											}
										]
									},
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "31151:612:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31785:2:1"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1839,
												"src": "31809:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1833,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "31809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31808:7:1"
									},
									"scope": 2263,
									"src": "31768:81:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										563
									],
									"body": {
										"id": 1848,
										"nodeType": "Block",
										"src": "31971:36:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1846,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1785,
													"src": "31988:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1845,
												"id": 1847,
												"nodeType": "Return",
												"src": "31981:19:1"
											}
										]
									},
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "31855:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1842,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "31944:8:1"
									},
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31929:2:1"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1849,
												"src": "31962:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31962:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31961:9:1"
									},
									"scope": 2263,
									"src": "31909:98:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										571
									],
									"body": {
										"id": 1862,
										"nodeType": "Block",
										"src": "32140:42:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1858,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "32157:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1860,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1859,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1852,
														"src": "32167:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32157:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1857,
												"id": 1861,
												"nodeType": "Return",
												"src": "32150:25:1"
											}
										]
									},
									"documentation": {
										"id": 1850,
										"nodeType": "StructuredDocumentation",
										"src": "32013:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1854,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32113:8:1"
									},
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1863,
												"src": "32084:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32084:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32083:17:1"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1863,
												"src": "32131:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32131:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32130:9:1"
									},
									"scope": 2263,
									"src": "32065:117:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										581
									],
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "32477:80:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1875,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "32497:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32497:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1877,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "32511:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1878,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "32522:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1874,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2084,
														"src": "32487:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32487:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1880,
												"nodeType": "ExpressionStatement",
												"src": "32487:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "32546:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1873,
												"id": 1882,
												"nodeType": "Return",
												"src": "32539:11:1"
											}
										]
									},
									"documentation": {
										"id": 1864,
										"nodeType": "StructuredDocumentation",
										"src": "32188:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 1884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1870,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32453:8:1"
									},
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1884,
												"src": "32403:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1884,
												"src": "32422:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32422:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32402:35:1"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1884,
												"src": "32471:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32471:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32470:6:1"
									},
									"scope": 2263,
									"src": "32385:172:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										591
									],
									"body": {
										"id": 1901,
										"nodeType": "Block",
										"src": "32713:51:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1895,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "32730:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1897,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1896,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1887,
															"src": "32742:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32730:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1899,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1898,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1889,
														"src": "32749:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32730:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1894,
												"id": 1900,
												"nodeType": "Return",
												"src": "32723:34:1"
											}
										]
									},
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "32563:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1891,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32686:8:1"
									},
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1902,
												"src": "32634:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1902,
												"src": "32649:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32649:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32633:32:1"
									},
									"returnParameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1902,
												"src": "32704:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32704:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32703:9:1"
									},
									"scope": 2263,
									"src": "32615:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										601
									],
									"body": {
										"id": 1922,
										"nodeType": "Block",
										"src": "32991:77:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1914,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "33010:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33010:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1916,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "33024:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1917,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "33033:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1913,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2240,
														"src": "33001:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33001:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1919,
												"nodeType": "ExpressionStatement",
												"src": "33001:39:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "33057:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1912,
												"id": 1921,
												"nodeType": "Return",
												"src": "33050:11:1"
											}
										]
									},
									"documentation": {
										"id": 1903,
										"nodeType": "StructuredDocumentation",
										"src": "32770:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1909,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32967:8:1"
									},
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1923,
												"src": "32919:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32919:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1923,
												"src": "32936:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32936:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32918:33:1"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1923,
												"src": "32985:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1910,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32985:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32984:6:1"
									},
									"scope": 2263,
									"src": "32902:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										613
									],
									"body": {
										"id": 1960,
										"nodeType": "Block",
										"src": "33640:205:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1937,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1926,
															"src": "33660:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1938,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1928,
															"src": "33668:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1939,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "33679:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1936,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2084,
														"src": "33650:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33650:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1941,
												"nodeType": "ExpressionStatement",
												"src": "33650:36:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1943,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1926,
															"src": "33705:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1944,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "33713:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33713:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1953,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1930,
																	"src": "33765:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33773:42:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1946,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1783,
																			"src": "33727:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1948,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1947,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1926,
																			"src": "33739:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "33727:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1951,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1949,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1642,
																			"src": "33747:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33747:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "33727:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 704,
																"src": "33727:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33727:89:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1942,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2240,
														"src": "33696:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33696:121:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "33696:121:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "33834:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1935,
												"id": 1959,
												"nodeType": "Return",
												"src": "33827:11:1"
											}
										]
									},
									"documentation": {
										"id": 1924,
										"nodeType": "StructuredDocumentation",
										"src": "33074:449:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1932,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "33616:8:1"
									},
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1961,
												"src": "33550:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33550:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1961,
												"src": "33566:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1961,
												"src": "33585:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33585:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33549:51:1"
									},
									"returnParameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1961,
												"src": "33634:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1933,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33634:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33633:6:1"
									},
									"scope": 2263,
									"src": "33528:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1988,
										"nodeType": "Block",
										"src": "34334:121:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1972,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "34353:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34353:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1974,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1964,
															"src": "34367:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1982,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1966,
																	"src": "34415:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1975,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1783,
																			"src": "34376:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1978,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1976,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1642,
																				"src": "34388:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 1977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34388:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "34376:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1980,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1979,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1964,
																		"src": "34402:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "34376:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 659,
																"src": "34376:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34376:50:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1971,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2240,
														"src": "34344:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34344:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1985,
												"nodeType": "ExpressionStatement",
												"src": "34344:83:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "34444:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1970,
												"id": 1987,
												"nodeType": "Return",
												"src": "34437:11:1"
											}
										]
									},
									"documentation": {
										"id": 1962,
										"nodeType": "StructuredDocumentation",
										"src": "33851:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 1989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1989,
												"src": "34267:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34267:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1989,
												"src": "34284:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34284:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34266:37:1"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1989,
												"src": "34328:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34328:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34327:6:1"
									},
									"scope": 2263,
									"src": "34240:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2017,
										"nodeType": "Block",
										"src": "35041:167:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2000,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "35060:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35060:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2002,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1992,
															"src": "35074:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2010,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1994,
																	"src": "35122:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35139:39:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 2003,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1783,
																			"src": "35083:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2006,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2004,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1642,
																				"src": "35095:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 2005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35095:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "35083:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2008,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2007,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1992,
																		"src": "35109:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "35083:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 704,
																"src": "35083:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35083:96:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1999,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2240,
														"src": "35051:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35051:129:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2014,
												"nodeType": "ExpressionStatement",
												"src": "35051:129:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "35197:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1998,
												"id": 2016,
												"nodeType": "Return",
												"src": "35190:11:1"
											}
										]
									},
									"documentation": {
										"id": 1990,
										"nodeType": "StructuredDocumentation",
										"src": "34461:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 2018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2018,
												"src": "34969:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2018,
												"src": "34986:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34986:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34968:42:1"
									},
									"returnParameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2018,
												"src": "35035:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1996,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35035:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35034:6:1"
									},
									"scope": 2263,
									"src": "34942:266:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2083,
										"nodeType": "Block",
										"src": "35769:443:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2029,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "35787:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "35805:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "35797:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2030,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "35797:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35797:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "35787:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35809:39:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 2028,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "35779:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35779:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2037,
												"nodeType": "ExpressionStatement",
												"src": "35779:70:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2039,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "35867:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "35888:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "35880:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2040,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "35880:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35880:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "35867:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35892:37:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 2038,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "35859:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35859:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "35859:71:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2049,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "35962:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2050,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "35970:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2051,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2025,
															"src": "35981:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2048,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2262,
														"src": "35941:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35941:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2053,
												"nodeType": "ExpressionStatement",
												"src": "35941:47:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2054,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "35999:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2056,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2055,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "36009:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "35999:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2061,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "36041:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36049:40:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2057,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "36019:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2059,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2058,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2021,
																	"src": "36029:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36019:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 704,
															"src": "36019:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 2063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36019:71:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35999:91:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2065,
												"nodeType": "ExpressionStatement",
												"src": "35999:91:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2066,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "36100:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2068,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2067,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "36110:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "36100:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2073,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "36148:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2069,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "36123:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2071,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2070,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2023,
																	"src": "36133:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36123:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 659,
															"src": "36123:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36123:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36100:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2076,
												"nodeType": "ExpressionStatement",
												"src": "36100:55:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2078,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "36179:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2079,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "36187:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2080,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2025,
															"src": "36198:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2077,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "36170:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36170:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2082,
												"nodeType": "EmitStatement",
												"src": "36165:40:1"
											}
										]
									},
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "35214:463:1",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 2084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2084,
												"src": "35701:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2084,
												"src": "35717:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35717:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2084,
												"src": "35736:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35736:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35700:51:1"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35769:0:1"
									},
									"scope": 2263,
									"src": "35682:530:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2138,
										"nodeType": "Block",
										"src": "36547:305:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2093,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "36565:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36584:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "36576:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2094,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "36576:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36576:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "36565:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36588:33:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 2092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "36557:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36557:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2101,
												"nodeType": "ExpressionStatement",
												"src": "36557:65:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36662:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36654:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2103,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36654:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36654:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2107,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "36666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2108,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "36675:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2102,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2262,
														"src": "36633:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36633:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2110,
												"nodeType": "ExpressionStatement",
												"src": "36633:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2111,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1785,
														"src": "36693:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2114,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "36725:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2112,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "36708:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 659,
															"src": "36708:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36708:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36693:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2117,
												"nodeType": "ExpressionStatement",
												"src": "36693:39:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2118,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "36742:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2120,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2119,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "36752:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "36742:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2125,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "36786:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2121,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "36763:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2123,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2122,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2087,
																	"src": "36773:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36763:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 659,
															"src": "36763:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36763:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36742:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2128,
												"nodeType": "ExpressionStatement",
												"src": "36742:51:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36825:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36817:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2130,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36817:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36817:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2134,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "36829:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2135,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "36838:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2129,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "36808:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36808:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2137,
												"nodeType": "EmitStatement",
												"src": "36803:42:1"
											}
										]
									},
									"documentation": {
										"id": 2085,
										"nodeType": "StructuredDocumentation",
										"src": "36218:259:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 2139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2139,
												"src": "36497:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36497:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2139,
												"src": "36514:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36514:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "36496:33:1"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36547:0:1"
									},
									"scope": 2263,
									"src": "36482:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2194,
										"nodeType": "Block",
										"src": "37236:345:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2148,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "37254:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37273:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "37265:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2149,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "37265:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37265:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "37254:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 2154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37277:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 2147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "37246:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37246:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2156,
												"nodeType": "ExpressionStatement",
												"src": "37246:67:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2158,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "37345:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37362:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37354:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2159,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37354:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37354:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2163,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "37366:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2157,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2262,
														"src": "37324:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37324:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2165,
												"nodeType": "ExpressionStatement",
												"src": "37324:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2166,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "37384:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2168,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2167,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "37394:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37384:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2173,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "37428:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37436:36:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2169,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "37405:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2171,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2170,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2142,
																	"src": "37415:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "37405:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 704,
															"src": "37405:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 2175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37405:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37384:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2177,
												"nodeType": "ExpressionStatement",
												"src": "37384:89:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2178,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1785,
														"src": "37483:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2181,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "37515:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2179,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "37498:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 676,
															"src": "37498:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37498:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37483:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2184,
												"nodeType": "ExpressionStatement",
												"src": "37483:39:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "37546:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37563:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37555:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2187,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37555:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37555:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2191,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "37567:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2185,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "37537:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37537:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2193,
												"nodeType": "EmitStatement",
												"src": "37532:42:1"
											}
										]
									},
									"documentation": {
										"id": 2140,
										"nodeType": "StructuredDocumentation",
										"src": "36858:308:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 2195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2195,
												"src": "37186:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37186:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2195,
												"src": "37203:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37203:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "37185:33:1"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37236:0:1"
									},
									"scope": 2263,
									"src": "37171:410:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2239,
										"nodeType": "Block",
										"src": "38089:257:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2206,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2198,
																"src": "38107:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38124:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38116:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2207,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "38116:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38116:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "38107:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38128:38:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 2205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "38099:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38099:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2214,
												"nodeType": "ExpressionStatement",
												"src": "38099:68:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2216,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "38185:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38204:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38196:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2217,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "38196:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38196:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "38185:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38208:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 2215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "38177:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38177:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2224,
												"nodeType": "ExpressionStatement",
												"src": "38177:68:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2225,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1783,
																"src": "38256:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2228,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2226,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2198,
																"src": "38268:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "38256:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2229,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2227,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2200,
															"src": "38275:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38256:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2230,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2202,
														"src": "38286:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38256:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2232,
												"nodeType": "ExpressionStatement",
												"src": "38256:36:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2234,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2198,
															"src": "38316:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2235,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2200,
															"src": "38323:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2236,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "38332:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2233,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "38307:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38307:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2238,
												"nodeType": "EmitStatement",
												"src": "38302:37:1"
											}
										]
									},
									"documentation": {
										"id": 2196,
										"nodeType": "StructuredDocumentation",
										"src": "37587:414:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 2240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2240,
												"src": "38024:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38024:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2240,
												"src": "38039:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2240,
												"src": "38056:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38056:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38023:48:1"
									},
									"returnParameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38089:0:1"
									},
									"scope": 2263,
									"src": "38006:340:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2250,
										"nodeType": "Block",
										"src": "38719:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2246,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "38729:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2247,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2243,
														"src": "38741:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "38729:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2249,
												"nodeType": "ExpressionStatement",
												"src": "38729:21:1"
											}
										]
									},
									"documentation": {
										"id": 2241,
										"nodeType": "StructuredDocumentation",
										"src": "38352:312:1",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 2251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2251,
												"src": "38693:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2242,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "38693:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38692:17:1"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38719:0:1"
									},
									"scope": 2263,
									"src": "38669:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2261,
										"nodeType": "Block",
										"src": "39433:3:1",
										"statements": []
									},
									"documentation": {
										"id": 2252,
										"nodeType": "StructuredDocumentation",
										"src": "38763:576:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2262,
												"src": "39374:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2262,
												"src": "39388:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39388:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2262,
												"src": "39400:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39400:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39373:42:1"
									},
									"returnParameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39433:0:1"
									},
									"scope": 2263,
									"src": "39344:92:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2364,
							"src": "29992:9446:1"
						},
						{
							"id": 2264,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "39506:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2363,
							"linearizedBaseContracts": [
								2363
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 2265,
										"nodeType": "StructuredDocumentation",
										"src": "39551:62:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39636:2:1"
									},
									"returnParameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2270,
												"src": "39662:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39661:9:1"
									},
									"scope": 2363,
									"src": "39616:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2271,
										"nodeType": "StructuredDocumentation",
										"src": "39675:47:1",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 2276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39742:2:1"
									},
									"returnParameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2276,
												"src": "39768:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2273,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "39768:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39767:7:1"
									},
									"scope": 2363,
									"src": "39725:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "39779:45:1",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39842:2:1"
									},
									"returnParameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2282,
												"src": "39868:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39868:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39867:15:1"
									},
									"scope": 2363,
									"src": "39827:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2283,
										"nodeType": "StructuredDocumentation",
										"src": "39887:41:1",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 2288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39944:2:1"
									},
									"returnParameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2288,
												"src": "39970:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39970:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39969:15:1"
									},
									"scope": 2363,
									"src": "39931:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2289,
										"nodeType": "StructuredDocumentation",
										"src": "39989:48:1",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 2294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40057:2:1"
									},
									"returnParameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2294,
												"src": "40083:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40083:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40082:9:1"
									},
									"scope": 2363,
									"src": "40040:52:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2295,
										"nodeType": "StructuredDocumentation",
										"src": "40096:68:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2302,
												"src": "40186:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40186:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40185:17:1"
									},
									"returnParameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2302,
												"src": "40226:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40225:9:1"
									},
									"scope": 2363,
									"src": "40167:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2303,
										"nodeType": "StructuredDocumentation",
										"src": "40239:197:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2312,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2312,
												"src": "40457:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40457:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2312,
												"src": "40476:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40476:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40456:35:1"
									},
									"returnParameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2312,
												"src": "40510:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40510:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40509:6:1"
									},
									"scope": 2363,
									"src": "40439:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2313,
										"nodeType": "StructuredDocumentation",
										"src": "40520:252:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2322,
												"src": "40794:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2322,
												"src": "40810:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40810:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40793:33:1"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2322,
												"src": "40850:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40850:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40849:9:1"
									},
									"scope": 2363,
									"src": "40775:84:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2323,
										"nodeType": "StructuredDocumentation",
										"src": "40863:616:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2332,
												"src": "41499:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41499:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2332,
												"src": "41516:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41516:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "41498:33:1"
									},
									"returnParameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2332,
												"src": "41550:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2329,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41550:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "41549:6:1"
									},
									"scope": 2363,
									"src": "41482:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2333,
										"nodeType": "StructuredDocumentation",
										"src": "41560:280:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2344,
												"src": "41865:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2344,
												"src": "41881:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41881:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2344,
												"src": "41900:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "41864:51:1"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2344,
												"src": "41934:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2341,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41934:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "41933:6:1"
									},
									"scope": 2363,
									"src": "41843:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2345,
										"nodeType": "StructuredDocumentation",
										"src": "41944:148:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 2353,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2347,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2353,
												"src": "42110:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2349,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2353,
												"src": "42132:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42132:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2353,
												"src": "42152:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42152:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "42109:57:1"
									},
									"src": "42095:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2354,
										"nodeType": "StructuredDocumentation",
										"src": "42171:142:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 2362,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2362,
												"src": "42331:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2362,
												"src": "42354:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42354:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2360,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2362,
												"src": "42379:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42379:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "42330:63:1"
									},
									"src": "42316:78:1"
								}
							],
							"scope": 2364,
							"src": "39530:2866:1"
						}
					],
					"src": "235:42164:1"
				},
				"id": 1
			}
		}
	}
}